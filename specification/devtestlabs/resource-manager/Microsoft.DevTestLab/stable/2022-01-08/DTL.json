{
	"swagger": "2.0",
	"info": {
		"title": "Dynamics 365 Business Central",
		"description": "Business Central Standard APIs",
		"version": "1.0.0"
	},
	"host": "api.businesscentral.dynamics.com",
	"basePath": "/v1.0/api/v1.0",
	"schemes": [
		"https"
	],
	"paths": {
		"/companies": {
			"get": {
				"tags": [
					"companies"
				],
				"summary": "Returns a list of companies",
				"operationId": "getCompanies",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"systemVersion",
								"name",
								"displayName",
								"businessProfileId"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of companies",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/company"
									}
								}
							}
						}
					}
				}
			}
		},
		"/companies({company_id})": {
			"get": {
				"tags": [
					"companies"
				],
				"summary": "Obtain information about the company from its unique company_id",
				"operationId": "getCompanyById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested company",
						"schema": {
							"$ref": "#/definitions/company"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"systemVersion",
							"name",
							"displayName",
							"businessProfileId"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/items": {
			"get": {
				"tags": [
					"items"
				],
				"summary": "Returns a list of items",
				"operationId": "getItems",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"picture",
								"defaultDimensions",
								"itemCategory"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"number",
								"displayName",
								"type",
								"itemCategoryId",
								"itemCategoryCode",
								"blocked",
								"baseUnitOfMeasureId",
								"baseUnitOfMeasure",
								"gtin",
								"inventory",
								"unitPrice",
								"priceIncludesTax",
								"unitCost",
								"taxGroupId",
								"taxGroupCode",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of items",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/item"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"items"
				],
				"summary": "Lets a user post a new item",
				"operationId": "postItem",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"number": {
									"maxLength": 20,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"type": {
									"type": "string"
								},
								"itemCategoryId": {
									"format": "uuid",
									"type": "string"
								},
								"itemCategoryCode": {
									"maxLength": 20,
									"type": "string"
								},
								"blocked": {
									"type": "boolean"
								},
								"baseUnitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"baseUnitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"gtin": {
									"maxLength": 14,
									"type": "string"
								},
								"inventory": {
									"format": "decimal",
									"type": "number"
								},
								"unitPrice": {
									"format": "decimal",
									"type": "number"
								},
								"priceIncludesTax": {
									"type": "boolean"
								},
								"unitCost": {
									"format": "decimal",
									"type": "number"
								},
								"taxGroupId": {
									"format": "uuid",
									"type": "string"
								},
								"taxGroupCode": {
									"maxLength": 20,
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "item succesfully created",
						"schema": {
							"$ref": "#/definitions/item"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/items({item_id})": {
			"get": {
				"tags": [
					"items"
				],
				"summary": "Obtain information about the item from its unique item_id",
				"operationId": "getItemById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested item",
						"schema": {
							"$ref": "#/definitions/item"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"items"
				],
				"summary": "Allows the user to delete the specified item",
				"operationId": "deleteItemById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the item with the specified item_id"
					}
				}
			},
			"patch": {
				"tags": [
					"items"
				],
				"summary": "Lets the user patch the specified item",
				"operationId": "patchItemById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"number": {
									"maxLength": 20,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"type": {
									"type": "string"
								},
								"itemCategoryId": {
									"format": "uuid",
									"type": "string"
								},
								"itemCategoryCode": {
									"maxLength": 20,
									"type": "string"
								},
								"blocked": {
									"type": "boolean"
								},
								"baseUnitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"baseUnitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"gtin": {
									"maxLength": 14,
									"type": "string"
								},
								"inventory": {
									"format": "decimal",
									"type": "number"
								},
								"unitPrice": {
									"format": "decimal",
									"type": "number"
								},
								"priceIncludesTax": {
									"type": "boolean"
								},
								"unitCost": {
									"format": "decimal",
									"type": "number"
								},
								"taxGroupId": {
									"format": "uuid",
									"type": "string"
								},
								"taxGroupCode": {
									"maxLength": 20,
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the item with the specified item_id",
						"schema": {
							"$ref": "#/definitions/item"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "item_id",
					"description": "id for item",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"picture",
							"defaultDimensions",
							"itemCategory"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"number",
							"displayName",
							"type",
							"itemCategoryId",
							"itemCategoryCode",
							"blocked",
							"baseUnitOfMeasureId",
							"baseUnitOfMeasure",
							"gtin",
							"inventory",
							"unitPrice",
							"priceIncludesTax",
							"unitCost",
							"taxGroupId",
							"taxGroupCode",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/items({item_id})/picture": {
			"get": {
				"tags": [
					"picture"
				],
				"summary": "Returns a list of picture",
				"operationId": "getPictureForItem",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"width",
								"height",
								"contentType",
								"content"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of picture",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/picture"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "item_id",
					"description": "id for item",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/items({item_id})/picture({picture_id})": {
			"get": {
				"tags": [
					"picture"
				],
				"summary": "Obtain information about the picture from its unique picture_id",
				"operationId": "getPictureForItemById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested picture",
						"schema": {
							"$ref": "#/definitions/picture"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"picture"
				],
				"summary": "Allows the user to delete the specified picture",
				"operationId": "deletePictureForItemByIdById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the picture with the specified picture_id"
					}
				}
			},
			"patch": {
				"tags": [
					"picture"
				],
				"summary": "Lets the user patch the specified picture",
				"operationId": "patchPictureForItemByIdById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"width": {
									"format": "int32",
									"type": "integer"
								},
								"height": {
									"format": "int32",
									"type": "integer"
								},
								"contentType": {
									"maxLength": 100,
									"type": "string"
								},
								"content": {
									"format": "binary",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the picture with the specified picture_id",
						"schema": {
							"$ref": "#/definitions/picture"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "item_id",
					"description": "id for item",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "picture_id",
					"description": "id for picture",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"width",
							"height",
							"contentType",
							"content"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/items({item_id})/defaultDimensions": {
			"get": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Returns a list of defaultDimensions",
				"operationId": "getDefaultDimensionsForItem",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"account",
								"dimension",
								"dimensionValue"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"parentId",
								"dimensionId",
								"dimensionCode",
								"dimensionValueId",
								"dimensionValueCode",
								"postingValidation"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of defaultDimensions",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/defaultDimensions"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Lets a user post a new defaultDimensions",
				"operationId": "postDefaultDimensionsForItem",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"parentId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionCode": {
									"maxLength": 20,
									"type": "string"
								},
								"dimensionValueId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionValueCode": {
									"maxLength": 20,
									"type": "string"
								},
								"postingValidation": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "defaultDimensions succesfully created",
						"schema": {
							"$ref": "#/definitions/defaultDimensions"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "item_id",
					"description": "id for item",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/items({item_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})": {
			"get": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Obtain information about the defaultDimensions from its unique defaultDimensions_parentId, defaultDimensions_dimensionId",
				"operationId": "getDefaultDimensionsForItemByDimensionIdByParentId",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested defaultDimensions",
						"schema": {
							"$ref": "#/definitions/defaultDimensions"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Allows the user to delete the specified defaultDimensions",
				"operationId": "deleteDefaultDimensionsForItemByDimensionIdByParentIdById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the defaultDimensions with the specified defaultDimensions_parentId, defaultDimensions_dimensionId"
					}
				}
			},
			"patch": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Lets the user patch the specified defaultDimensions",
				"operationId": "patchDefaultDimensionsForItemByDimensionIdByParentIdById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"parentId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionCode": {
									"maxLength": 20,
									"type": "string"
								},
								"dimensionValueId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionValueCode": {
									"maxLength": 20,
									"type": "string"
								},
								"postingValidation": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the defaultDimensions with the specified defaultDimensions_parentId, defaultDimensions_dimensionId",
						"schema": {
							"$ref": "#/definitions/defaultDimensions"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "item_id",
					"description": "id for item",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "defaultDimensions_parentId",
					"description": "parentId for defaultDimensions",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "defaultDimensions_dimensionId",
					"description": "dimensionId for defaultDimensions",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"account",
							"dimension",
							"dimensionValue"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"parentId",
							"dimensionId",
							"dimensionCode",
							"dimensionValueId",
							"dimensionValueCode",
							"postingValidation"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/picture": {
			"get": {
				"tags": [
					"picture"
				],
				"summary": "Returns a list of picture",
				"operationId": "getPicture",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"width",
								"height",
								"contentType",
								"content"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of picture",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/picture"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/picture({picture_id})": {
			"get": {
				"tags": [
					"picture"
				],
				"summary": "Obtain information about the picture from its unique picture_id",
				"operationId": "getPictureById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested picture",
						"schema": {
							"$ref": "#/definitions/picture"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"picture"
				],
				"summary": "Allows the user to delete the specified picture",
				"operationId": "deletePictureById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the picture with the specified picture_id"
					}
				}
			},
			"patch": {
				"tags": [
					"picture"
				],
				"summary": "Lets the user patch the specified picture",
				"operationId": "patchPictureById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"width": {
									"format": "int32",
									"type": "integer"
								},
								"height": {
									"format": "int32",
									"type": "integer"
								},
								"contentType": {
									"maxLength": 100,
									"type": "string"
								},
								"content": {
									"format": "binary",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the picture with the specified picture_id",
						"schema": {
							"$ref": "#/definitions/picture"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "picture_id",
					"description": "id for picture",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"width",
							"height",
							"contentType",
							"content"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/defaultDimensions": {
			"get": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Returns a list of defaultDimensions",
				"operationId": "getDefaultDimensions",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"account",
								"dimension",
								"dimensionValue"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"parentId",
								"dimensionId",
								"dimensionCode",
								"dimensionValueId",
								"dimensionValueCode",
								"postingValidation"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of defaultDimensions",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/defaultDimensions"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Lets a user post a new defaultDimensions",
				"operationId": "postDefaultDimensions",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"parentId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionCode": {
									"maxLength": 20,
									"type": "string"
								},
								"dimensionValueId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionValueCode": {
									"maxLength": 20,
									"type": "string"
								},
								"postingValidation": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "defaultDimensions succesfully created",
						"schema": {
							"$ref": "#/definitions/defaultDimensions"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})": {
			"get": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Obtain information about the defaultDimensions from its unique defaultDimensions_parentId, defaultDimensions_dimensionId",
				"operationId": "getDefaultDimensionsByDimensionIdByParentId",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested defaultDimensions",
						"schema": {
							"$ref": "#/definitions/defaultDimensions"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Allows the user to delete the specified defaultDimensions",
				"operationId": "deleteDefaultDimensionsByDimensionIdByParentId",
				"responses": {
					"204": {
						"description": "Succesfully deleted the defaultDimensions with the specified defaultDimensions_parentId, defaultDimensions_dimensionId"
					}
				}
			},
			"patch": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Lets the user patch the specified defaultDimensions",
				"operationId": "patchDefaultDimensionsByDimensionIdByParentId",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"parentId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionCode": {
									"maxLength": 20,
									"type": "string"
								},
								"dimensionValueId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionValueCode": {
									"maxLength": 20,
									"type": "string"
								},
								"postingValidation": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the defaultDimensions with the specified defaultDimensions_parentId, defaultDimensions_dimensionId",
						"schema": {
							"$ref": "#/definitions/defaultDimensions"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "defaultDimensions_parentId",
					"description": "parentId for defaultDimensions",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "defaultDimensions_dimensionId",
					"description": "dimensionId for defaultDimensions",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"account",
							"dimension",
							"dimensionValue"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"parentId",
							"dimensionId",
							"dimensionCode",
							"dimensionValueId",
							"dimensionValueCode",
							"postingValidation"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/customers": {
			"get": {
				"tags": [
					"customers"
				],
				"summary": "Returns a list of customers",
				"operationId": "getCustomers",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"customerFinancialDetails",
								"picture",
								"defaultDimensions",
								"currency",
								"paymentTerm",
								"shipmentMethod",
								"paymentMethod"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"number",
								"displayName",
								"type",
								"address",
								"phoneNumber",
								"email",
								"website",
								"taxLiable",
								"taxAreaId",
								"taxAreaDisplayName",
								"taxRegistrationNumber",
								"currencyId",
								"currencyCode",
								"paymentTermsId",
								"shipmentMethodId",
								"paymentMethodId",
								"blocked",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of customers",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/customer"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"customers"
				],
				"summary": "Lets a user post a new customer",
				"operationId": "postCustomer",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"number": {
									"maxLength": 20,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"type": {
									"type": "string"
								},
								"address": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"phoneNumber": {
									"maxLength": 30,
									"type": "string"
								},
								"email": {
									"maxLength": 80,
									"type": "string"
								},
								"website": {
									"maxLength": 80,
									"type": "string"
								},
								"taxLiable": {
									"type": "boolean"
								},
								"taxAreaId": {
									"format": "uuid",
									"type": "string"
								},
								"taxAreaDisplayName": {
									"type": "string"
								},
								"taxRegistrationNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"currencyId": {
									"format": "uuid",
									"type": "string"
								},
								"currencyCode": {
									"type": "string"
								},
								"paymentTermsId": {
									"format": "uuid",
									"type": "string"
								},
								"shipmentMethodId": {
									"format": "uuid",
									"type": "string"
								},
								"paymentMethodId": {
									"format": "uuid",
									"type": "string"
								},
								"blocked": {
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "customer succesfully created",
						"schema": {
							"$ref": "#/definitions/customer"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/customers({customer_id})": {
			"get": {
				"tags": [
					"customers"
				],
				"summary": "Obtain information about the customer from its unique customer_id",
				"operationId": "getCustomerById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested customer",
						"schema": {
							"$ref": "#/definitions/customer"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"customers"
				],
				"summary": "Allows the user to delete the specified customer",
				"operationId": "deleteCustomerById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the customer with the specified customer_id"
					}
				}
			},
			"patch": {
				"tags": [
					"customers"
				],
				"summary": "Lets the user patch the specified customer",
				"operationId": "patchCustomerById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"number": {
									"maxLength": 20,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"type": {
									"type": "string"
								},
								"address": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"phoneNumber": {
									"maxLength": 30,
									"type": "string"
								},
								"email": {
									"maxLength": 80,
									"type": "string"
								},
								"website": {
									"maxLength": 80,
									"type": "string"
								},
								"taxLiable": {
									"type": "boolean"
								},
								"taxAreaId": {
									"format": "uuid",
									"type": "string"
								},
								"taxAreaDisplayName": {
									"type": "string"
								},
								"taxRegistrationNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"currencyId": {
									"format": "uuid",
									"type": "string"
								},
								"currencyCode": {
									"type": "string"
								},
								"paymentTermsId": {
									"format": "uuid",
									"type": "string"
								},
								"shipmentMethodId": {
									"format": "uuid",
									"type": "string"
								},
								"paymentMethodId": {
									"format": "uuid",
									"type": "string"
								},
								"blocked": {
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the customer with the specified customer_id",
						"schema": {
							"$ref": "#/definitions/customer"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "customer_id",
					"description": "id for customer",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"customerFinancialDetails",
							"picture",
							"defaultDimensions",
							"currency",
							"paymentTerm",
							"shipmentMethod",
							"paymentMethod"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"number",
							"displayName",
							"type",
							"address",
							"phoneNumber",
							"email",
							"website",
							"taxLiable",
							"taxAreaId",
							"taxAreaDisplayName",
							"taxRegistrationNumber",
							"currencyId",
							"currencyCode",
							"paymentTermsId",
							"shipmentMethodId",
							"paymentMethodId",
							"blocked",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/customers({customer_id})/customerFinancialDetails": {
			"get": {
				"tags": [
					"customerFinancialDetails"
				],
				"summary": "Returns a list of customerFinancialDetails",
				"operationId": "getCustomerFinancialDetailsForCustomer",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"number",
								"balance",
								"totalSalesExcludingTax",
								"overdueAmount"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of customerFinancialDetails",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/customerFinancialDetail"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "customer_id",
					"description": "id for customer",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/customers({customer_id})/customerFinancialDetails({customerFinancialDetail_id})": {
			"get": {
				"tags": [
					"customerFinancialDetails"
				],
				"summary": "Obtain information about the customerFinancialDetail from its unique customerFinancialDetail_id",
				"operationId": "getCustomerFinancialDetailForCustomerById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested customerFinancialDetail",
						"schema": {
							"$ref": "#/definitions/customerFinancialDetail"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "customer_id",
					"description": "id for customer",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "customerFinancialDetail_id",
					"description": "id for customerFinancialDetail",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"number",
							"balance",
							"totalSalesExcludingTax",
							"overdueAmount"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/customers({customer_id})/picture": {
			"get": {
				"tags": [
					"picture"
				],
				"summary": "Returns a list of picture",
				"operationId": "getPictureForCustomer",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"width",
								"height",
								"contentType",
								"content"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of picture",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/picture"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "customer_id",
					"description": "id for customer",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/customers({customer_id})/picture({picture_id})": {
			"get": {
				"tags": [
					"picture"
				],
				"summary": "Obtain information about the picture from its unique picture_id",
				"operationId": "getPictureForCustomerById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested picture",
						"schema": {
							"$ref": "#/definitions/picture"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"picture"
				],
				"summary": "Allows the user to delete the specified picture",
				"operationId": "deletePictureForCustomerByIdById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the picture with the specified picture_id"
					}
				}
			},
			"patch": {
				"tags": [
					"picture"
				],
				"summary": "Lets the user patch the specified picture",
				"operationId": "patchPictureForCustomerByIdById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"width": {
									"format": "int32",
									"type": "integer"
								},
								"height": {
									"format": "int32",
									"type": "integer"
								},
								"contentType": {
									"maxLength": 100,
									"type": "string"
								},
								"content": {
									"format": "binary",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the picture with the specified picture_id",
						"schema": {
							"$ref": "#/definitions/picture"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "customer_id",
					"description": "id for customer",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "picture_id",
					"description": "id for picture",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"width",
							"height",
							"contentType",
							"content"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/customers({customer_id})/defaultDimensions": {
			"get": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Returns a list of defaultDimensions",
				"operationId": "getDefaultDimensionsForCustomer",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"account",
								"dimension",
								"dimensionValue"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"parentId",
								"dimensionId",
								"dimensionCode",
								"dimensionValueId",
								"dimensionValueCode",
								"postingValidation"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of defaultDimensions",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/defaultDimensions"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Lets a user post a new defaultDimensions",
				"operationId": "postDefaultDimensionsForCustomer",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"parentId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionCode": {
									"maxLength": 20,
									"type": "string"
								},
								"dimensionValueId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionValueCode": {
									"maxLength": 20,
									"type": "string"
								},
								"postingValidation": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "defaultDimensions succesfully created",
						"schema": {
							"$ref": "#/definitions/defaultDimensions"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "customer_id",
					"description": "id for customer",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/customers({customer_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})": {
			"get": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Obtain information about the defaultDimensions from its unique defaultDimensions_parentId, defaultDimensions_dimensionId",
				"operationId": "getDefaultDimensionsForCustomerByDimensionIdByParentId",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested defaultDimensions",
						"schema": {
							"$ref": "#/definitions/defaultDimensions"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Allows the user to delete the specified defaultDimensions",
				"operationId": "deleteDefaultDimensionsForCustomerByDimensionIdByParentIdById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the defaultDimensions with the specified defaultDimensions_parentId, defaultDimensions_dimensionId"
					}
				}
			},
			"patch": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Lets the user patch the specified defaultDimensions",
				"operationId": "patchDefaultDimensionsForCustomerByDimensionIdByParentIdById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"parentId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionCode": {
									"maxLength": 20,
									"type": "string"
								},
								"dimensionValueId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionValueCode": {
									"maxLength": 20,
									"type": "string"
								},
								"postingValidation": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the defaultDimensions with the specified defaultDimensions_parentId, defaultDimensions_dimensionId",
						"schema": {
							"$ref": "#/definitions/defaultDimensions"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "customer_id",
					"description": "id for customer",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "defaultDimensions_parentId",
					"description": "parentId for defaultDimensions",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "defaultDimensions_dimensionId",
					"description": "dimensionId for defaultDimensions",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"account",
							"dimension",
							"dimensionValue"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"parentId",
							"dimensionId",
							"dimensionCode",
							"dimensionValueId",
							"dimensionValueCode",
							"postingValidation"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/customerFinancialDetails": {
			"get": {
				"tags": [
					"customerFinancialDetails"
				],
				"summary": "Returns a list of customerFinancialDetails",
				"operationId": "getCustomerFinancialDetails",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"number",
								"balance",
								"totalSalesExcludingTax",
								"overdueAmount"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of customerFinancialDetails",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/customerFinancialDetail"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/customerFinancialDetails({customerFinancialDetail_id})": {
			"get": {
				"tags": [
					"customerFinancialDetails"
				],
				"summary": "Obtain information about the customerFinancialDetail from its unique customerFinancialDetail_id",
				"operationId": "getCustomerFinancialDetailById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested customerFinancialDetail",
						"schema": {
							"$ref": "#/definitions/customerFinancialDetail"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "customerFinancialDetail_id",
					"description": "id for customerFinancialDetail",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"number",
							"balance",
							"totalSalesExcludingTax",
							"overdueAmount"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/vendors": {
			"get": {
				"tags": [
					"vendors"
				],
				"summary": "Returns a list of vendors",
				"operationId": "getVendors",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"picture",
								"defaultDimensions",
								"currency",
								"paymentTerm",
								"paymentMethod"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"number",
								"displayName",
								"address",
								"phoneNumber",
								"email",
								"website",
								"taxRegistrationNumber",
								"currencyId",
								"currencyCode",
								"irs1099Code",
								"paymentTermsId",
								"paymentMethodId",
								"taxLiable",
								"blocked",
								"balance",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of vendors",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/vendor"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"vendors"
				],
				"summary": "Lets a user post a new vendor",
				"operationId": "postVendor",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"number": {
									"maxLength": 20,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"address": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"phoneNumber": {
									"maxLength": 30,
									"type": "string"
								},
								"email": {
									"maxLength": 80,
									"type": "string"
								},
								"website": {
									"maxLength": 80,
									"type": "string"
								},
								"taxRegistrationNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"currencyId": {
									"format": "uuid",
									"type": "string"
								},
								"currencyCode": {
									"type": "string"
								},
								"irs1099Code": {
									"type": "string"
								},
								"paymentTermsId": {
									"format": "uuid",
									"type": "string"
								},
								"paymentMethodId": {
									"format": "uuid",
									"type": "string"
								},
								"taxLiable": {
									"type": "boolean"
								},
								"blocked": {
									"type": "string"
								},
								"balance": {
									"format": "decimal",
									"type": "number"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "vendor succesfully created",
						"schema": {
							"$ref": "#/definitions/vendor"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/vendors({vendor_id})": {
			"get": {
				"tags": [
					"vendors"
				],
				"summary": "Obtain information about the vendor from its unique vendor_id",
				"operationId": "getVendorById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested vendor",
						"schema": {
							"$ref": "#/definitions/vendor"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"vendors"
				],
				"summary": "Allows the user to delete the specified vendor",
				"operationId": "deleteVendorById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the vendor with the specified vendor_id"
					}
				}
			},
			"patch": {
				"tags": [
					"vendors"
				],
				"summary": "Lets the user patch the specified vendor",
				"operationId": "patchVendorById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"number": {
									"maxLength": 20,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"address": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"phoneNumber": {
									"maxLength": 30,
									"type": "string"
								},
								"email": {
									"maxLength": 80,
									"type": "string"
								},
								"website": {
									"maxLength": 80,
									"type": "string"
								},
								"taxRegistrationNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"currencyId": {
									"format": "uuid",
									"type": "string"
								},
								"currencyCode": {
									"type": "string"
								},
								"irs1099Code": {
									"type": "string"
								},
								"paymentTermsId": {
									"format": "uuid",
									"type": "string"
								},
								"paymentMethodId": {
									"format": "uuid",
									"type": "string"
								},
								"taxLiable": {
									"type": "boolean"
								},
								"blocked": {
									"type": "string"
								},
								"balance": {
									"format": "decimal",
									"type": "number"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the vendor with the specified vendor_id",
						"schema": {
							"$ref": "#/definitions/vendor"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "vendor_id",
					"description": "id for vendor",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"picture",
							"defaultDimensions",
							"currency",
							"paymentTerm",
							"paymentMethod"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"number",
							"displayName",
							"address",
							"phoneNumber",
							"email",
							"website",
							"taxRegistrationNumber",
							"currencyId",
							"currencyCode",
							"irs1099Code",
							"paymentTermsId",
							"paymentMethodId",
							"taxLiable",
							"blocked",
							"balance",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/vendors({vendor_id})/picture": {
			"get": {
				"tags": [
					"picture"
				],
				"summary": "Returns a list of picture",
				"operationId": "getPictureForVendor",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"width",
								"height",
								"contentType",
								"content"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of picture",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/picture"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "vendor_id",
					"description": "id for vendor",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/vendors({vendor_id})/picture({picture_id})": {
			"get": {
				"tags": [
					"picture"
				],
				"summary": "Obtain information about the picture from its unique picture_id",
				"operationId": "getPictureForVendorById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested picture",
						"schema": {
							"$ref": "#/definitions/picture"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"picture"
				],
				"summary": "Allows the user to delete the specified picture",
				"operationId": "deletePictureForVendorByIdById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the picture with the specified picture_id"
					}
				}
			},
			"patch": {
				"tags": [
					"picture"
				],
				"summary": "Lets the user patch the specified picture",
				"operationId": "patchPictureForVendorByIdById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"width": {
									"format": "int32",
									"type": "integer"
								},
								"height": {
									"format": "int32",
									"type": "integer"
								},
								"contentType": {
									"maxLength": 100,
									"type": "string"
								},
								"content": {
									"format": "binary",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the picture with the specified picture_id",
						"schema": {
							"$ref": "#/definitions/picture"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "vendor_id",
					"description": "id for vendor",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "picture_id",
					"description": "id for picture",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"width",
							"height",
							"contentType",
							"content"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/vendors({vendor_id})/defaultDimensions": {
			"get": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Returns a list of defaultDimensions",
				"operationId": "getDefaultDimensionsForVendor",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"account",
								"dimension",
								"dimensionValue"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"parentId",
								"dimensionId",
								"dimensionCode",
								"dimensionValueId",
								"dimensionValueCode",
								"postingValidation"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of defaultDimensions",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/defaultDimensions"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Lets a user post a new defaultDimensions",
				"operationId": "postDefaultDimensionsForVendor",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"parentId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionCode": {
									"maxLength": 20,
									"type": "string"
								},
								"dimensionValueId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionValueCode": {
									"maxLength": 20,
									"type": "string"
								},
								"postingValidation": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "defaultDimensions succesfully created",
						"schema": {
							"$ref": "#/definitions/defaultDimensions"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "vendor_id",
					"description": "id for vendor",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/vendors({vendor_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})": {
			"get": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Obtain information about the defaultDimensions from its unique defaultDimensions_parentId, defaultDimensions_dimensionId",
				"operationId": "getDefaultDimensionsForVendorByDimensionIdByParentId",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested defaultDimensions",
						"schema": {
							"$ref": "#/definitions/defaultDimensions"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Allows the user to delete the specified defaultDimensions",
				"operationId": "deleteDefaultDimensionsForVendorByDimensionIdByParentIdById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the defaultDimensions with the specified defaultDimensions_parentId, defaultDimensions_dimensionId"
					}
				}
			},
			"patch": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Lets the user patch the specified defaultDimensions",
				"operationId": "patchDefaultDimensionsForVendorByDimensionIdByParentIdById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"parentId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionCode": {
									"maxLength": 20,
									"type": "string"
								},
								"dimensionValueId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionValueCode": {
									"maxLength": 20,
									"type": "string"
								},
								"postingValidation": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the defaultDimensions with the specified defaultDimensions_parentId, defaultDimensions_dimensionId",
						"schema": {
							"$ref": "#/definitions/defaultDimensions"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "vendor_id",
					"description": "id for vendor",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "defaultDimensions_parentId",
					"description": "parentId for defaultDimensions",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "defaultDimensions_dimensionId",
					"description": "dimensionId for defaultDimensions",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"account",
							"dimension",
							"dimensionValue"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"parentId",
							"dimensionId",
							"dimensionCode",
							"dimensionValueId",
							"dimensionValueCode",
							"postingValidation"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/companyInformation": {
			"get": {
				"tags": [
					"companyInformation"
				],
				"summary": "Returns a list of companyInformation",
				"operationId": "getCompanyInformation",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"displayName",
								"address",
								"phoneNumber",
								"faxNumber",
								"email",
								"website",
								"taxRegistrationNumber",
								"currencyCode",
								"currentFiscalYearStartDate",
								"industry",
								"picture",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of companyInformation",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/companyInformation"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/companyInformation({companyInformation_id})": {
			"get": {
				"tags": [
					"companyInformation"
				],
				"summary": "Obtain information about the companyInformation from its unique companyInformation_id",
				"operationId": "getCompanyInformationById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested companyInformation",
						"schema": {
							"$ref": "#/definitions/companyInformation"
						}
					}
				}
			},
			"patch": {
				"tags": [
					"companyInformation"
				],
				"summary": "Lets the user patch the specified companyInformation",
				"operationId": "patchCompanyInformationById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"address": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"phoneNumber": {
									"maxLength": 30,
									"type": "string"
								},
								"faxNumber": {
									"maxLength": 30,
									"type": "string"
								},
								"email": {
									"maxLength": 80,
									"type": "string"
								},
								"website": {
									"maxLength": 80,
									"type": "string"
								},
								"taxRegistrationNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"currencyCode": {
									"type": "string"
								},
								"currentFiscalYearStartDate": {
									"format": "date-time",
									"type": "string"
								},
								"industry": {
									"maxLength": 30,
									"type": "string"
								},
								"picture": {
									"format": "binary",
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the companyInformation with the specified companyInformation_id",
						"schema": {
							"$ref": "#/definitions/companyInformation"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "companyInformation_id",
					"description": "id for companyInformation",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"displayName",
							"address",
							"phoneNumber",
							"faxNumber",
							"email",
							"website",
							"taxRegistrationNumber",
							"currencyCode",
							"currentFiscalYearStartDate",
							"industry",
							"picture",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/salesInvoices": {
			"get": {
				"tags": [
					"salesInvoices"
				],
				"summary": "Returns a list of salesInvoices",
				"operationId": "getSalesInvoices",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"salesInvoiceLines",
								"pdfDocument",
								"customer",
								"currency",
								"paymentTerm",
								"shipmentMethod"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"number",
								"externalDocumentNumber",
								"invoiceDate",
								"dueDate",
								"customerPurchaseOrderReference",
								"customerId",
								"contactId",
								"customerNumber",
								"customerName",
								"billToName",
								"billToCustomerId",
								"billToCustomerNumber",
								"shipToName",
								"shipToContact",
								"sellingPostalAddress",
								"billingPostalAddress",
								"shippingPostalAddress",
								"currencyId",
								"currencyCode",
								"orderId",
								"orderNumber",
								"paymentTermsId",
								"shipmentMethodId",
								"salesperson",
								"pricesIncludeTax",
								"discountAmount",
								"discountAppliedBeforeTax",
								"totalAmountExcludingTax",
								"totalTaxAmount",
								"totalAmountIncludingTax",
								"status",
								"lastModifiedDateTime",
								"phoneNumber",
								"email"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of salesInvoices",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/salesInvoice"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"salesInvoices"
				],
				"summary": "Lets a user post a new salesInvoice",
				"operationId": "postSalesInvoice",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"number": {
									"maxLength": 20,
									"type": "string"
								},
								"externalDocumentNumber": {
									"maxLength": 35,
									"type": "string"
								},
								"invoiceDate": {
									"format": "date-time",
									"type": "string"
								},
								"dueDate": {
									"format": "date-time",
									"type": "string"
								},
								"customerPurchaseOrderReference": {
									"maxLength": 35,
									"type": "string"
								},
								"customerId": {
									"format": "uuid",
									"type": "string"
								},
								"contactId": {
									"maxLength": 250,
									"type": "string"
								},
								"customerNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"customerName": {
									"maxLength": 100,
									"type": "string"
								},
								"billToName": {
									"maxLength": 100,
									"type": "string"
								},
								"billToCustomerId": {
									"format": "uuid",
									"type": "string"
								},
								"billToCustomerNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"shipToName": {
									"maxLength": 100,
									"type": "string"
								},
								"shipToContact": {
									"maxLength": 100,
									"type": "string"
								},
								"sellingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"billingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"shippingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"currencyId": {
									"format": "uuid",
									"type": "string"
								},
								"currencyCode": {
									"type": "string"
								},
								"orderId": {
									"format": "uuid",
									"type": "string"
								},
								"orderNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"paymentTermsId": {
									"format": "uuid",
									"type": "string"
								},
								"shipmentMethodId": {
									"format": "uuid",
									"type": "string"
								},
								"salesperson": {
									"maxLength": 20,
									"type": "string"
								},
								"pricesIncludeTax": {
									"type": "boolean"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"totalAmountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"totalAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"status": {
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								},
								"phoneNumber": {
									"maxLength": 30,
									"type": "string"
								},
								"email": {
									"maxLength": 80,
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "salesInvoice succesfully created",
						"schema": {
							"$ref": "#/definitions/salesInvoice"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesInvoices({salesInvoice_id})": {
			"get": {
				"tags": [
					"salesInvoices"
				],
				"summary": "Obtain information about the salesInvoice from its unique salesInvoice_id",
				"operationId": "getSalesInvoiceById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested salesInvoice",
						"schema": {
							"$ref": "#/definitions/salesInvoice"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"salesInvoices"
				],
				"summary": "Allows the user to delete the specified salesInvoice",
				"operationId": "deleteSalesInvoiceById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the salesInvoice with the specified salesInvoice_id"
					}
				}
			},
			"patch": {
				"tags": [
					"salesInvoices"
				],
				"summary": "Lets the user patch the specified salesInvoice",
				"operationId": "patchSalesInvoiceById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"number": {
									"maxLength": 20,
									"type": "string"
								},
								"externalDocumentNumber": {
									"maxLength": 35,
									"type": "string"
								},
								"invoiceDate": {
									"format": "date-time",
									"type": "string"
								},
								"dueDate": {
									"format": "date-time",
									"type": "string"
								},
								"customerPurchaseOrderReference": {
									"maxLength": 35,
									"type": "string"
								},
								"customerId": {
									"format": "uuid",
									"type": "string"
								},
								"contactId": {
									"maxLength": 250,
									"type": "string"
								},
								"customerNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"customerName": {
									"maxLength": 100,
									"type": "string"
								},
								"billToName": {
									"maxLength": 100,
									"type": "string"
								},
								"billToCustomerId": {
									"format": "uuid",
									"type": "string"
								},
								"billToCustomerNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"shipToName": {
									"maxLength": 100,
									"type": "string"
								},
								"shipToContact": {
									"maxLength": 100,
									"type": "string"
								},
								"sellingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"billingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"shippingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"currencyId": {
									"format": "uuid",
									"type": "string"
								},
								"currencyCode": {
									"type": "string"
								},
								"orderId": {
									"format": "uuid",
									"type": "string"
								},
								"orderNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"paymentTermsId": {
									"format": "uuid",
									"type": "string"
								},
								"shipmentMethodId": {
									"format": "uuid",
									"type": "string"
								},
								"salesperson": {
									"maxLength": 20,
									"type": "string"
								},
								"pricesIncludeTax": {
									"type": "boolean"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"totalAmountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"totalAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"status": {
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								},
								"phoneNumber": {
									"maxLength": 30,
									"type": "string"
								},
								"email": {
									"maxLength": 80,
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the salesInvoice with the specified salesInvoice_id",
						"schema": {
							"$ref": "#/definitions/salesInvoice"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesInvoice_id",
					"description": "id for salesInvoice",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"salesInvoiceLines",
							"pdfDocument",
							"customer",
							"currency",
							"paymentTerm",
							"shipmentMethod"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"number",
							"externalDocumentNumber",
							"invoiceDate",
							"dueDate",
							"customerPurchaseOrderReference",
							"customerId",
							"contactId",
							"customerNumber",
							"customerName",
							"billToName",
							"billToCustomerId",
							"billToCustomerNumber",
							"shipToName",
							"shipToContact",
							"sellingPostalAddress",
							"billingPostalAddress",
							"shippingPostalAddress",
							"currencyId",
							"currencyCode",
							"orderId",
							"orderNumber",
							"paymentTermsId",
							"shipmentMethodId",
							"salesperson",
							"pricesIncludeTax",
							"discountAmount",
							"discountAppliedBeforeTax",
							"totalAmountExcludingTax",
							"totalTaxAmount",
							"totalAmountIncludingTax",
							"status",
							"lastModifiedDateTime",
							"phoneNumber",
							"email"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/salesInvoices({salesInvoice_id})/Microsoft.NAV.cancelAndSend": {
			"post": {
				"tags": [
					"salesInvoices"
				],
				"summary": "Performs the cancelAndSend action for salesInvoices entity",
				"operationId": "CancelAndSendAction_SalesInvoices",
				"responses": {
					"204": {
						"description": "Succesfully perfpormed a cancelAndSend action on the salesInvoices entity"
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesInvoice_id",
					"description": "id for salesInvoice",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesInvoices({salesInvoice_id})/Microsoft.NAV.cancel": {
			"post": {
				"tags": [
					"salesInvoices"
				],
				"summary": "Performs the cancel action for salesInvoices entity",
				"operationId": "CancelAction_SalesInvoices",
				"responses": {
					"204": {
						"description": "Succesfully perfpormed a cancel action on the salesInvoices entity"
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesInvoice_id",
					"description": "id for salesInvoice",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesInvoices({salesInvoice_id})/Microsoft.NAV.postAndSend": {
			"post": {
				"tags": [
					"salesInvoices"
				],
				"summary": "Performs the postAndSend action for salesInvoices entity",
				"operationId": "PostAndSendAction_SalesInvoices",
				"responses": {
					"204": {
						"description": "Succesfully perfpormed a postAndSend action on the salesInvoices entity"
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesInvoice_id",
					"description": "id for salesInvoice",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesInvoices({salesInvoice_id})/Microsoft.NAV.post": {
			"post": {
				"tags": [
					"salesInvoices"
				],
				"summary": "Performs the post action for salesInvoices entity",
				"operationId": "PostAction_SalesInvoices",
				"responses": {
					"204": {
						"description": "Succesfully perfpormed a post action on the salesInvoices entity"
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesInvoice_id",
					"description": "id for salesInvoice",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesInvoices({salesInvoice_id})/Microsoft.NAV.send": {
			"post": {
				"tags": [
					"salesInvoices"
				],
				"summary": "Performs the send action for salesInvoices entity",
				"operationId": "SendAction_SalesInvoices",
				"responses": {
					"204": {
						"description": "Succesfully perfpormed a send action on the salesInvoices entity"
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesInvoice_id",
					"description": "id for salesInvoice",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesInvoices({salesInvoice_id})/salesInvoiceLines": {
			"get": {
				"tags": [
					"salesInvoiceLines"
				],
				"summary": "Returns a list of salesInvoiceLines",
				"operationId": "getSalesInvoiceLinesForSalesInvoice",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"item",
								"account"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"documentId",
								"sequence",
								"itemId",
								"accountId",
								"lineType",
								"lineDetails",
								"description",
								"unitOfMeasureId",
								"unitOfMeasure",
								"unitPrice",
								"quantity",
								"discountAmount",
								"discountPercent",
								"discountAppliedBeforeTax",
								"amountExcludingTax",
								"taxCode",
								"taxPercent",
								"totalTaxAmount",
								"amountIncludingTax",
								"invoiceDiscountAllocation",
								"netAmount",
								"netTaxAmount",
								"netAmountIncludingTax",
								"shipmentDate"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of salesInvoiceLines",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/salesInvoiceLine"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"salesInvoiceLines"
				],
				"summary": "Lets a user post a new salesInvoiceLine",
				"operationId": "postSalesInvoiceLineForSalesInvoice",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"maxLength": 50,
									"type": "string"
								},
								"documentId": {
									"format": "uuid",
									"type": "string"
								},
								"sequence": {
									"format": "int32",
									"type": "integer"
								},
								"itemId": {
									"format": "uuid",
									"type": "string"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"lineType": {
									"type": "string"
								},
								"lineDetails": {
									"$ref": "#/definitions/documentlineobjectdetailstype"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"unitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"unitPrice": {
									"format": "decimal",
									"type": "number"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"amountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"taxCode": {
									"maxLength": 50,
									"type": "string"
								},
								"taxPercent": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"amountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"invoiceDiscountAllocation": {
									"format": "decimal",
									"type": "number"
								},
								"netAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"shipmentDate": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "salesInvoiceLine succesfully created",
						"schema": {
							"$ref": "#/definitions/salesInvoiceLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesInvoice_id",
					"description": "id for salesInvoice",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesInvoices({salesInvoice_id})/salesInvoiceLines('{salesInvoiceLine_id}')": {
			"get": {
				"tags": [
					"salesInvoiceLines"
				],
				"summary": "Obtain information about the salesInvoiceLine from its unique salesInvoiceLine_id",
				"operationId": "getSalesInvoiceLineForSalesInvoiceById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested salesInvoiceLine",
						"schema": {
							"$ref": "#/definitions/salesInvoiceLine"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"salesInvoiceLines"
				],
				"summary": "Allows the user to delete the specified salesInvoiceLine",
				"operationId": "deleteSalesInvoiceLineForSalesInvoiceByIdById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the salesInvoiceLine with the specified salesInvoiceLine_id"
					}
				}
			},
			"patch": {
				"tags": [
					"salesInvoiceLines"
				],
				"summary": "Lets the user patch the specified salesInvoiceLine",
				"operationId": "patchSalesInvoiceLineForSalesInvoiceByIdById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"maxLength": 50,
									"type": "string"
								},
								"documentId": {
									"format": "uuid",
									"type": "string"
								},
								"sequence": {
									"format": "int32",
									"type": "integer"
								},
								"itemId": {
									"format": "uuid",
									"type": "string"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"lineType": {
									"type": "string"
								},
								"lineDetails": {
									"$ref": "#/definitions/documentlineobjectdetailstype"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"unitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"unitPrice": {
									"format": "decimal",
									"type": "number"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"amountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"taxCode": {
									"maxLength": 50,
									"type": "string"
								},
								"taxPercent": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"amountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"invoiceDiscountAllocation": {
									"format": "decimal",
									"type": "number"
								},
								"netAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"shipmentDate": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the salesInvoiceLine with the specified salesInvoiceLine_id",
						"schema": {
							"$ref": "#/definitions/salesInvoiceLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesInvoice_id",
					"description": "id for salesInvoice",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesInvoiceLine_id",
					"description": "id for salesInvoiceLine",
					"required": true,
					"type": "string"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"item",
							"account"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"documentId",
							"sequence",
							"itemId",
							"accountId",
							"lineType",
							"lineDetails",
							"description",
							"unitOfMeasureId",
							"unitOfMeasure",
							"unitPrice",
							"quantity",
							"discountAmount",
							"discountPercent",
							"discountAppliedBeforeTax",
							"amountExcludingTax",
							"taxCode",
							"taxPercent",
							"totalTaxAmount",
							"amountIncludingTax",
							"invoiceDiscountAllocation",
							"netAmount",
							"netTaxAmount",
							"netAmountIncludingTax",
							"shipmentDate"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/salesInvoices({salesInvoice_id})/pdfDocument": {
			"get": {
				"tags": [
					"pdfDocument"
				],
				"summary": "Returns a list of pdfDocument",
				"operationId": "getPdfDocumentForSalesInvoice",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"content"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of pdfDocument",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/pdfDocument"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesInvoice_id",
					"description": "id for salesInvoice",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesInvoices({salesInvoice_id})/pdfDocument({pdfDocument_id})": {
			"get": {
				"tags": [
					"pdfDocument"
				],
				"summary": "Obtain information about the pdfDocument from its unique pdfDocument_id",
				"operationId": "getPdfDocumentForSalesInvoiceById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested pdfDocument",
						"schema": {
							"$ref": "#/definitions/pdfDocument"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesInvoice_id",
					"description": "id for salesInvoice",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "pdfDocument_id",
					"description": "id for pdfDocument",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"content"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/salesInvoiceLines": {
			"get": {
				"tags": [
					"salesInvoiceLines"
				],
				"summary": "Returns a list of salesInvoiceLines",
				"operationId": "getSalesInvoiceLines",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"item",
								"account"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"documentId",
								"sequence",
								"itemId",
								"accountId",
								"lineType",
								"lineDetails",
								"description",
								"unitOfMeasureId",
								"unitOfMeasure",
								"unitPrice",
								"quantity",
								"discountAmount",
								"discountPercent",
								"discountAppliedBeforeTax",
								"amountExcludingTax",
								"taxCode",
								"taxPercent",
								"totalTaxAmount",
								"amountIncludingTax",
								"invoiceDiscountAllocation",
								"netAmount",
								"netTaxAmount",
								"netAmountIncludingTax",
								"shipmentDate"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of salesInvoiceLines",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/salesInvoiceLine"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"salesInvoiceLines"
				],
				"summary": "Lets a user post a new salesInvoiceLine",
				"operationId": "postSalesInvoiceLine",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"maxLength": 50,
									"type": "string"
								},
								"documentId": {
									"format": "uuid",
									"type": "string"
								},
								"sequence": {
									"format": "int32",
									"type": "integer"
								},
								"itemId": {
									"format": "uuid",
									"type": "string"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"lineType": {
									"type": "string"
								},
								"lineDetails": {
									"$ref": "#/definitions/documentlineobjectdetailstype"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"unitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"unitPrice": {
									"format": "decimal",
									"type": "number"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"amountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"taxCode": {
									"maxLength": 50,
									"type": "string"
								},
								"taxPercent": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"amountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"invoiceDiscountAllocation": {
									"format": "decimal",
									"type": "number"
								},
								"netAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"shipmentDate": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "salesInvoiceLine succesfully created",
						"schema": {
							"$ref": "#/definitions/salesInvoiceLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesInvoiceLines('{salesInvoiceLine_id}')": {
			"get": {
				"tags": [
					"salesInvoiceLines"
				],
				"summary": "Obtain information about the salesInvoiceLine from its unique salesInvoiceLine_id",
				"operationId": "getSalesInvoiceLineById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested salesInvoiceLine",
						"schema": {
							"$ref": "#/definitions/salesInvoiceLine"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"salesInvoiceLines"
				],
				"summary": "Allows the user to delete the specified salesInvoiceLine",
				"operationId": "deleteSalesInvoiceLineById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the salesInvoiceLine with the specified salesInvoiceLine_id"
					}
				}
			},
			"patch": {
				"tags": [
					"salesInvoiceLines"
				],
				"summary": "Lets the user patch the specified salesInvoiceLine",
				"operationId": "patchSalesInvoiceLineById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"maxLength": 50,
									"type": "string"
								},
								"documentId": {
									"format": "uuid",
									"type": "string"
								},
								"sequence": {
									"format": "int32",
									"type": "integer"
								},
								"itemId": {
									"format": "uuid",
									"type": "string"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"lineType": {
									"type": "string"
								},
								"lineDetails": {
									"$ref": "#/definitions/documentlineobjectdetailstype"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"unitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"unitPrice": {
									"format": "decimal",
									"type": "number"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"amountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"taxCode": {
									"maxLength": 50,
									"type": "string"
								},
								"taxPercent": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"amountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"invoiceDiscountAllocation": {
									"format": "decimal",
									"type": "number"
								},
								"netAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"shipmentDate": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the salesInvoiceLine with the specified salesInvoiceLine_id",
						"schema": {
							"$ref": "#/definitions/salesInvoiceLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesInvoiceLine_id",
					"description": "id for salesInvoiceLine",
					"required": true,
					"type": "string"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"item",
							"account"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"documentId",
							"sequence",
							"itemId",
							"accountId",
							"lineType",
							"lineDetails",
							"description",
							"unitOfMeasureId",
							"unitOfMeasure",
							"unitPrice",
							"quantity",
							"discountAmount",
							"discountPercent",
							"discountAppliedBeforeTax",
							"amountExcludingTax",
							"taxCode",
							"taxPercent",
							"totalTaxAmount",
							"amountIncludingTax",
							"invoiceDiscountAllocation",
							"netAmount",
							"netTaxAmount",
							"netAmountIncludingTax",
							"shipmentDate"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/pdfDocument": {
			"get": {
				"tags": [
					"pdfDocument"
				],
				"summary": "Returns a list of pdfDocument",
				"operationId": "getPdfDocument",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"content"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of pdfDocument",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/pdfDocument"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/pdfDocument({pdfDocument_id})": {
			"get": {
				"tags": [
					"pdfDocument"
				],
				"summary": "Obtain information about the pdfDocument from its unique pdfDocument_id",
				"operationId": "getPdfDocumentById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested pdfDocument",
						"schema": {
							"$ref": "#/definitions/pdfDocument"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "pdfDocument_id",
					"description": "id for pdfDocument",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"content"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/customerPaymentJournals": {
			"get": {
				"tags": [
					"customerPaymentJournals"
				],
				"summary": "Returns a list of customerPaymentJournals",
				"operationId": "getCustomerPaymentJournals",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"customerPayments",
								"account"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"code",
								"displayName",
								"lastModifiedDateTime",
								"balancingAccountId",
								"balancingAccountNumber"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of customerPaymentJournals",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/customerPaymentJournal"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"customerPaymentJournals"
				],
				"summary": "Lets a user post a new customerPaymentJournal",
				"operationId": "postCustomerPaymentJournal",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 10,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								},
								"balancingAccountId": {
									"format": "uuid",
									"type": "string"
								},
								"balancingAccountNumber": {
									"maxLength": 20,
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "customerPaymentJournal succesfully created",
						"schema": {
							"$ref": "#/definitions/customerPaymentJournal"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/customerPaymentJournals({customerPaymentJournal_id})": {
			"get": {
				"tags": [
					"customerPaymentJournals"
				],
				"summary": "Obtain information about the customerPaymentJournal from its unique customerPaymentJournal_id",
				"operationId": "getCustomerPaymentJournalById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested customerPaymentJournal",
						"schema": {
							"$ref": "#/definitions/customerPaymentJournal"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"customerPaymentJournals"
				],
				"summary": "Allows the user to delete the specified customerPaymentJournal",
				"operationId": "deleteCustomerPaymentJournalById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the customerPaymentJournal with the specified customerPaymentJournal_id"
					}
				}
			},
			"patch": {
				"tags": [
					"customerPaymentJournals"
				],
				"summary": "Lets the user patch the specified customerPaymentJournal",
				"operationId": "patchCustomerPaymentJournalById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 10,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								},
								"balancingAccountId": {
									"format": "uuid",
									"type": "string"
								},
								"balancingAccountNumber": {
									"maxLength": 20,
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the customerPaymentJournal with the specified customerPaymentJournal_id",
						"schema": {
							"$ref": "#/definitions/customerPaymentJournal"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "customerPaymentJournal_id",
					"description": "id for customerPaymentJournal",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"customerPayments",
							"account"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"code",
							"displayName",
							"lastModifiedDateTime",
							"balancingAccountId",
							"balancingAccountNumber"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/customerPaymentJournals({customerPaymentJournal_id})/customerPayments": {
			"get": {
				"tags": [
					"customerPayments"
				],
				"summary": "Returns a list of customerPayments",
				"operationId": "getCustomerPaymentsForCustomerPaymentJournal",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"customer"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"journalDisplayName",
								"lineNumber",
								"customerId",
								"customerNumber",
								"contactId",
								"postingDate",
								"documentNumber",
								"externalDocumentNumber",
								"amount",
								"appliesToInvoiceId",
								"appliesToInvoiceNumber",
								"description",
								"comment",
								"dimensions",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of customerPayments",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/customerPayment"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"customerPayments"
				],
				"summary": "Lets a user post a new customerPayment",
				"operationId": "postCustomerPaymentForCustomerPaymentJournal",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"journalDisplayName": {
									"type": "string"
								},
								"lineNumber": {
									"format": "int32",
									"type": "integer"
								},
								"customerId": {
									"format": "uuid",
									"type": "string"
								},
								"customerNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"contactId": {
									"maxLength": 250,
									"type": "string"
								},
								"postingDate": {
									"format": "date-time",
									"type": "string"
								},
								"documentNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"externalDocumentNumber": {
									"maxLength": 35,
									"type": "string"
								},
								"amount": {
									"format": "decimal",
									"type": "number"
								},
								"appliesToInvoiceId": {
									"format": "uuid",
									"type": "string"
								},
								"appliesToInvoiceNumber": {
									"type": "string"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"comment": {
									"maxLength": 250,
									"type": "string"
								},
								"dimensions": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/dimensiontype"
									}
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "customerPayment succesfully created",
						"schema": {
							"$ref": "#/definitions/customerPayment"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "customerPaymentJournal_id",
					"description": "id for customerPaymentJournal",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/customerPaymentJournals({customerPaymentJournal_id})/customerPayments({customerPayment_id})": {
			"get": {
				"tags": [
					"customerPayments"
				],
				"summary": "Obtain information about the customerPayment from its unique customerPayment_id",
				"operationId": "getCustomerPaymentForCustomerPaymentJournalById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested customerPayment",
						"schema": {
							"$ref": "#/definitions/customerPayment"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"customerPayments"
				],
				"summary": "Allows the user to delete the specified customerPayment",
				"operationId": "deleteCustomerPaymentForCustomerPaymentJournalByIdById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the customerPayment with the specified customerPayment_id"
					}
				}
			},
			"patch": {
				"tags": [
					"customerPayments"
				],
				"summary": "Lets the user patch the specified customerPayment",
				"operationId": "patchCustomerPaymentForCustomerPaymentJournalByIdById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"journalDisplayName": {
									"type": "string"
								},
								"lineNumber": {
									"format": "int32",
									"type": "integer"
								},
								"customerId": {
									"format": "uuid",
									"type": "string"
								},
								"customerNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"contactId": {
									"maxLength": 250,
									"type": "string"
								},
								"postingDate": {
									"format": "date-time",
									"type": "string"
								},
								"documentNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"externalDocumentNumber": {
									"maxLength": 35,
									"type": "string"
								},
								"amount": {
									"format": "decimal",
									"type": "number"
								},
								"appliesToInvoiceId": {
									"format": "uuid",
									"type": "string"
								},
								"appliesToInvoiceNumber": {
									"type": "string"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"comment": {
									"maxLength": 250,
									"type": "string"
								},
								"dimensions": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/dimensiontype"
									}
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the customerPayment with the specified customerPayment_id",
						"schema": {
							"$ref": "#/definitions/customerPayment"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "customerPaymentJournal_id",
					"description": "id for customerPaymentJournal",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "customerPayment_id",
					"description": "id for customerPayment",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"customer"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"journalDisplayName",
							"lineNumber",
							"customerId",
							"customerNumber",
							"contactId",
							"postingDate",
							"documentNumber",
							"externalDocumentNumber",
							"amount",
							"appliesToInvoiceId",
							"appliesToInvoiceNumber",
							"description",
							"comment",
							"dimensions",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/customerPayments": {
			"get": {
				"tags": [
					"customerPayments"
				],
				"summary": "Returns a list of customerPayments",
				"operationId": "getCustomerPayments",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"customer"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"journalDisplayName",
								"lineNumber",
								"customerId",
								"customerNumber",
								"contactId",
								"postingDate",
								"documentNumber",
								"externalDocumentNumber",
								"amount",
								"appliesToInvoiceId",
								"appliesToInvoiceNumber",
								"description",
								"comment",
								"dimensions",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of customerPayments",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/customerPayment"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"customerPayments"
				],
				"summary": "Lets a user post a new customerPayment",
				"operationId": "postCustomerPayment",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"journalDisplayName": {
									"type": "string"
								},
								"lineNumber": {
									"format": "int32",
									"type": "integer"
								},
								"customerId": {
									"format": "uuid",
									"type": "string"
								},
								"customerNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"contactId": {
									"maxLength": 250,
									"type": "string"
								},
								"postingDate": {
									"format": "date-time",
									"type": "string"
								},
								"documentNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"externalDocumentNumber": {
									"maxLength": 35,
									"type": "string"
								},
								"amount": {
									"format": "decimal",
									"type": "number"
								},
								"appliesToInvoiceId": {
									"format": "uuid",
									"type": "string"
								},
								"appliesToInvoiceNumber": {
									"type": "string"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"comment": {
									"maxLength": 250,
									"type": "string"
								},
								"dimensions": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/dimensiontype"
									}
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "customerPayment succesfully created",
						"schema": {
							"$ref": "#/definitions/customerPayment"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/customerPayments({customerPayment_id})": {
			"get": {
				"tags": [
					"customerPayments"
				],
				"summary": "Obtain information about the customerPayment from its unique customerPayment_id",
				"operationId": "getCustomerPaymentById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested customerPayment",
						"schema": {
							"$ref": "#/definitions/customerPayment"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"customerPayments"
				],
				"summary": "Allows the user to delete the specified customerPayment",
				"operationId": "deleteCustomerPaymentById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the customerPayment with the specified customerPayment_id"
					}
				}
			},
			"patch": {
				"tags": [
					"customerPayments"
				],
				"summary": "Lets the user patch the specified customerPayment",
				"operationId": "patchCustomerPaymentById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"journalDisplayName": {
									"type": "string"
								},
								"lineNumber": {
									"format": "int32",
									"type": "integer"
								},
								"customerId": {
									"format": "uuid",
									"type": "string"
								},
								"customerNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"contactId": {
									"maxLength": 250,
									"type": "string"
								},
								"postingDate": {
									"format": "date-time",
									"type": "string"
								},
								"documentNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"externalDocumentNumber": {
									"maxLength": 35,
									"type": "string"
								},
								"amount": {
									"format": "decimal",
									"type": "number"
								},
								"appliesToInvoiceId": {
									"format": "uuid",
									"type": "string"
								},
								"appliesToInvoiceNumber": {
									"type": "string"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"comment": {
									"maxLength": 250,
									"type": "string"
								},
								"dimensions": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/dimensiontype"
									}
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the customerPayment with the specified customerPayment_id",
						"schema": {
							"$ref": "#/definitions/customerPayment"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "customerPayment_id",
					"description": "id for customerPayment",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"customer"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"journalDisplayName",
							"lineNumber",
							"customerId",
							"customerNumber",
							"contactId",
							"postingDate",
							"documentNumber",
							"externalDocumentNumber",
							"amount",
							"appliesToInvoiceId",
							"appliesToInvoiceNumber",
							"description",
							"comment",
							"dimensions",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/accounts": {
			"get": {
				"tags": [
					"accounts"
				],
				"summary": "Returns a list of accounts",
				"operationId": "getAccounts",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"number",
								"displayName",
								"category",
								"subCategory",
								"blocked",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of accounts",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/account"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/accounts({account_id})": {
			"get": {
				"tags": [
					"accounts"
				],
				"summary": "Obtain information about the account from its unique account_id",
				"operationId": "getAccountById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested account",
						"schema": {
							"$ref": "#/definitions/account"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "account_id",
					"description": "id for account",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"number",
							"displayName",
							"category",
							"subCategory",
							"blocked",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/taxGroups": {
			"get": {
				"tags": [
					"taxGroups"
				],
				"summary": "Returns a list of taxGroups",
				"operationId": "getTaxGroups",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"code",
								"displayName",
								"taxType",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of taxGroups",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/taxGroup"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"taxGroups"
				],
				"summary": "Lets a user post a new taxGroup",
				"operationId": "postTaxGroup",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 20,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"taxType": {
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "taxGroup succesfully created",
						"schema": {
							"$ref": "#/definitions/taxGroup"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/taxGroups({taxGroup_id})": {
			"get": {
				"tags": [
					"taxGroups"
				],
				"summary": "Obtain information about the taxGroup from its unique taxGroup_id",
				"operationId": "getTaxGroupById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested taxGroup",
						"schema": {
							"$ref": "#/definitions/taxGroup"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"taxGroups"
				],
				"summary": "Allows the user to delete the specified taxGroup",
				"operationId": "deleteTaxGroupById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the taxGroup with the specified taxGroup_id"
					}
				}
			},
			"patch": {
				"tags": [
					"taxGroups"
				],
				"summary": "Lets the user patch the specified taxGroup",
				"operationId": "patchTaxGroupById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 20,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"taxType": {
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the taxGroup with the specified taxGroup_id",
						"schema": {
							"$ref": "#/definitions/taxGroup"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "taxGroup_id",
					"description": "id for taxGroup",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"code",
							"displayName",
							"taxType",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/journals": {
			"get": {
				"tags": [
					"journals"
				],
				"summary": "Returns a list of journals",
				"operationId": "getJournals",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"journalLines",
								"account"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"code",
								"displayName",
								"lastModifiedDateTime",
								"balancingAccountId",
								"balancingAccountNumber"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of journals",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/journal"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"journals"
				],
				"summary": "Lets a user post a new journal",
				"operationId": "postJournal",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 10,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								},
								"balancingAccountId": {
									"format": "uuid",
									"type": "string"
								},
								"balancingAccountNumber": {
									"maxLength": 20,
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "journal succesfully created",
						"schema": {
							"$ref": "#/definitions/journal"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/journals({journal_id})": {
			"get": {
				"tags": [
					"journals"
				],
				"summary": "Obtain information about the journal from its unique journal_id",
				"operationId": "getJournalById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested journal",
						"schema": {
							"$ref": "#/definitions/journal"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"journals"
				],
				"summary": "Allows the user to delete the specified journal",
				"operationId": "deleteJournalById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the journal with the specified journal_id"
					}
				}
			},
			"patch": {
				"tags": [
					"journals"
				],
				"summary": "Lets the user patch the specified journal",
				"operationId": "patchJournalById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 10,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								},
								"balancingAccountId": {
									"format": "uuid",
									"type": "string"
								},
								"balancingAccountNumber": {
									"maxLength": 20,
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the journal with the specified journal_id",
						"schema": {
							"$ref": "#/definitions/journal"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "journal_id",
					"description": "id for journal",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"journalLines",
							"account"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"code",
							"displayName",
							"lastModifiedDateTime",
							"balancingAccountId",
							"balancingAccountNumber"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/journals({journal_id})/Microsoft.NAV.post": {
			"post": {
				"tags": [
					"journals"
				],
				"summary": "Performs the post action for journals entity",
				"operationId": "PostAction_Journals",
				"responses": {
					"204": {
						"description": "Succesfully perfpormed a post action on the journals entity"
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "journal_id",
					"description": "id for journal",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/journals({journal_id})/journalLines": {
			"get": {
				"tags": [
					"journalLines"
				],
				"summary": "Returns a list of journalLines",
				"operationId": "getJournalLinesForJournal",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"attachments",
								"account"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"journalDisplayName",
								"lineNumber",
								"accountId",
								"accountNumber",
								"postingDate",
								"documentNumber",
								"externalDocumentNumber",
								"amount",
								"description",
								"comment",
								"dimensions",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of journalLines",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/journalLine"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"journalLines"
				],
				"summary": "Lets a user post a new journalLine",
				"operationId": "postJournalLineForJournal",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"journalDisplayName": {
									"type": "string"
								},
								"lineNumber": {
									"format": "int32",
									"type": "integer"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"accountNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"postingDate": {
									"format": "date-time",
									"type": "string"
								},
								"documentNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"externalDocumentNumber": {
									"maxLength": 35,
									"type": "string"
								},
								"amount": {
									"format": "decimal",
									"type": "number"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"comment": {
									"maxLength": 250,
									"type": "string"
								},
								"dimensions": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/dimensiontype"
									}
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "journalLine succesfully created",
						"schema": {
							"$ref": "#/definitions/journalLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "journal_id",
					"description": "id for journal",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/journals({journal_id})/journalLines({journalLine_id})": {
			"get": {
				"tags": [
					"journalLines"
				],
				"summary": "Obtain information about the journalLine from its unique journalLine_id",
				"operationId": "getJournalLineForJournalById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested journalLine",
						"schema": {
							"$ref": "#/definitions/journalLine"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"journalLines"
				],
				"summary": "Allows the user to delete the specified journalLine",
				"operationId": "deleteJournalLineForJournalByIdById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the journalLine with the specified journalLine_id"
					}
				}
			},
			"patch": {
				"tags": [
					"journalLines"
				],
				"summary": "Lets the user patch the specified journalLine",
				"operationId": "patchJournalLineForJournalByIdById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"journalDisplayName": {
									"type": "string"
								},
								"lineNumber": {
									"format": "int32",
									"type": "integer"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"accountNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"postingDate": {
									"format": "date-time",
									"type": "string"
								},
								"documentNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"externalDocumentNumber": {
									"maxLength": 35,
									"type": "string"
								},
								"amount": {
									"format": "decimal",
									"type": "number"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"comment": {
									"maxLength": 250,
									"type": "string"
								},
								"dimensions": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/dimensiontype"
									}
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the journalLine with the specified journalLine_id",
						"schema": {
							"$ref": "#/definitions/journalLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "journal_id",
					"description": "id for journal",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "journalLine_id",
					"description": "id for journalLine",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"attachments",
							"account"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"journalDisplayName",
							"lineNumber",
							"accountId",
							"accountNumber",
							"postingDate",
							"documentNumber",
							"externalDocumentNumber",
							"amount",
							"description",
							"comment",
							"dimensions",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/journals({journal_id})/journalLines({journalLine_id})/attachments": {
			"get": {
				"tags": [
					"attachments"
				],
				"summary": "Returns a list of attachments",
				"operationId": "getAttachmentsForJournalLineForJournal",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"parentId",
								"id",
								"fileName",
								"byteSize",
								"content",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of attachments",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/attachments"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"attachments"
				],
				"summary": "Lets a user post a new attachments",
				"operationId": "postAttachmentsForJournalLineForJournal",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"parentId": {
									"format": "uuid",
									"type": "string"
								},
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"fileName": {
									"maxLength": 250,
									"type": "string"
								},
								"byteSize": {
									"format": "int32",
									"type": "integer"
								},
								"content": {
									"format": "binary",
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "attachments succesfully created",
						"schema": {
							"$ref": "#/definitions/attachments"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "journal_id",
					"description": "id for journal",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "journalLine_id",
					"description": "id for journalLine",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/journals({journal_id})/journalLines({journalLine_id})/attachments({attachments_parentId},{attachments_id})": {
			"get": {
				"tags": [
					"attachments"
				],
				"summary": "Obtain information about the attachments from its unique attachments_parentId, attachments_id",
				"operationId": "getAttachmentsForJournalLineForJournalByIdByParentId",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested attachments",
						"schema": {
							"$ref": "#/definitions/attachments"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"attachments"
				],
				"summary": "Allows the user to delete the specified attachments",
				"operationId": "deleteAttachmentsForJournalLineForJournalByIdByParentIdByIdById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the attachments with the specified attachments_parentId, attachments_id"
					}
				}
			},
			"patch": {
				"tags": [
					"attachments"
				],
				"summary": "Lets the user patch the specified attachments",
				"operationId": "patchAttachmentsForJournalLineForJournalByIdByParentIdByIdById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"parentId": {
									"format": "uuid",
									"type": "string"
								},
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"fileName": {
									"maxLength": 250,
									"type": "string"
								},
								"byteSize": {
									"format": "int32",
									"type": "integer"
								},
								"content": {
									"format": "binary",
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the attachments with the specified attachments_parentId, attachments_id",
						"schema": {
							"$ref": "#/definitions/attachments"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "journal_id",
					"description": "id for journal",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "journalLine_id",
					"description": "id for journalLine",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "attachments_parentId",
					"description": "parentId for attachments",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "attachments_id",
					"description": "id for attachments",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"parentId",
							"id",
							"fileName",
							"byteSize",
							"content",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/journalLines": {
			"get": {
				"tags": [
					"journalLines"
				],
				"summary": "Returns a list of journalLines",
				"operationId": "getJournalLines",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"attachments",
								"account"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"journalDisplayName",
								"lineNumber",
								"accountId",
								"accountNumber",
								"postingDate",
								"documentNumber",
								"externalDocumentNumber",
								"amount",
								"description",
								"comment",
								"dimensions",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of journalLines",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/journalLine"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"journalLines"
				],
				"summary": "Lets a user post a new journalLine",
				"operationId": "postJournalLine",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"journalDisplayName": {
									"type": "string"
								},
								"lineNumber": {
									"format": "int32",
									"type": "integer"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"accountNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"postingDate": {
									"format": "date-time",
									"type": "string"
								},
								"documentNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"externalDocumentNumber": {
									"maxLength": 35,
									"type": "string"
								},
								"amount": {
									"format": "decimal",
									"type": "number"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"comment": {
									"maxLength": 250,
									"type": "string"
								},
								"dimensions": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/dimensiontype"
									}
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "journalLine succesfully created",
						"schema": {
							"$ref": "#/definitions/journalLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/journalLines({journalLine_id})": {
			"get": {
				"tags": [
					"journalLines"
				],
				"summary": "Obtain information about the journalLine from its unique journalLine_id",
				"operationId": "getJournalLineById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested journalLine",
						"schema": {
							"$ref": "#/definitions/journalLine"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"journalLines"
				],
				"summary": "Allows the user to delete the specified journalLine",
				"operationId": "deleteJournalLineById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the journalLine with the specified journalLine_id"
					}
				}
			},
			"patch": {
				"tags": [
					"journalLines"
				],
				"summary": "Lets the user patch the specified journalLine",
				"operationId": "patchJournalLineById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"journalDisplayName": {
									"type": "string"
								},
								"lineNumber": {
									"format": "int32",
									"type": "integer"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"accountNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"postingDate": {
									"format": "date-time",
									"type": "string"
								},
								"documentNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"externalDocumentNumber": {
									"maxLength": 35,
									"type": "string"
								},
								"amount": {
									"format": "decimal",
									"type": "number"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"comment": {
									"maxLength": 250,
									"type": "string"
								},
								"dimensions": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/dimensiontype"
									}
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the journalLine with the specified journalLine_id",
						"schema": {
							"$ref": "#/definitions/journalLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "journalLine_id",
					"description": "id for journalLine",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"attachments",
							"account"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"journalDisplayName",
							"lineNumber",
							"accountId",
							"accountNumber",
							"postingDate",
							"documentNumber",
							"externalDocumentNumber",
							"amount",
							"description",
							"comment",
							"dimensions",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/journalLines({journalLine_id})/attachments": {
			"get": {
				"tags": [
					"attachments"
				],
				"summary": "Returns a list of attachments",
				"operationId": "getAttachmentsForJournalLine",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"parentId",
								"id",
								"fileName",
								"byteSize",
								"content",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of attachments",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/attachments"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"attachments"
				],
				"summary": "Lets a user post a new attachments",
				"operationId": "postAttachmentsForJournalLine",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"parentId": {
									"format": "uuid",
									"type": "string"
								},
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"fileName": {
									"maxLength": 250,
									"type": "string"
								},
								"byteSize": {
									"format": "int32",
									"type": "integer"
								},
								"content": {
									"format": "binary",
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "attachments succesfully created",
						"schema": {
							"$ref": "#/definitions/attachments"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "journalLine_id",
					"description": "id for journalLine",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/journalLines({journalLine_id})/attachments({attachments_parentId},{attachments_id})": {
			"get": {
				"tags": [
					"attachments"
				],
				"summary": "Obtain information about the attachments from its unique attachments_parentId, attachments_id",
				"operationId": "getAttachmentsForJournalLineByIdByParentId",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested attachments",
						"schema": {
							"$ref": "#/definitions/attachments"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"attachments"
				],
				"summary": "Allows the user to delete the specified attachments",
				"operationId": "deleteAttachmentsForJournalLineByIdByParentIdById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the attachments with the specified attachments_parentId, attachments_id"
					}
				}
			},
			"patch": {
				"tags": [
					"attachments"
				],
				"summary": "Lets the user patch the specified attachments",
				"operationId": "patchAttachmentsForJournalLineByIdByParentIdById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"parentId": {
									"format": "uuid",
									"type": "string"
								},
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"fileName": {
									"maxLength": 250,
									"type": "string"
								},
								"byteSize": {
									"format": "int32",
									"type": "integer"
								},
								"content": {
									"format": "binary",
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the attachments with the specified attachments_parentId, attachments_id",
						"schema": {
							"$ref": "#/definitions/attachments"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "journalLine_id",
					"description": "id for journalLine",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "attachments_parentId",
					"description": "parentId for attachments",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "attachments_id",
					"description": "id for attachments",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"parentId",
							"id",
							"fileName",
							"byteSize",
							"content",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/attachments": {
			"get": {
				"tags": [
					"attachments"
				],
				"summary": "Returns a list of attachments",
				"operationId": "getAttachments",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"parentId",
								"id",
								"fileName",
								"byteSize",
								"content",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of attachments",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/attachments"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"attachments"
				],
				"summary": "Lets a user post a new attachments",
				"operationId": "postAttachments",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"parentId": {
									"format": "uuid",
									"type": "string"
								},
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"fileName": {
									"maxLength": 250,
									"type": "string"
								},
								"byteSize": {
									"format": "int32",
									"type": "integer"
								},
								"content": {
									"format": "binary",
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "attachments succesfully created",
						"schema": {
							"$ref": "#/definitions/attachments"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/attachments({attachments_parentId},{attachments_id})": {
			"get": {
				"tags": [
					"attachments"
				],
				"summary": "Obtain information about the attachments from its unique attachments_parentId, attachments_id",
				"operationId": "getAttachmentsByIdByParentId",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested attachments",
						"schema": {
							"$ref": "#/definitions/attachments"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"attachments"
				],
				"summary": "Allows the user to delete the specified attachments",
				"operationId": "deleteAttachmentsByIdByParentId",
				"responses": {
					"204": {
						"description": "Succesfully deleted the attachments with the specified attachments_parentId, attachments_id"
					}
				}
			},
			"patch": {
				"tags": [
					"attachments"
				],
				"summary": "Lets the user patch the specified attachments",
				"operationId": "patchAttachmentsByIdByParentId",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"parentId": {
									"format": "uuid",
									"type": "string"
								},
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"fileName": {
									"maxLength": 250,
									"type": "string"
								},
								"byteSize": {
									"format": "int32",
									"type": "integer"
								},
								"content": {
									"format": "binary",
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the attachments with the specified attachments_parentId, attachments_id",
						"schema": {
							"$ref": "#/definitions/attachments"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "attachments_parentId",
					"description": "parentId for attachments",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "attachments_id",
					"description": "id for attachments",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"parentId",
							"id",
							"fileName",
							"byteSize",
							"content",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/employees": {
			"get": {
				"tags": [
					"employees"
				],
				"summary": "Returns a list of employees",
				"operationId": "getEmployees",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"picture",
								"defaultDimensions",
								"timeRegistrationEntries"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"number",
								"displayName",
								"givenName",
								"middleName",
								"surname",
								"jobTitle",
								"address",
								"phoneNumber",
								"mobilePhone",
								"email",
								"personalEmail",
								"employmentDate",
								"terminationDate",
								"status",
								"birthDate",
								"statisticsGroupCode",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of employees",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/employee"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"employees"
				],
				"summary": "Lets a user post a new employee",
				"operationId": "postEmployee",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"number": {
									"maxLength": 20,
									"type": "string"
								},
								"displayName": {
									"type": "string"
								},
								"givenName": {
									"maxLength": 30,
									"type": "string"
								},
								"middleName": {
									"maxLength": 30,
									"type": "string"
								},
								"surname": {
									"maxLength": 30,
									"type": "string"
								},
								"jobTitle": {
									"maxLength": 30,
									"type": "string"
								},
								"address": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"phoneNumber": {
									"maxLength": 30,
									"type": "string"
								},
								"mobilePhone": {
									"maxLength": 30,
									"type": "string"
								},
								"email": {
									"maxLength": 80,
									"type": "string"
								},
								"personalEmail": {
									"maxLength": 80,
									"type": "string"
								},
								"employmentDate": {
									"format": "date-time",
									"type": "string"
								},
								"terminationDate": {
									"format": "date-time",
									"type": "string"
								},
								"status": {
									"type": "string"
								},
								"birthDate": {
									"format": "date-time",
									"type": "string"
								},
								"statisticsGroupCode": {
									"maxLength": 10,
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "employee succesfully created",
						"schema": {
							"$ref": "#/definitions/employee"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/employees({employee_id})": {
			"get": {
				"tags": [
					"employees"
				],
				"summary": "Obtain information about the employee from its unique employee_id",
				"operationId": "getEmployeeById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested employee",
						"schema": {
							"$ref": "#/definitions/employee"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"employees"
				],
				"summary": "Allows the user to delete the specified employee",
				"operationId": "deleteEmployeeById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the employee with the specified employee_id"
					}
				}
			},
			"patch": {
				"tags": [
					"employees"
				],
				"summary": "Lets the user patch the specified employee",
				"operationId": "patchEmployeeById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"number": {
									"maxLength": 20,
									"type": "string"
								},
								"displayName": {
									"type": "string"
								},
								"givenName": {
									"maxLength": 30,
									"type": "string"
								},
								"middleName": {
									"maxLength": 30,
									"type": "string"
								},
								"surname": {
									"maxLength": 30,
									"type": "string"
								},
								"jobTitle": {
									"maxLength": 30,
									"type": "string"
								},
								"address": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"phoneNumber": {
									"maxLength": 30,
									"type": "string"
								},
								"mobilePhone": {
									"maxLength": 30,
									"type": "string"
								},
								"email": {
									"maxLength": 80,
									"type": "string"
								},
								"personalEmail": {
									"maxLength": 80,
									"type": "string"
								},
								"employmentDate": {
									"format": "date-time",
									"type": "string"
								},
								"terminationDate": {
									"format": "date-time",
									"type": "string"
								},
								"status": {
									"type": "string"
								},
								"birthDate": {
									"format": "date-time",
									"type": "string"
								},
								"statisticsGroupCode": {
									"maxLength": 10,
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the employee with the specified employee_id",
						"schema": {
							"$ref": "#/definitions/employee"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "employee_id",
					"description": "id for employee",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"picture",
							"defaultDimensions",
							"timeRegistrationEntries"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"number",
							"displayName",
							"givenName",
							"middleName",
							"surname",
							"jobTitle",
							"address",
							"phoneNumber",
							"mobilePhone",
							"email",
							"personalEmail",
							"employmentDate",
							"terminationDate",
							"status",
							"birthDate",
							"statisticsGroupCode",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/employees({employee_id})/picture": {
			"get": {
				"tags": [
					"picture"
				],
				"summary": "Returns a list of picture",
				"operationId": "getPictureForEmployee",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"width",
								"height",
								"contentType",
								"content"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of picture",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/picture"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "employee_id",
					"description": "id for employee",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/employees({employee_id})/picture({picture_id})": {
			"get": {
				"tags": [
					"picture"
				],
				"summary": "Obtain information about the picture from its unique picture_id",
				"operationId": "getPictureForEmployeeById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested picture",
						"schema": {
							"$ref": "#/definitions/picture"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"picture"
				],
				"summary": "Allows the user to delete the specified picture",
				"operationId": "deletePictureForEmployeeByIdById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the picture with the specified picture_id"
					}
				}
			},
			"patch": {
				"tags": [
					"picture"
				],
				"summary": "Lets the user patch the specified picture",
				"operationId": "patchPictureForEmployeeByIdById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"width": {
									"format": "int32",
									"type": "integer"
								},
								"height": {
									"format": "int32",
									"type": "integer"
								},
								"contentType": {
									"maxLength": 100,
									"type": "string"
								},
								"content": {
									"format": "binary",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the picture with the specified picture_id",
						"schema": {
							"$ref": "#/definitions/picture"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "employee_id",
					"description": "id for employee",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "picture_id",
					"description": "id for picture",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"width",
							"height",
							"contentType",
							"content"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/employees({employee_id})/defaultDimensions": {
			"get": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Returns a list of defaultDimensions",
				"operationId": "getDefaultDimensionsForEmployee",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"account",
								"dimension",
								"dimensionValue"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"parentId",
								"dimensionId",
								"dimensionCode",
								"dimensionValueId",
								"dimensionValueCode",
								"postingValidation"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of defaultDimensions",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/defaultDimensions"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Lets a user post a new defaultDimensions",
				"operationId": "postDefaultDimensionsForEmployee",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"parentId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionCode": {
									"maxLength": 20,
									"type": "string"
								},
								"dimensionValueId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionValueCode": {
									"maxLength": 20,
									"type": "string"
								},
								"postingValidation": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "defaultDimensions succesfully created",
						"schema": {
							"$ref": "#/definitions/defaultDimensions"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "employee_id",
					"description": "id for employee",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/employees({employee_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})": {
			"get": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Obtain information about the defaultDimensions from its unique defaultDimensions_parentId, defaultDimensions_dimensionId",
				"operationId": "getDefaultDimensionsForEmployeeByDimensionIdByParentId",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested defaultDimensions",
						"schema": {
							"$ref": "#/definitions/defaultDimensions"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Allows the user to delete the specified defaultDimensions",
				"operationId": "deleteDefaultDimensionsForEmployeeByDimensionIdByParentIdById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the defaultDimensions with the specified defaultDimensions_parentId, defaultDimensions_dimensionId"
					}
				}
			},
			"patch": {
				"tags": [
					"defaultDimensions"
				],
				"summary": "Lets the user patch the specified defaultDimensions",
				"operationId": "patchDefaultDimensionsForEmployeeByDimensionIdByParentIdById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"parentId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionCode": {
									"maxLength": 20,
									"type": "string"
								},
								"dimensionValueId": {
									"format": "uuid",
									"type": "string"
								},
								"dimensionValueCode": {
									"maxLength": 20,
									"type": "string"
								},
								"postingValidation": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the defaultDimensions with the specified defaultDimensions_parentId, defaultDimensions_dimensionId",
						"schema": {
							"$ref": "#/definitions/defaultDimensions"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "employee_id",
					"description": "id for employee",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "defaultDimensions_parentId",
					"description": "parentId for defaultDimensions",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "defaultDimensions_dimensionId",
					"description": "dimensionId for defaultDimensions",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"account",
							"dimension",
							"dimensionValue"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"parentId",
							"dimensionId",
							"dimensionCode",
							"dimensionValueId",
							"dimensionValueCode",
							"postingValidation"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/employees({employee_id})/timeRegistrationEntries": {
			"get": {
				"tags": [
					"timeRegistrationEntries"
				],
				"summary": "Returns a list of timeRegistrationEntries",
				"operationId": "getTimeRegistrationEntriesForEmployee",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"employeeId",
								"employeeNumber",
								"lineNumber",
								"date",
								"quantity",
								"status",
								"unitOfMeasureId",
								"unitOfMeasure",
								"lastModfiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of timeRegistrationEntries",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/timeRegistrationEntry"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"timeRegistrationEntries"
				],
				"summary": "Lets a user post a new timeRegistrationEntry",
				"operationId": "postTimeRegistrationEntryForEmployee",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"employeeId": {
									"format": "uuid",
									"type": "string"
								},
								"employeeNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"lineNumber": {
									"format": "int32",
									"type": "integer"
								},
								"date": {
									"format": "date-time",
									"type": "string"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"status": {
									"type": "string"
								},
								"unitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"lastModfiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "timeRegistrationEntry succesfully created",
						"schema": {
							"$ref": "#/definitions/timeRegistrationEntry"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "employee_id",
					"description": "id for employee",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/employees({employee_id})/timeRegistrationEntries({timeRegistrationEntry_id})": {
			"get": {
				"tags": [
					"timeRegistrationEntries"
				],
				"summary": "Obtain information about the timeRegistrationEntry from its unique timeRegistrationEntry_id",
				"operationId": "getTimeRegistrationEntryForEmployeeById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested timeRegistrationEntry",
						"schema": {
							"$ref": "#/definitions/timeRegistrationEntry"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"timeRegistrationEntries"
				],
				"summary": "Allows the user to delete the specified timeRegistrationEntry",
				"operationId": "deleteTimeRegistrationEntryForEmployeeByIdById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the timeRegistrationEntry with the specified timeRegistrationEntry_id"
					}
				}
			},
			"patch": {
				"tags": [
					"timeRegistrationEntries"
				],
				"summary": "Lets the user patch the specified timeRegistrationEntry",
				"operationId": "patchTimeRegistrationEntryForEmployeeByIdById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"employeeId": {
									"format": "uuid",
									"type": "string"
								},
								"employeeNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"lineNumber": {
									"format": "int32",
									"type": "integer"
								},
								"date": {
									"format": "date-time",
									"type": "string"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"status": {
									"type": "string"
								},
								"unitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"lastModfiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the timeRegistrationEntry with the specified timeRegistrationEntry_id",
						"schema": {
							"$ref": "#/definitions/timeRegistrationEntry"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "employee_id",
					"description": "id for employee",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "timeRegistrationEntry_id",
					"description": "id for timeRegistrationEntry",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"employeeId",
							"employeeNumber",
							"lineNumber",
							"date",
							"quantity",
							"status",
							"unitOfMeasureId",
							"unitOfMeasure",
							"lastModfiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/timeRegistrationEntries": {
			"get": {
				"tags": [
					"timeRegistrationEntries"
				],
				"summary": "Returns a list of timeRegistrationEntries",
				"operationId": "getTimeRegistrationEntries",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"employeeId",
								"employeeNumber",
								"lineNumber",
								"date",
								"quantity",
								"status",
								"unitOfMeasureId",
								"unitOfMeasure",
								"lastModfiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of timeRegistrationEntries",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/timeRegistrationEntry"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"timeRegistrationEntries"
				],
				"summary": "Lets a user post a new timeRegistrationEntry",
				"operationId": "postTimeRegistrationEntry",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"employeeId": {
									"format": "uuid",
									"type": "string"
								},
								"employeeNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"lineNumber": {
									"format": "int32",
									"type": "integer"
								},
								"date": {
									"format": "date-time",
									"type": "string"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"status": {
									"type": "string"
								},
								"unitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"lastModfiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "timeRegistrationEntry succesfully created",
						"schema": {
							"$ref": "#/definitions/timeRegistrationEntry"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/timeRegistrationEntries({timeRegistrationEntry_id})": {
			"get": {
				"tags": [
					"timeRegistrationEntries"
				],
				"summary": "Obtain information about the timeRegistrationEntry from its unique timeRegistrationEntry_id",
				"operationId": "getTimeRegistrationEntryById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested timeRegistrationEntry",
						"schema": {
							"$ref": "#/definitions/timeRegistrationEntry"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"timeRegistrationEntries"
				],
				"summary": "Allows the user to delete the specified timeRegistrationEntry",
				"operationId": "deleteTimeRegistrationEntryById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the timeRegistrationEntry with the specified timeRegistrationEntry_id"
					}
				}
			},
			"patch": {
				"tags": [
					"timeRegistrationEntries"
				],
				"summary": "Lets the user patch the specified timeRegistrationEntry",
				"operationId": "patchTimeRegistrationEntryById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"employeeId": {
									"format": "uuid",
									"type": "string"
								},
								"employeeNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"lineNumber": {
									"format": "int32",
									"type": "integer"
								},
								"date": {
									"format": "date-time",
									"type": "string"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"status": {
									"type": "string"
								},
								"unitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"lastModfiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the timeRegistrationEntry with the specified timeRegistrationEntry_id",
						"schema": {
							"$ref": "#/definitions/timeRegistrationEntry"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "timeRegistrationEntry_id",
					"description": "id for timeRegistrationEntry",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"employeeId",
							"employeeNumber",
							"lineNumber",
							"date",
							"quantity",
							"status",
							"unitOfMeasureId",
							"unitOfMeasure",
							"lastModfiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/generalLedgerEntries": {
			"get": {
				"tags": [
					"generalLedgerEntries"
				],
				"summary": "Returns a list of generalLedgerEntries",
				"operationId": "getGeneralLedgerEntries",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"account"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"postingDate",
								"documentNumber",
								"documentType",
								"accountId",
								"accountNumber",
								"description",
								"debitAmount",
								"creditAmount",
								"dimensions",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of generalLedgerEntries",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/generalLedgerEntry"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/generalLedgerEntries({generalLedgerEntry_id})": {
			"get": {
				"tags": [
					"generalLedgerEntries"
				],
				"summary": "Obtain information about the generalLedgerEntry from its unique generalLedgerEntry_id",
				"operationId": "getGeneralLedgerEntryById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested generalLedgerEntry",
						"schema": {
							"$ref": "#/definitions/generalLedgerEntry"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "generalLedgerEntry_id",
					"description": "id for generalLedgerEntry",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"account"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"postingDate",
							"documentNumber",
							"documentType",
							"accountId",
							"accountNumber",
							"description",
							"debitAmount",
							"creditAmount",
							"dimensions",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/currencies": {
			"get": {
				"tags": [
					"currencies"
				],
				"summary": "Returns a list of currencies",
				"operationId": "getCurrencies",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"code",
								"displayName",
								"symbol",
								"amountDecimalPlaces",
								"amountRoundingPrecision",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of currencies",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/currency"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"currencies"
				],
				"summary": "Lets a user post a new currency",
				"operationId": "postCurrency",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 10,
									"type": "string"
								},
								"displayName": {
									"maxLength": 30,
									"type": "string"
								},
								"symbol": {
									"maxLength": 10,
									"type": "string"
								},
								"amountDecimalPlaces": {
									"maxLength": 5,
									"type": "string"
								},
								"amountRoundingPrecision": {
									"format": "decimal",
									"type": "number"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "currency succesfully created",
						"schema": {
							"$ref": "#/definitions/currency"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/currencies({currency_id})": {
			"get": {
				"tags": [
					"currencies"
				],
				"summary": "Obtain information about the currency from its unique currency_id",
				"operationId": "getCurrencyById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested currency",
						"schema": {
							"$ref": "#/definitions/currency"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"currencies"
				],
				"summary": "Allows the user to delete the specified currency",
				"operationId": "deleteCurrencyById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the currency with the specified currency_id"
					}
				}
			},
			"patch": {
				"tags": [
					"currencies"
				],
				"summary": "Lets the user patch the specified currency",
				"operationId": "patchCurrencyById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 10,
									"type": "string"
								},
								"displayName": {
									"maxLength": 30,
									"type": "string"
								},
								"symbol": {
									"maxLength": 10,
									"type": "string"
								},
								"amountDecimalPlaces": {
									"maxLength": 5,
									"type": "string"
								},
								"amountRoundingPrecision": {
									"format": "decimal",
									"type": "number"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the currency with the specified currency_id",
						"schema": {
							"$ref": "#/definitions/currency"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "currency_id",
					"description": "id for currency",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"code",
							"displayName",
							"symbol",
							"amountDecimalPlaces",
							"amountRoundingPrecision",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/paymentMethods": {
			"get": {
				"tags": [
					"paymentMethods"
				],
				"summary": "Returns a list of paymentMethods",
				"operationId": "getPaymentMethods",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"code",
								"displayName",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of paymentMethods",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/paymentMethod"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"paymentMethods"
				],
				"summary": "Lets a user post a new paymentMethod",
				"operationId": "postPaymentMethod",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 10,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "paymentMethod succesfully created",
						"schema": {
							"$ref": "#/definitions/paymentMethod"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/paymentMethods({paymentMethod_id})": {
			"get": {
				"tags": [
					"paymentMethods"
				],
				"summary": "Obtain information about the paymentMethod from its unique paymentMethod_id",
				"operationId": "getPaymentMethodById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested paymentMethod",
						"schema": {
							"$ref": "#/definitions/paymentMethod"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"paymentMethods"
				],
				"summary": "Allows the user to delete the specified paymentMethod",
				"operationId": "deletePaymentMethodById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the paymentMethod with the specified paymentMethod_id"
					}
				}
			},
			"patch": {
				"tags": [
					"paymentMethods"
				],
				"summary": "Lets the user patch the specified paymentMethod",
				"operationId": "patchPaymentMethodById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 10,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the paymentMethod with the specified paymentMethod_id",
						"schema": {
							"$ref": "#/definitions/paymentMethod"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "paymentMethod_id",
					"description": "id for paymentMethod",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"code",
							"displayName",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/dimensions": {
			"get": {
				"tags": [
					"dimensions"
				],
				"summary": "Returns a list of dimensions",
				"operationId": "getDimensions",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"dimensionValues"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"code",
								"displayName",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of dimensions",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/dimension"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/dimensions({dimension_id})": {
			"get": {
				"tags": [
					"dimensions"
				],
				"summary": "Obtain information about the dimension from its unique dimension_id",
				"operationId": "getDimensionById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested dimension",
						"schema": {
							"$ref": "#/definitions/dimension"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "dimension_id",
					"description": "id for dimension",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"dimensionValues"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"code",
							"displayName",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/dimensions({dimension_id})/dimensionValues": {
			"get": {
				"tags": [
					"dimensionValues"
				],
				"summary": "Returns a list of dimensionValues",
				"operationId": "getDimensionValuesForDimension",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"code",
								"displayName",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of dimensionValues",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/dimensionValue"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "dimension_id",
					"description": "id for dimension",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/dimensions({dimension_id})/dimensionValues({dimensionValue_id})": {
			"get": {
				"tags": [
					"dimensionValues"
				],
				"summary": "Obtain information about the dimensionValue from its unique dimensionValue_id",
				"operationId": "getDimensionValueForDimensionById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested dimensionValue",
						"schema": {
							"$ref": "#/definitions/dimensionValue"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "dimension_id",
					"description": "id for dimension",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "dimensionValue_id",
					"description": "id for dimensionValue",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"code",
							"displayName",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/dimensionValues": {
			"get": {
				"tags": [
					"dimensionValues"
				],
				"summary": "Returns a list of dimensionValues",
				"operationId": "getDimensionValues",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"code",
								"displayName",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of dimensionValues",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/dimensionValue"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/dimensionValues({dimensionValue_id})": {
			"get": {
				"tags": [
					"dimensionValues"
				],
				"summary": "Obtain information about the dimensionValue from its unique dimensionValue_id",
				"operationId": "getDimensionValueById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested dimensionValue",
						"schema": {
							"$ref": "#/definitions/dimensionValue"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "dimensionValue_id",
					"description": "id for dimensionValue",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"code",
							"displayName",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/dimensionLines": {
			"get": {
				"tags": [
					"dimensionLines"
				],
				"summary": "Returns a list of dimensionLines",
				"operationId": "getDimensionLines",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"dimension"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"parentId",
								"id",
								"code",
								"displayName",
								"valueId",
								"valueCode",
								"valueDisplayName"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of dimensionLines",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/dimensionLine"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"dimensionLines"
				],
				"summary": "Lets a user post a new dimensionLine",
				"operationId": "postDimensionLine",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"parentId": {
									"format": "uuid",
									"type": "string"
								},
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 20,
									"type": "string"
								},
								"displayName": {
									"maxLength": 30,
									"type": "string"
								},
								"valueId": {
									"format": "uuid",
									"type": "string"
								},
								"valueCode": {
									"type": "string"
								},
								"valueDisplayName": {
									"maxLength": 50,
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "dimensionLine succesfully created",
						"schema": {
							"$ref": "#/definitions/dimensionLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/dimensionLines({dimensionLine_parentId},{dimensionLine_id})": {
			"get": {
				"tags": [
					"dimensionLines"
				],
				"summary": "Obtain information about the dimensionLine from its unique dimensionLine_parentId, dimensionLine_id",
				"operationId": "getDimensionLineByIdByParentId",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested dimensionLine",
						"schema": {
							"$ref": "#/definitions/dimensionLine"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"dimensionLines"
				],
				"summary": "Allows the user to delete the specified dimensionLine",
				"operationId": "deleteDimensionLineByIdByParentId",
				"responses": {
					"204": {
						"description": "Succesfully deleted the dimensionLine with the specified dimensionLine_parentId, dimensionLine_id"
					}
				}
			},
			"patch": {
				"tags": [
					"dimensionLines"
				],
				"summary": "Lets the user patch the specified dimensionLine",
				"operationId": "patchDimensionLineByIdByParentId",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"parentId": {
									"format": "uuid",
									"type": "string"
								},
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 20,
									"type": "string"
								},
								"displayName": {
									"maxLength": 30,
									"type": "string"
								},
								"valueId": {
									"format": "uuid",
									"type": "string"
								},
								"valueCode": {
									"type": "string"
								},
								"valueDisplayName": {
									"maxLength": 50,
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the dimensionLine with the specified dimensionLine_parentId, dimensionLine_id",
						"schema": {
							"$ref": "#/definitions/dimensionLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "dimensionLine_parentId",
					"description": "parentId for dimensionLine",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "dimensionLine_id",
					"description": "id for dimensionLine",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"dimension"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"parentId",
							"id",
							"code",
							"displayName",
							"valueId",
							"valueCode",
							"valueDisplayName"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/paymentTerms": {
			"get": {
				"tags": [
					"paymentTerms"
				],
				"summary": "Returns a list of paymentTerms",
				"operationId": "getPaymentTerms",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"code",
								"displayName",
								"dueDateCalculation",
								"discountDateCalculation",
								"discountPercent",
								"calculateDiscountOnCreditMemos",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of paymentTerms",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/paymentTerm"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"paymentTerms"
				],
				"summary": "Lets a user post a new paymentTerm",
				"operationId": "postPaymentTerm",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 10,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"dueDateCalculation": {
									"type": "string"
								},
								"discountDateCalculation": {
									"type": "string"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"calculateDiscountOnCreditMemos": {
									"type": "boolean"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "paymentTerm succesfully created",
						"schema": {
							"$ref": "#/definitions/paymentTerm"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/paymentTerms({paymentTerm_id})": {
			"get": {
				"tags": [
					"paymentTerms"
				],
				"summary": "Obtain information about the paymentTerm from its unique paymentTerm_id",
				"operationId": "getPaymentTermById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested paymentTerm",
						"schema": {
							"$ref": "#/definitions/paymentTerm"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"paymentTerms"
				],
				"summary": "Allows the user to delete the specified paymentTerm",
				"operationId": "deletePaymentTermById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the paymentTerm with the specified paymentTerm_id"
					}
				}
			},
			"patch": {
				"tags": [
					"paymentTerms"
				],
				"summary": "Lets the user patch the specified paymentTerm",
				"operationId": "patchPaymentTermById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 10,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"dueDateCalculation": {
									"type": "string"
								},
								"discountDateCalculation": {
									"type": "string"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"calculateDiscountOnCreditMemos": {
									"type": "boolean"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the paymentTerm with the specified paymentTerm_id",
						"schema": {
							"$ref": "#/definitions/paymentTerm"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "paymentTerm_id",
					"description": "id for paymentTerm",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"code",
							"displayName",
							"dueDateCalculation",
							"discountDateCalculation",
							"discountPercent",
							"calculateDiscountOnCreditMemos",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/shipmentMethods": {
			"get": {
				"tags": [
					"shipmentMethods"
				],
				"summary": "Returns a list of shipmentMethods",
				"operationId": "getShipmentMethods",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"code",
								"displayName",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of shipmentMethods",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/shipmentMethod"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"shipmentMethods"
				],
				"summary": "Lets a user post a new shipmentMethod",
				"operationId": "postShipmentMethod",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 10,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "shipmentMethod succesfully created",
						"schema": {
							"$ref": "#/definitions/shipmentMethod"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/shipmentMethods({shipmentMethod_id})": {
			"get": {
				"tags": [
					"shipmentMethods"
				],
				"summary": "Obtain information about the shipmentMethod from its unique shipmentMethod_id",
				"operationId": "getShipmentMethodById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested shipmentMethod",
						"schema": {
							"$ref": "#/definitions/shipmentMethod"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"shipmentMethods"
				],
				"summary": "Allows the user to delete the specified shipmentMethod",
				"operationId": "deleteShipmentMethodById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the shipmentMethod with the specified shipmentMethod_id"
					}
				}
			},
			"patch": {
				"tags": [
					"shipmentMethods"
				],
				"summary": "Lets the user patch the specified shipmentMethod",
				"operationId": "patchShipmentMethodById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 10,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the shipmentMethod with the specified shipmentMethod_id",
						"schema": {
							"$ref": "#/definitions/shipmentMethod"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "shipmentMethod_id",
					"description": "id for shipmentMethod",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"code",
							"displayName",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/itemCategories": {
			"get": {
				"tags": [
					"itemCategories"
				],
				"summary": "Returns a list of itemCategories",
				"operationId": "getItemCategories",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"code",
								"displayName",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of itemCategories",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/itemCategory"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"itemCategories"
				],
				"summary": "Lets a user post a new itemCategory",
				"operationId": "postItemCategory",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 20,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "itemCategory succesfully created",
						"schema": {
							"$ref": "#/definitions/itemCategory"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/itemCategories({itemCategory_id})": {
			"get": {
				"tags": [
					"itemCategories"
				],
				"summary": "Obtain information about the itemCategory from its unique itemCategory_id",
				"operationId": "getItemCategoryById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested itemCategory",
						"schema": {
							"$ref": "#/definitions/itemCategory"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"itemCategories"
				],
				"summary": "Allows the user to delete the specified itemCategory",
				"operationId": "deleteItemCategoryById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the itemCategory with the specified itemCategory_id"
					}
				}
			},
			"patch": {
				"tags": [
					"itemCategories"
				],
				"summary": "Lets the user patch the specified itemCategory",
				"operationId": "patchItemCategoryById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 20,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the itemCategory with the specified itemCategory_id",
						"schema": {
							"$ref": "#/definitions/itemCategory"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "itemCategory_id",
					"description": "id for itemCategory",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"code",
							"displayName",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/cashFlowStatement": {
			"get": {
				"tags": [
					"cashFlowStatement"
				],
				"summary": "Returns a list of cashFlowStatement",
				"operationId": "getCashFlowStatement",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"lineNumber",
								"display",
								"netChange",
								"lineType",
								"indentation",
								"dateFilter"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of cashFlowStatement",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/cashFlowStatement"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/cashFlowStatement({cashFlowStatement_lineNumber})": {
			"get": {
				"tags": [
					"cashFlowStatement"
				],
				"summary": "Obtain information about the cashFlowStatement from its unique cashFlowStatement_lineNumber",
				"operationId": "getCashFlowStatementByLineNumber",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested cashFlowStatement",
						"schema": {
							"$ref": "#/definitions/cashFlowStatement"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "cashFlowStatement_lineNumber",
					"description": "lineNumber for cashFlowStatement",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"lineNumber",
							"display",
							"netChange",
							"lineType",
							"indentation",
							"dateFilter"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/countriesRegions": {
			"get": {
				"tags": [
					"countriesRegions"
				],
				"summary": "Returns a list of countriesRegions",
				"operationId": "getCountriesRegions",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"code",
								"displayName",
								"addressFormat",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of countriesRegions",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/countryRegion"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"countriesRegions"
				],
				"summary": "Lets a user post a new countryRegion",
				"operationId": "postCountryRegion",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 10,
									"type": "string"
								},
								"displayName": {
									"maxLength": 50,
									"type": "string"
								},
								"addressFormat": {
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "countryRegion succesfully created",
						"schema": {
							"$ref": "#/definitions/countryRegion"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/countriesRegions({countryRegion_id})": {
			"get": {
				"tags": [
					"countriesRegions"
				],
				"summary": "Obtain information about the countryRegion from its unique countryRegion_id",
				"operationId": "getCountryRegionById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested countryRegion",
						"schema": {
							"$ref": "#/definitions/countryRegion"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"countriesRegions"
				],
				"summary": "Allows the user to delete the specified countryRegion",
				"operationId": "deleteCountryRegionById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the countryRegion with the specified countryRegion_id"
					}
				}
			},
			"patch": {
				"tags": [
					"countriesRegions"
				],
				"summary": "Lets the user patch the specified countryRegion",
				"operationId": "patchCountryRegionById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 10,
									"type": "string"
								},
								"displayName": {
									"maxLength": 50,
									"type": "string"
								},
								"addressFormat": {
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the countryRegion with the specified countryRegion_id",
						"schema": {
							"$ref": "#/definitions/countryRegion"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "countryRegion_id",
					"description": "id for countryRegion",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"code",
							"displayName",
							"addressFormat",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/salesOrders": {
			"get": {
				"tags": [
					"salesOrders"
				],
				"summary": "Returns a list of salesOrders",
				"operationId": "getSalesOrders",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"salesOrderLines",
								"customer",
								"currency",
								"paymentTerm"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"number",
								"externalDocumentNumber",
								"orderDate",
								"customerId",
								"contactId",
								"customerNumber",
								"customerName",
								"billToName",
								"billToCustomerId",
								"billToCustomerNumber",
								"shipToName",
								"shipToContact",
								"sellingPostalAddress",
								"billingPostalAddress",
								"shippingPostalAddress",
								"currencyId",
								"currencyCode",
								"pricesIncludeTax",
								"paymentTermsId",
								"salesperson",
								"partialShipping",
								"requestedDeliveryDate",
								"discountAmount",
								"discountAppliedBeforeTax",
								"totalAmountExcludingTax",
								"totalTaxAmount",
								"totalAmountIncludingTax",
								"fullyShipped",
								"status",
								"lastModifiedDateTime",
								"phoneNumber",
								"email"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of salesOrders",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/salesOrder"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"salesOrders"
				],
				"summary": "Lets a user post a new salesOrder",
				"operationId": "postSalesOrder",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"number": {
									"maxLength": 20,
									"type": "string"
								},
								"externalDocumentNumber": {
									"maxLength": 35,
									"type": "string"
								},
								"orderDate": {
									"format": "date-time",
									"type": "string"
								},
								"customerId": {
									"format": "uuid",
									"type": "string"
								},
								"contactId": {
									"maxLength": 250,
									"type": "string"
								},
								"customerNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"customerName": {
									"maxLength": 100,
									"type": "string"
								},
								"billToName": {
									"maxLength": 100,
									"type": "string"
								},
								"billToCustomerId": {
									"format": "uuid",
									"type": "string"
								},
								"billToCustomerNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"shipToName": {
									"maxLength": 100,
									"type": "string"
								},
								"shipToContact": {
									"maxLength": 100,
									"type": "string"
								},
								"sellingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"billingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"shippingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"currencyId": {
									"format": "uuid",
									"type": "string"
								},
								"currencyCode": {
									"type": "string"
								},
								"pricesIncludeTax": {
									"type": "boolean"
								},
								"paymentTermsId": {
									"format": "uuid",
									"type": "string"
								},
								"salesperson": {
									"maxLength": 20,
									"type": "string"
								},
								"partialShipping": {
									"type": "boolean"
								},
								"requestedDeliveryDate": {
									"format": "date-time",
									"type": "string"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"totalAmountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"totalAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"fullyShipped": {
									"type": "boolean"
								},
								"status": {
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								},
								"phoneNumber": {
									"maxLength": 30,
									"type": "string"
								},
								"email": {
									"maxLength": 80,
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "salesOrder succesfully created",
						"schema": {
							"$ref": "#/definitions/salesOrder"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesOrders({salesOrder_id})": {
			"get": {
				"tags": [
					"salesOrders"
				],
				"summary": "Obtain information about the salesOrder from its unique salesOrder_id",
				"operationId": "getSalesOrderById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested salesOrder",
						"schema": {
							"$ref": "#/definitions/salesOrder"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"salesOrders"
				],
				"summary": "Allows the user to delete the specified salesOrder",
				"operationId": "deleteSalesOrderById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the salesOrder with the specified salesOrder_id"
					}
				}
			},
			"patch": {
				"tags": [
					"salesOrders"
				],
				"summary": "Lets the user patch the specified salesOrder",
				"operationId": "patchSalesOrderById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"number": {
									"maxLength": 20,
									"type": "string"
								},
								"externalDocumentNumber": {
									"maxLength": 35,
									"type": "string"
								},
								"orderDate": {
									"format": "date-time",
									"type": "string"
								},
								"customerId": {
									"format": "uuid",
									"type": "string"
								},
								"contactId": {
									"maxLength": 250,
									"type": "string"
								},
								"customerNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"customerName": {
									"maxLength": 100,
									"type": "string"
								},
								"billToName": {
									"maxLength": 100,
									"type": "string"
								},
								"billToCustomerId": {
									"format": "uuid",
									"type": "string"
								},
								"billToCustomerNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"shipToName": {
									"maxLength": 100,
									"type": "string"
								},
								"shipToContact": {
									"maxLength": 100,
									"type": "string"
								},
								"sellingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"billingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"shippingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"currencyId": {
									"format": "uuid",
									"type": "string"
								},
								"currencyCode": {
									"type": "string"
								},
								"pricesIncludeTax": {
									"type": "boolean"
								},
								"paymentTermsId": {
									"format": "uuid",
									"type": "string"
								},
								"salesperson": {
									"maxLength": 20,
									"type": "string"
								},
								"partialShipping": {
									"type": "boolean"
								},
								"requestedDeliveryDate": {
									"format": "date-time",
									"type": "string"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"totalAmountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"totalAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"fullyShipped": {
									"type": "boolean"
								},
								"status": {
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								},
								"phoneNumber": {
									"maxLength": 30,
									"type": "string"
								},
								"email": {
									"maxLength": 80,
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the salesOrder with the specified salesOrder_id",
						"schema": {
							"$ref": "#/definitions/salesOrder"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesOrder_id",
					"description": "id for salesOrder",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"salesOrderLines",
							"customer",
							"currency",
							"paymentTerm"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"number",
							"externalDocumentNumber",
							"orderDate",
							"customerId",
							"contactId",
							"customerNumber",
							"customerName",
							"billToName",
							"billToCustomerId",
							"billToCustomerNumber",
							"shipToName",
							"shipToContact",
							"sellingPostalAddress",
							"billingPostalAddress",
							"shippingPostalAddress",
							"currencyId",
							"currencyCode",
							"pricesIncludeTax",
							"paymentTermsId",
							"salesperson",
							"partialShipping",
							"requestedDeliveryDate",
							"discountAmount",
							"discountAppliedBeforeTax",
							"totalAmountExcludingTax",
							"totalTaxAmount",
							"totalAmountIncludingTax",
							"fullyShipped",
							"status",
							"lastModifiedDateTime",
							"phoneNumber",
							"email"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/salesOrders({salesOrder_id})/salesOrderLines": {
			"get": {
				"tags": [
					"salesOrderLines"
				],
				"summary": "Returns a list of salesOrderLines",
				"operationId": "getSalesOrderLinesForSalesOrder",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"item",
								"account"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"documentId",
								"sequence",
								"itemId",
								"accountId",
								"lineType",
								"lineDetails",
								"description",
								"unitOfMeasureId",
								"unitOfMeasure",
								"quantity",
								"unitPrice",
								"discountAmount",
								"discountPercent",
								"discountAppliedBeforeTax",
								"amountExcludingTax",
								"taxCode",
								"taxPercent",
								"totalTaxAmount",
								"amountIncludingTax",
								"invoiceDiscountAllocation",
								"netAmount",
								"netTaxAmount",
								"netAmountIncludingTax",
								"shipmentDate",
								"shippedQuantity",
								"invoicedQuantity",
								"invoiceQuantity",
								"shipQuantity"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of salesOrderLines",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/salesOrderLine"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"salesOrderLines"
				],
				"summary": "Lets a user post a new salesOrderLine",
				"operationId": "postSalesOrderLineForSalesOrder",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"maxLength": 50,
									"type": "string"
								},
								"documentId": {
									"format": "uuid",
									"type": "string"
								},
								"sequence": {
									"format": "int32",
									"type": "integer"
								},
								"itemId": {
									"format": "uuid",
									"type": "string"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"lineType": {
									"type": "string"
								},
								"lineDetails": {
									"$ref": "#/definitions/documentlineobjectdetailstype"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"unitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"unitPrice": {
									"format": "decimal",
									"type": "number"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"amountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"taxCode": {
									"maxLength": 50,
									"type": "string"
								},
								"taxPercent": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"amountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"invoiceDiscountAllocation": {
									"format": "decimal",
									"type": "number"
								},
								"netAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"shipmentDate": {
									"format": "date-time",
									"type": "string"
								},
								"shippedQuantity": {
									"format": "decimal",
									"type": "number"
								},
								"invoicedQuantity": {
									"format": "decimal",
									"type": "number"
								},
								"invoiceQuantity": {
									"format": "decimal",
									"type": "number"
								},
								"shipQuantity": {
									"format": "decimal",
									"type": "number"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "salesOrderLine succesfully created",
						"schema": {
							"$ref": "#/definitions/salesOrderLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesOrder_id",
					"description": "id for salesOrder",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesOrders({salesOrder_id})/salesOrderLines('{salesOrderLine_id}')": {
			"get": {
				"tags": [
					"salesOrderLines"
				],
				"summary": "Obtain information about the salesOrderLine from its unique salesOrderLine_id",
				"operationId": "getSalesOrderLineForSalesOrderById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested salesOrderLine",
						"schema": {
							"$ref": "#/definitions/salesOrderLine"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"salesOrderLines"
				],
				"summary": "Allows the user to delete the specified salesOrderLine",
				"operationId": "deleteSalesOrderLineForSalesOrderByIdById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the salesOrderLine with the specified salesOrderLine_id"
					}
				}
			},
			"patch": {
				"tags": [
					"salesOrderLines"
				],
				"summary": "Lets the user patch the specified salesOrderLine",
				"operationId": "patchSalesOrderLineForSalesOrderByIdById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"maxLength": 50,
									"type": "string"
								},
								"documentId": {
									"format": "uuid",
									"type": "string"
								},
								"sequence": {
									"format": "int32",
									"type": "integer"
								},
								"itemId": {
									"format": "uuid",
									"type": "string"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"lineType": {
									"type": "string"
								},
								"lineDetails": {
									"$ref": "#/definitions/documentlineobjectdetailstype"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"unitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"unitPrice": {
									"format": "decimal",
									"type": "number"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"amountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"taxCode": {
									"maxLength": 50,
									"type": "string"
								},
								"taxPercent": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"amountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"invoiceDiscountAllocation": {
									"format": "decimal",
									"type": "number"
								},
								"netAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"shipmentDate": {
									"format": "date-time",
									"type": "string"
								},
								"shippedQuantity": {
									"format": "decimal",
									"type": "number"
								},
								"invoicedQuantity": {
									"format": "decimal",
									"type": "number"
								},
								"invoiceQuantity": {
									"format": "decimal",
									"type": "number"
								},
								"shipQuantity": {
									"format": "decimal",
									"type": "number"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the salesOrderLine with the specified salesOrderLine_id",
						"schema": {
							"$ref": "#/definitions/salesOrderLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesOrder_id",
					"description": "id for salesOrder",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesOrderLine_id",
					"description": "id for salesOrderLine",
					"required": true,
					"type": "string"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"item",
							"account"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"documentId",
							"sequence",
							"itemId",
							"accountId",
							"lineType",
							"lineDetails",
							"description",
							"unitOfMeasureId",
							"unitOfMeasure",
							"quantity",
							"unitPrice",
							"discountAmount",
							"discountPercent",
							"discountAppliedBeforeTax",
							"amountExcludingTax",
							"taxCode",
							"taxPercent",
							"totalTaxAmount",
							"amountIncludingTax",
							"invoiceDiscountAllocation",
							"netAmount",
							"netTaxAmount",
							"netAmountIncludingTax",
							"shipmentDate",
							"shippedQuantity",
							"invoicedQuantity",
							"invoiceQuantity",
							"shipQuantity"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/salesOrderLines": {
			"get": {
				"tags": [
					"salesOrderLines"
				],
				"summary": "Returns a list of salesOrderLines",
				"operationId": "getSalesOrderLines",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"item",
								"account"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"documentId",
								"sequence",
								"itemId",
								"accountId",
								"lineType",
								"lineDetails",
								"description",
								"unitOfMeasureId",
								"unitOfMeasure",
								"quantity",
								"unitPrice",
								"discountAmount",
								"discountPercent",
								"discountAppliedBeforeTax",
								"amountExcludingTax",
								"taxCode",
								"taxPercent",
								"totalTaxAmount",
								"amountIncludingTax",
								"invoiceDiscountAllocation",
								"netAmount",
								"netTaxAmount",
								"netAmountIncludingTax",
								"shipmentDate",
								"shippedQuantity",
								"invoicedQuantity",
								"invoiceQuantity",
								"shipQuantity"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of salesOrderLines",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/salesOrderLine"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"salesOrderLines"
				],
				"summary": "Lets a user post a new salesOrderLine",
				"operationId": "postSalesOrderLine",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"maxLength": 50,
									"type": "string"
								},
								"documentId": {
									"format": "uuid",
									"type": "string"
								},
								"sequence": {
									"format": "int32",
									"type": "integer"
								},
								"itemId": {
									"format": "uuid",
									"type": "string"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"lineType": {
									"type": "string"
								},
								"lineDetails": {
									"$ref": "#/definitions/documentlineobjectdetailstype"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"unitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"unitPrice": {
									"format": "decimal",
									"type": "number"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"amountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"taxCode": {
									"maxLength": 50,
									"type": "string"
								},
								"taxPercent": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"amountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"invoiceDiscountAllocation": {
									"format": "decimal",
									"type": "number"
								},
								"netAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"shipmentDate": {
									"format": "date-time",
									"type": "string"
								},
								"shippedQuantity": {
									"format": "decimal",
									"type": "number"
								},
								"invoicedQuantity": {
									"format": "decimal",
									"type": "number"
								},
								"invoiceQuantity": {
									"format": "decimal",
									"type": "number"
								},
								"shipQuantity": {
									"format": "decimal",
									"type": "number"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "salesOrderLine succesfully created",
						"schema": {
							"$ref": "#/definitions/salesOrderLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesOrderLines('{salesOrderLine_id}')": {
			"get": {
				"tags": [
					"salesOrderLines"
				],
				"summary": "Obtain information about the salesOrderLine from its unique salesOrderLine_id",
				"operationId": "getSalesOrderLineById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested salesOrderLine",
						"schema": {
							"$ref": "#/definitions/salesOrderLine"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"salesOrderLines"
				],
				"summary": "Allows the user to delete the specified salesOrderLine",
				"operationId": "deleteSalesOrderLineById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the salesOrderLine with the specified salesOrderLine_id"
					}
				}
			},
			"patch": {
				"tags": [
					"salesOrderLines"
				],
				"summary": "Lets the user patch the specified salesOrderLine",
				"operationId": "patchSalesOrderLineById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"maxLength": 50,
									"type": "string"
								},
								"documentId": {
									"format": "uuid",
									"type": "string"
								},
								"sequence": {
									"format": "int32",
									"type": "integer"
								},
								"itemId": {
									"format": "uuid",
									"type": "string"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"lineType": {
									"type": "string"
								},
								"lineDetails": {
									"$ref": "#/definitions/documentlineobjectdetailstype"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"unitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"unitPrice": {
									"format": "decimal",
									"type": "number"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"amountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"taxCode": {
									"maxLength": 50,
									"type": "string"
								},
								"taxPercent": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"amountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"invoiceDiscountAllocation": {
									"format": "decimal",
									"type": "number"
								},
								"netAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"shipmentDate": {
									"format": "date-time",
									"type": "string"
								},
								"shippedQuantity": {
									"format": "decimal",
									"type": "number"
								},
								"invoicedQuantity": {
									"format": "decimal",
									"type": "number"
								},
								"invoiceQuantity": {
									"format": "decimal",
									"type": "number"
								},
								"shipQuantity": {
									"format": "decimal",
									"type": "number"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the salesOrderLine with the specified salesOrderLine_id",
						"schema": {
							"$ref": "#/definitions/salesOrderLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesOrderLine_id",
					"description": "id for salesOrderLine",
					"required": true,
					"type": "string"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"item",
							"account"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"documentId",
							"sequence",
							"itemId",
							"accountId",
							"lineType",
							"lineDetails",
							"description",
							"unitOfMeasureId",
							"unitOfMeasure",
							"quantity",
							"unitPrice",
							"discountAmount",
							"discountPercent",
							"discountAppliedBeforeTax",
							"amountExcludingTax",
							"taxCode",
							"taxPercent",
							"totalTaxAmount",
							"amountIncludingTax",
							"invoiceDiscountAllocation",
							"netAmount",
							"netTaxAmount",
							"netAmountIncludingTax",
							"shipmentDate",
							"shippedQuantity",
							"invoicedQuantity",
							"invoiceQuantity",
							"shipQuantity"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/retainedEarningsStatement": {
			"get": {
				"tags": [
					"retainedEarningsStatement"
				],
				"summary": "Returns a list of retainedEarningsStatement",
				"operationId": "getRetainedEarningsStatement",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"lineNumber",
								"display",
								"netChange",
								"lineType",
								"indentation",
								"dateFilter"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of retainedEarningsStatement",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/retainedEarningsStatement"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/retainedEarningsStatement({retainedEarningsStatement_lineNumber})": {
			"get": {
				"tags": [
					"retainedEarningsStatement"
				],
				"summary": "Obtain information about the retainedEarningsStatement from its unique retainedEarningsStatement_lineNumber",
				"operationId": "getRetainedEarningsStatementByLineNumber",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested retainedEarningsStatement",
						"schema": {
							"$ref": "#/definitions/retainedEarningsStatement"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "retainedEarningsStatement_lineNumber",
					"description": "lineNumber for retainedEarningsStatement",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"lineNumber",
							"display",
							"netChange",
							"lineType",
							"indentation",
							"dateFilter"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/unitsOfMeasure": {
			"get": {
				"tags": [
					"unitsOfMeasure"
				],
				"summary": "Returns a list of unitsOfMeasure",
				"operationId": "getUnitsOfMeasure",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"code",
								"displayName",
								"internationalStandardCode",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of unitsOfMeasure",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/unitOfMeasure"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"unitsOfMeasure"
				],
				"summary": "Lets a user post a new unitOfMeasure",
				"operationId": "postUnitOfMeasure",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 10,
									"type": "string"
								},
								"displayName": {
									"maxLength": 50,
									"type": "string"
								},
								"internationalStandardCode": {
									"maxLength": 10,
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "unitOfMeasure succesfully created",
						"schema": {
							"$ref": "#/definitions/unitOfMeasure"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/unitsOfMeasure({unitOfMeasure_id})": {
			"get": {
				"tags": [
					"unitsOfMeasure"
				],
				"summary": "Obtain information about the unitOfMeasure from its unique unitOfMeasure_id",
				"operationId": "getUnitOfMeasureById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested unitOfMeasure",
						"schema": {
							"$ref": "#/definitions/unitOfMeasure"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"unitsOfMeasure"
				],
				"summary": "Allows the user to delete the specified unitOfMeasure",
				"operationId": "deleteUnitOfMeasureById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the unitOfMeasure with the specified unitOfMeasure_id"
					}
				}
			},
			"patch": {
				"tags": [
					"unitsOfMeasure"
				],
				"summary": "Lets the user patch the specified unitOfMeasure",
				"operationId": "patchUnitOfMeasureById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 10,
									"type": "string"
								},
								"displayName": {
									"maxLength": 50,
									"type": "string"
								},
								"internationalStandardCode": {
									"maxLength": 10,
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the unitOfMeasure with the specified unitOfMeasure_id",
						"schema": {
							"$ref": "#/definitions/unitOfMeasure"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "unitOfMeasure_id",
					"description": "id for unitOfMeasure",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"code",
							"displayName",
							"internationalStandardCode",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/agedAccountsReceivable": {
			"get": {
				"tags": [
					"agedAccountsReceivable"
				],
				"summary": "Returns a list of agedAccountsReceivable",
				"operationId": "getAgedAccountsReceivable",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"customerId",
								"customerNumber",
								"name",
								"currencyCode",
								"balanceDue",
								"currentAmount",
								"period1Amount",
								"period2Amount",
								"period3Amount",
								"agedAsOfDate",
								"periodLengthFilter"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of agedAccountsReceivable",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/agedAccountsReceivable"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/agedAccountsReceivable({agedAccountsReceivable_customerId})": {
			"get": {
				"tags": [
					"agedAccountsReceivable"
				],
				"summary": "Obtain information about the agedAccountsReceivable from its unique agedAccountsReceivable_customerId",
				"operationId": "getAgedAccountsReceivableByCustomerId",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested agedAccountsReceivable",
						"schema": {
							"$ref": "#/definitions/agedAccountsReceivable"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "agedAccountsReceivable_customerId",
					"description": "customerId for agedAccountsReceivable",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"customerId",
							"customerNumber",
							"name",
							"currencyCode",
							"balanceDue",
							"currentAmount",
							"period1Amount",
							"period2Amount",
							"period3Amount",
							"agedAsOfDate",
							"periodLengthFilter"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/agedAccountsPayable": {
			"get": {
				"tags": [
					"agedAccountsPayable"
				],
				"summary": "Returns a list of agedAccountsPayable",
				"operationId": "getAgedAccountsPayable",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"vendorId",
								"vendorNumber",
								"name",
								"currencyCode",
								"balanceDue",
								"currentAmount",
								"period1Amount",
								"period2Amount",
								"period3Amount",
								"agedAsOfDate",
								"periodLengthFilter"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of agedAccountsPayable",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/agedAccountsPayable"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/agedAccountsPayable({agedAccountsPayable_vendorId})": {
			"get": {
				"tags": [
					"agedAccountsPayable"
				],
				"summary": "Obtain information about the agedAccountsPayable from its unique agedAccountsPayable_vendorId",
				"operationId": "getAgedAccountsPayableByVendorId",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested agedAccountsPayable",
						"schema": {
							"$ref": "#/definitions/agedAccountsPayable"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "agedAccountsPayable_vendorId",
					"description": "vendorId for agedAccountsPayable",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"vendorId",
							"vendorNumber",
							"name",
							"currencyCode",
							"balanceDue",
							"currentAmount",
							"period1Amount",
							"period2Amount",
							"period3Amount",
							"agedAsOfDate",
							"periodLengthFilter"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/balanceSheet": {
			"get": {
				"tags": [
					"balanceSheet"
				],
				"summary": "Returns a list of balanceSheet",
				"operationId": "getBalanceSheet",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"lineNumber",
								"display",
								"balance",
								"lineType",
								"indentation",
								"dateFilter"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of balanceSheet",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/balanceSheet"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/balanceSheet({balanceSheet_lineNumber})": {
			"get": {
				"tags": [
					"balanceSheet"
				],
				"summary": "Obtain information about the balanceSheet from its unique balanceSheet_lineNumber",
				"operationId": "getBalanceSheetByLineNumber",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested balanceSheet",
						"schema": {
							"$ref": "#/definitions/balanceSheet"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "balanceSheet_lineNumber",
					"description": "lineNumber for balanceSheet",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"lineNumber",
							"display",
							"balance",
							"lineType",
							"indentation",
							"dateFilter"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/trialBalance": {
			"get": {
				"tags": [
					"trialBalance"
				],
				"summary": "Returns a list of trialBalance",
				"operationId": "getTrialBalance",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"account"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"number",
								"accountId",
								"accountType",
								"display",
								"totalDebit",
								"totalCredit",
								"balanceAtDateDebit",
								"balanceAtDateCredit",
								"dateFilter"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of trialBalance",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/trialBalance"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/trialBalance('{trialBalance_number}')": {
			"get": {
				"tags": [
					"trialBalance"
				],
				"summary": "Obtain information about the trialBalance from its unique trialBalance_number",
				"operationId": "getTrialBalanceByNumber",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested trialBalance",
						"schema": {
							"$ref": "#/definitions/trialBalance"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "trialBalance_number",
					"description": "number for trialBalance",
					"required": true,
					"type": "string"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"account"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"number",
							"accountId",
							"accountType",
							"display",
							"totalDebit",
							"totalCredit",
							"balanceAtDateDebit",
							"balanceAtDateCredit",
							"dateFilter"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/incomeStatement": {
			"get": {
				"tags": [
					"incomeStatement"
				],
				"summary": "Returns a list of incomeStatement",
				"operationId": "getIncomeStatement",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"lineNumber",
								"display",
								"netChange",
								"lineType",
								"indentation",
								"dateFilter"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of incomeStatement",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/incomeStatement"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/incomeStatement({incomeStatement_lineNumber})": {
			"get": {
				"tags": [
					"incomeStatement"
				],
				"summary": "Obtain information about the incomeStatement from its unique incomeStatement_lineNumber",
				"operationId": "getIncomeStatementByLineNumber",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested incomeStatement",
						"schema": {
							"$ref": "#/definitions/incomeStatement"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "incomeStatement_lineNumber",
					"description": "lineNumber for incomeStatement",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"lineNumber",
							"display",
							"netChange",
							"lineType",
							"indentation",
							"dateFilter"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/taxAreas": {
			"get": {
				"tags": [
					"taxAreas"
				],
				"summary": "Returns a list of taxAreas",
				"operationId": "getTaxAreas",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"code",
								"displayName",
								"taxType",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of taxAreas",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/taxArea"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"taxAreas"
				],
				"summary": "Lets a user post a new taxArea",
				"operationId": "postTaxArea",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 20,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"taxType": {
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "taxArea succesfully created",
						"schema": {
							"$ref": "#/definitions/taxArea"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/taxAreas({taxArea_id})": {
			"get": {
				"tags": [
					"taxAreas"
				],
				"summary": "Obtain information about the taxArea from its unique taxArea_id",
				"operationId": "getTaxAreaById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested taxArea",
						"schema": {
							"$ref": "#/definitions/taxArea"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"taxAreas"
				],
				"summary": "Allows the user to delete the specified taxArea",
				"operationId": "deleteTaxAreaById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the taxArea with the specified taxArea_id"
					}
				}
			},
			"patch": {
				"tags": [
					"taxAreas"
				],
				"summary": "Lets the user patch the specified taxArea",
				"operationId": "patchTaxAreaById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"code": {
									"maxLength": 20,
									"type": "string"
								},
								"displayName": {
									"maxLength": 100,
									"type": "string"
								},
								"taxType": {
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the taxArea with the specified taxArea_id",
						"schema": {
							"$ref": "#/definitions/taxArea"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "taxArea_id",
					"description": "id for taxArea",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"code",
							"displayName",
							"taxType",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/salesQuotes": {
			"get": {
				"tags": [
					"salesQuotes"
				],
				"summary": "Returns a list of salesQuotes",
				"operationId": "getSalesQuotes",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"salesQuoteLines",
								"pdfDocument",
								"customer",
								"currency",
								"paymentTerm",
								"shipmentMethod"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"number",
								"externalDocumentNumber",
								"documentDate",
								"dueDate",
								"customerId",
								"contactId",
								"customerNumber",
								"customerName",
								"billToName",
								"billToCustomerId",
								"billToCustomerNumber",
								"shipToName",
								"shipToContact",
								"sellingPostalAddress",
								"billingPostalAddress",
								"shippingPostalAddress",
								"currencyId",
								"currencyCode",
								"paymentTermsId",
								"shipmentMethodId",
								"salesperson",
								"discountAmount",
								"totalAmountExcludingTax",
								"totalTaxAmount",
								"totalAmountIncludingTax",
								"status",
								"sentDate",
								"validUntilDate",
								"acceptedDate",
								"lastModifiedDateTime",
								"phoneNumber",
								"email"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of salesQuotes",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/salesQuote"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"salesQuotes"
				],
				"summary": "Lets a user post a new salesQuote",
				"operationId": "postSalesQuote",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"number": {
									"maxLength": 20,
									"type": "string"
								},
								"externalDocumentNumber": {
									"maxLength": 35,
									"type": "string"
								},
								"documentDate": {
									"format": "date-time",
									"type": "string"
								},
								"dueDate": {
									"format": "date-time",
									"type": "string"
								},
								"customerId": {
									"format": "uuid",
									"type": "string"
								},
								"contactId": {
									"maxLength": 250,
									"type": "string"
								},
								"customerNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"customerName": {
									"maxLength": 100,
									"type": "string"
								},
								"billToName": {
									"maxLength": 100,
									"type": "string"
								},
								"billToCustomerId": {
									"format": "uuid",
									"type": "string"
								},
								"billToCustomerNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"shipToName": {
									"maxLength": 100,
									"type": "string"
								},
								"shipToContact": {
									"maxLength": 100,
									"type": "string"
								},
								"sellingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"billingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"shippingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"currencyId": {
									"format": "uuid",
									"type": "string"
								},
								"currencyCode": {
									"type": "string"
								},
								"paymentTermsId": {
									"format": "uuid",
									"type": "string"
								},
								"shipmentMethodId": {
									"format": "uuid",
									"type": "string"
								},
								"salesperson": {
									"maxLength": 20,
									"type": "string"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"totalAmountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"totalAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"status": {
									"type": "string"
								},
								"sentDate": {
									"format": "date-time",
									"type": "string"
								},
								"validUntilDate": {
									"format": "date-time",
									"type": "string"
								},
								"acceptedDate": {
									"format": "date-time",
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								},
								"phoneNumber": {
									"maxLength": 30,
									"type": "string"
								},
								"email": {
									"maxLength": 80,
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "salesQuote succesfully created",
						"schema": {
							"$ref": "#/definitions/salesQuote"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesQuotes({salesQuote_id})": {
			"get": {
				"tags": [
					"salesQuotes"
				],
				"summary": "Obtain information about the salesQuote from its unique salesQuote_id",
				"operationId": "getSalesQuoteById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested salesQuote",
						"schema": {
							"$ref": "#/definitions/salesQuote"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"salesQuotes"
				],
				"summary": "Allows the user to delete the specified salesQuote",
				"operationId": "deleteSalesQuoteById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the salesQuote with the specified salesQuote_id"
					}
				}
			},
			"patch": {
				"tags": [
					"salesQuotes"
				],
				"summary": "Lets the user patch the specified salesQuote",
				"operationId": "patchSalesQuoteById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"number": {
									"maxLength": 20,
									"type": "string"
								},
								"externalDocumentNumber": {
									"maxLength": 35,
									"type": "string"
								},
								"documentDate": {
									"format": "date-time",
									"type": "string"
								},
								"dueDate": {
									"format": "date-time",
									"type": "string"
								},
								"customerId": {
									"format": "uuid",
									"type": "string"
								},
								"contactId": {
									"maxLength": 250,
									"type": "string"
								},
								"customerNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"customerName": {
									"maxLength": 100,
									"type": "string"
								},
								"billToName": {
									"maxLength": 100,
									"type": "string"
								},
								"billToCustomerId": {
									"format": "uuid",
									"type": "string"
								},
								"billToCustomerNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"shipToName": {
									"maxLength": 100,
									"type": "string"
								},
								"shipToContact": {
									"maxLength": 100,
									"type": "string"
								},
								"sellingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"billingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"shippingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"currencyId": {
									"format": "uuid",
									"type": "string"
								},
								"currencyCode": {
									"type": "string"
								},
								"paymentTermsId": {
									"format": "uuid",
									"type": "string"
								},
								"shipmentMethodId": {
									"format": "uuid",
									"type": "string"
								},
								"salesperson": {
									"maxLength": 20,
									"type": "string"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"totalAmountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"totalAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"status": {
									"type": "string"
								},
								"sentDate": {
									"format": "date-time",
									"type": "string"
								},
								"validUntilDate": {
									"format": "date-time",
									"type": "string"
								},
								"acceptedDate": {
									"format": "date-time",
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								},
								"phoneNumber": {
									"maxLength": 30,
									"type": "string"
								},
								"email": {
									"maxLength": 80,
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the salesQuote with the specified salesQuote_id",
						"schema": {
							"$ref": "#/definitions/salesQuote"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesQuote_id",
					"description": "id for salesQuote",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"salesQuoteLines",
							"pdfDocument",
							"customer",
							"currency",
							"paymentTerm",
							"shipmentMethod"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"number",
							"externalDocumentNumber",
							"documentDate",
							"dueDate",
							"customerId",
							"contactId",
							"customerNumber",
							"customerName",
							"billToName",
							"billToCustomerId",
							"billToCustomerNumber",
							"shipToName",
							"shipToContact",
							"sellingPostalAddress",
							"billingPostalAddress",
							"shippingPostalAddress",
							"currencyId",
							"currencyCode",
							"paymentTermsId",
							"shipmentMethodId",
							"salesperson",
							"discountAmount",
							"totalAmountExcludingTax",
							"totalTaxAmount",
							"totalAmountIncludingTax",
							"status",
							"sentDate",
							"validUntilDate",
							"acceptedDate",
							"lastModifiedDateTime",
							"phoneNumber",
							"email"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/salesQuotes({salesQuote_id})/Microsoft.NAV.makeInvoice": {
			"post": {
				"tags": [
					"salesQuotes"
				],
				"summary": "Performs the makeInvoice action for salesQuotes entity",
				"operationId": "MakeInvoiceAction_SalesQuotes",
				"responses": {
					"204": {
						"description": "Succesfully perfpormed a makeInvoice action on the salesQuotes entity"
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesQuote_id",
					"description": "id for salesQuote",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesQuotes({salesQuote_id})/Microsoft.NAV.send": {
			"post": {
				"tags": [
					"salesQuotes"
				],
				"summary": "Performs the send action for salesQuotes entity",
				"operationId": "SendAction_SalesQuotes",
				"responses": {
					"204": {
						"description": "Succesfully perfpormed a send action on the salesQuotes entity"
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesQuote_id",
					"description": "id for salesQuote",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesQuotes({salesQuote_id})/salesQuoteLines": {
			"get": {
				"tags": [
					"salesQuoteLines"
				],
				"summary": "Returns a list of salesQuoteLines",
				"operationId": "getSalesQuoteLinesForSalesQuote",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"item",
								"account"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"documentId",
								"sequence",
								"itemId",
								"accountId",
								"lineType",
								"lineDetails",
								"description",
								"unitOfMeasureId",
								"unitOfMeasure",
								"unitPrice",
								"quantity",
								"discountAmount",
								"discountPercent",
								"discountAppliedBeforeTax",
								"amountExcludingTax",
								"taxCode",
								"taxPercent",
								"totalTaxAmount",
								"amountIncludingTax",
								"netAmount",
								"netTaxAmount",
								"netAmountIncludingTax"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of salesQuoteLines",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/salesQuoteLine"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"salesQuoteLines"
				],
				"summary": "Lets a user post a new salesQuoteLine",
				"operationId": "postSalesQuoteLineForSalesQuote",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"maxLength": 50,
									"type": "string"
								},
								"documentId": {
									"format": "uuid",
									"type": "string"
								},
								"sequence": {
									"format": "int32",
									"type": "integer"
								},
								"itemId": {
									"format": "uuid",
									"type": "string"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"lineType": {
									"type": "string"
								},
								"lineDetails": {
									"$ref": "#/definitions/documentlineobjectdetailstype"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"unitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"unitPrice": {
									"format": "decimal",
									"type": "number"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"amountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"taxCode": {
									"maxLength": 50,
									"type": "string"
								},
								"taxPercent": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"amountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"netAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "salesQuoteLine succesfully created",
						"schema": {
							"$ref": "#/definitions/salesQuoteLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesQuote_id",
					"description": "id for salesQuote",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesQuotes({salesQuote_id})/salesQuoteLines('{salesQuoteLine_id}')": {
			"get": {
				"tags": [
					"salesQuoteLines"
				],
				"summary": "Obtain information about the salesQuoteLine from its unique salesQuoteLine_id",
				"operationId": "getSalesQuoteLineForSalesQuoteById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested salesQuoteLine",
						"schema": {
							"$ref": "#/definitions/salesQuoteLine"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"salesQuoteLines"
				],
				"summary": "Allows the user to delete the specified salesQuoteLine",
				"operationId": "deleteSalesQuoteLineForSalesQuoteByIdById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the salesQuoteLine with the specified salesQuoteLine_id"
					}
				}
			},
			"patch": {
				"tags": [
					"salesQuoteLines"
				],
				"summary": "Lets the user patch the specified salesQuoteLine",
				"operationId": "patchSalesQuoteLineForSalesQuoteByIdById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"maxLength": 50,
									"type": "string"
								},
								"documentId": {
									"format": "uuid",
									"type": "string"
								},
								"sequence": {
									"format": "int32",
									"type": "integer"
								},
								"itemId": {
									"format": "uuid",
									"type": "string"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"lineType": {
									"type": "string"
								},
								"lineDetails": {
									"$ref": "#/definitions/documentlineobjectdetailstype"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"unitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"unitPrice": {
									"format": "decimal",
									"type": "number"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"amountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"taxCode": {
									"maxLength": 50,
									"type": "string"
								},
								"taxPercent": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"amountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"netAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the salesQuoteLine with the specified salesQuoteLine_id",
						"schema": {
							"$ref": "#/definitions/salesQuoteLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesQuote_id",
					"description": "id for salesQuote",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesQuoteLine_id",
					"description": "id for salesQuoteLine",
					"required": true,
					"type": "string"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"item",
							"account"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"documentId",
							"sequence",
							"itemId",
							"accountId",
							"lineType",
							"lineDetails",
							"description",
							"unitOfMeasureId",
							"unitOfMeasure",
							"unitPrice",
							"quantity",
							"discountAmount",
							"discountPercent",
							"discountAppliedBeforeTax",
							"amountExcludingTax",
							"taxCode",
							"taxPercent",
							"totalTaxAmount",
							"amountIncludingTax",
							"netAmount",
							"netTaxAmount",
							"netAmountIncludingTax"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/salesQuotes({salesQuote_id})/pdfDocument": {
			"get": {
				"tags": [
					"pdfDocument"
				],
				"summary": "Returns a list of pdfDocument",
				"operationId": "getPdfDocumentForSalesQuote",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"content"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of pdfDocument",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/pdfDocument"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesQuote_id",
					"description": "id for salesQuote",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesQuotes({salesQuote_id})/pdfDocument({pdfDocument_id})": {
			"get": {
				"tags": [
					"pdfDocument"
				],
				"summary": "Obtain information about the pdfDocument from its unique pdfDocument_id",
				"operationId": "getPdfDocumentForSalesQuoteById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested pdfDocument",
						"schema": {
							"$ref": "#/definitions/pdfDocument"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesQuote_id",
					"description": "id for salesQuote",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "pdfDocument_id",
					"description": "id for pdfDocument",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"content"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/salesQuoteLines": {
			"get": {
				"tags": [
					"salesQuoteLines"
				],
				"summary": "Returns a list of salesQuoteLines",
				"operationId": "getSalesQuoteLines",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"item",
								"account"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"documentId",
								"sequence",
								"itemId",
								"accountId",
								"lineType",
								"lineDetails",
								"description",
								"unitOfMeasureId",
								"unitOfMeasure",
								"unitPrice",
								"quantity",
								"discountAmount",
								"discountPercent",
								"discountAppliedBeforeTax",
								"amountExcludingTax",
								"taxCode",
								"taxPercent",
								"totalTaxAmount",
								"amountIncludingTax",
								"netAmount",
								"netTaxAmount",
								"netAmountIncludingTax"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of salesQuoteLines",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/salesQuoteLine"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"salesQuoteLines"
				],
				"summary": "Lets a user post a new salesQuoteLine",
				"operationId": "postSalesQuoteLine",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"maxLength": 50,
									"type": "string"
								},
								"documentId": {
									"format": "uuid",
									"type": "string"
								},
								"sequence": {
									"format": "int32",
									"type": "integer"
								},
								"itemId": {
									"format": "uuid",
									"type": "string"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"lineType": {
									"type": "string"
								},
								"lineDetails": {
									"$ref": "#/definitions/documentlineobjectdetailstype"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"unitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"unitPrice": {
									"format": "decimal",
									"type": "number"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"amountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"taxCode": {
									"maxLength": 50,
									"type": "string"
								},
								"taxPercent": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"amountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"netAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "salesQuoteLine succesfully created",
						"schema": {
							"$ref": "#/definitions/salesQuoteLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesQuoteLines('{salesQuoteLine_id}')": {
			"get": {
				"tags": [
					"salesQuoteLines"
				],
				"summary": "Obtain information about the salesQuoteLine from its unique salesQuoteLine_id",
				"operationId": "getSalesQuoteLineById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested salesQuoteLine",
						"schema": {
							"$ref": "#/definitions/salesQuoteLine"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"salesQuoteLines"
				],
				"summary": "Allows the user to delete the specified salesQuoteLine",
				"operationId": "deleteSalesQuoteLineById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the salesQuoteLine with the specified salesQuoteLine_id"
					}
				}
			},
			"patch": {
				"tags": [
					"salesQuoteLines"
				],
				"summary": "Lets the user patch the specified salesQuoteLine",
				"operationId": "patchSalesQuoteLineById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"maxLength": 50,
									"type": "string"
								},
								"documentId": {
									"format": "uuid",
									"type": "string"
								},
								"sequence": {
									"format": "int32",
									"type": "integer"
								},
								"itemId": {
									"format": "uuid",
									"type": "string"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"lineType": {
									"type": "string"
								},
								"lineDetails": {
									"$ref": "#/definitions/documentlineobjectdetailstype"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"unitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"unitPrice": {
									"format": "decimal",
									"type": "number"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"amountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"taxCode": {
									"maxLength": 50,
									"type": "string"
								},
								"taxPercent": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"amountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"netAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the salesQuoteLine with the specified salesQuoteLine_id",
						"schema": {
							"$ref": "#/definitions/salesQuoteLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesQuoteLine_id",
					"description": "id for salesQuoteLine",
					"required": true,
					"type": "string"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"item",
							"account"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"documentId",
							"sequence",
							"itemId",
							"accountId",
							"lineType",
							"lineDetails",
							"description",
							"unitOfMeasureId",
							"unitOfMeasure",
							"unitPrice",
							"quantity",
							"discountAmount",
							"discountPercent",
							"discountAppliedBeforeTax",
							"amountExcludingTax",
							"taxCode",
							"taxPercent",
							"totalTaxAmount",
							"amountIncludingTax",
							"netAmount",
							"netTaxAmount",
							"netAmountIncludingTax"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/salesCreditMemos": {
			"get": {
				"tags": [
					"salesCreditMemos"
				],
				"summary": "Returns a list of salesCreditMemos",
				"operationId": "getSalesCreditMemos",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"salesCreditMemoLines",
								"pdfDocument",
								"customer",
								"currency",
								"paymentTerm"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"number",
								"externalDocumentNumber",
								"creditMemoDate",
								"dueDate",
								"customerId",
								"contactId",
								"customerNumber",
								"customerName",
								"billToName",
								"billToCustomerId",
								"billToCustomerNumber",
								"sellingPostalAddress",
								"billingPostalAddress",
								"currencyId",
								"currencyCode",
								"paymentTermsId",
								"salesperson",
								"pricesIncludeTax",
								"discountAmount",
								"discountAppliedBeforeTax",
								"totalAmountExcludingTax",
								"totalTaxAmount",
								"totalAmountIncludingTax",
								"status",
								"lastModifiedDateTime",
								"invoiceId",
								"invoiceNumber",
								"phoneNumber",
								"email"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of salesCreditMemos",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/salesCreditMemo"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"salesCreditMemos"
				],
				"summary": "Lets a user post a new salesCreditMemo",
				"operationId": "postSalesCreditMemo",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"number": {
									"maxLength": 20,
									"type": "string"
								},
								"externalDocumentNumber": {
									"maxLength": 35,
									"type": "string"
								},
								"creditMemoDate": {
									"format": "date-time",
									"type": "string"
								},
								"dueDate": {
									"format": "date-time",
									"type": "string"
								},
								"customerId": {
									"format": "uuid",
									"type": "string"
								},
								"contactId": {
									"maxLength": 250,
									"type": "string"
								},
								"customerNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"customerName": {
									"maxLength": 100,
									"type": "string"
								},
								"billToName": {
									"maxLength": 100,
									"type": "string"
								},
								"billToCustomerId": {
									"format": "uuid",
									"type": "string"
								},
								"billToCustomerNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"sellingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"billingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"currencyId": {
									"format": "uuid",
									"type": "string"
								},
								"currencyCode": {
									"type": "string"
								},
								"paymentTermsId": {
									"format": "uuid",
									"type": "string"
								},
								"salesperson": {
									"maxLength": 20,
									"type": "string"
								},
								"pricesIncludeTax": {
									"type": "boolean"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"totalAmountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"totalAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"status": {
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								},
								"invoiceId": {
									"format": "uuid",
									"type": "string"
								},
								"invoiceNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"phoneNumber": {
									"maxLength": 30,
									"type": "string"
								},
								"email": {
									"maxLength": 80,
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "salesCreditMemo succesfully created",
						"schema": {
							"$ref": "#/definitions/salesCreditMemo"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesCreditMemos({salesCreditMemo_id})": {
			"get": {
				"tags": [
					"salesCreditMemos"
				],
				"summary": "Obtain information about the salesCreditMemo from its unique salesCreditMemo_id",
				"operationId": "getSalesCreditMemoById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested salesCreditMemo",
						"schema": {
							"$ref": "#/definitions/salesCreditMemo"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"salesCreditMemos"
				],
				"summary": "Allows the user to delete the specified salesCreditMemo",
				"operationId": "deleteSalesCreditMemoById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the salesCreditMemo with the specified salesCreditMemo_id"
					}
				}
			},
			"patch": {
				"tags": [
					"salesCreditMemos"
				],
				"summary": "Lets the user patch the specified salesCreditMemo",
				"operationId": "patchSalesCreditMemoById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"number": {
									"maxLength": 20,
									"type": "string"
								},
								"externalDocumentNumber": {
									"maxLength": 35,
									"type": "string"
								},
								"creditMemoDate": {
									"format": "date-time",
									"type": "string"
								},
								"dueDate": {
									"format": "date-time",
									"type": "string"
								},
								"customerId": {
									"format": "uuid",
									"type": "string"
								},
								"contactId": {
									"maxLength": 250,
									"type": "string"
								},
								"customerNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"customerName": {
									"maxLength": 100,
									"type": "string"
								},
								"billToName": {
									"maxLength": 100,
									"type": "string"
								},
								"billToCustomerId": {
									"format": "uuid",
									"type": "string"
								},
								"billToCustomerNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"sellingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"billingPostalAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"currencyId": {
									"format": "uuid",
									"type": "string"
								},
								"currencyCode": {
									"type": "string"
								},
								"paymentTermsId": {
									"format": "uuid",
									"type": "string"
								},
								"salesperson": {
									"maxLength": 20,
									"type": "string"
								},
								"pricesIncludeTax": {
									"type": "boolean"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"totalAmountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"totalAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"status": {
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								},
								"invoiceId": {
									"format": "uuid",
									"type": "string"
								},
								"invoiceNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"phoneNumber": {
									"maxLength": 30,
									"type": "string"
								},
								"email": {
									"maxLength": 80,
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the salesCreditMemo with the specified salesCreditMemo_id",
						"schema": {
							"$ref": "#/definitions/salesCreditMemo"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesCreditMemo_id",
					"description": "id for salesCreditMemo",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"salesCreditMemoLines",
							"pdfDocument",
							"customer",
							"currency",
							"paymentTerm"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"number",
							"externalDocumentNumber",
							"creditMemoDate",
							"dueDate",
							"customerId",
							"contactId",
							"customerNumber",
							"customerName",
							"billToName",
							"billToCustomerId",
							"billToCustomerNumber",
							"sellingPostalAddress",
							"billingPostalAddress",
							"currencyId",
							"currencyCode",
							"paymentTermsId",
							"salesperson",
							"pricesIncludeTax",
							"discountAmount",
							"discountAppliedBeforeTax",
							"totalAmountExcludingTax",
							"totalTaxAmount",
							"totalAmountIncludingTax",
							"status",
							"lastModifiedDateTime",
							"invoiceId",
							"invoiceNumber",
							"phoneNumber",
							"email"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/salesCreditMemos({salesCreditMemo_id})/salesCreditMemoLines": {
			"get": {
				"tags": [
					"salesCreditMemoLines"
				],
				"summary": "Returns a list of salesCreditMemoLines",
				"operationId": "getSalesCreditMemoLinesForSalesCreditMemo",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"item",
								"account"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"documentId",
								"sequence",
								"itemId",
								"accountId",
								"lineType",
								"lineDetails",
								"description",
								"unitOfMeasureId",
								"unitOfMeasure",
								"unitPrice",
								"quantity",
								"discountAmount",
								"discountPercent",
								"discountAppliedBeforeTax",
								"amountExcludingTax",
								"taxCode",
								"taxPercent",
								"totalTaxAmount",
								"amountIncludingTax",
								"invoiceDiscountAllocation",
								"netAmount",
								"netTaxAmount",
								"netAmountIncludingTax",
								"shipmentDate"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of salesCreditMemoLines",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/salesCreditMemoLine"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"salesCreditMemoLines"
				],
				"summary": "Lets a user post a new salesCreditMemoLine",
				"operationId": "postSalesCreditMemoLineForSalesCreditMemo",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"maxLength": 50,
									"type": "string"
								},
								"documentId": {
									"format": "uuid",
									"type": "string"
								},
								"sequence": {
									"format": "int32",
									"type": "integer"
								},
								"itemId": {
									"format": "uuid",
									"type": "string"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"lineType": {
									"type": "string"
								},
								"lineDetails": {
									"$ref": "#/definitions/documentlineobjectdetailstype"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"unitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"unitPrice": {
									"format": "decimal",
									"type": "number"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"amountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"taxCode": {
									"maxLength": 50,
									"type": "string"
								},
								"taxPercent": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"amountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"invoiceDiscountAllocation": {
									"format": "decimal",
									"type": "number"
								},
								"netAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"shipmentDate": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "salesCreditMemoLine succesfully created",
						"schema": {
							"$ref": "#/definitions/salesCreditMemoLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesCreditMemo_id",
					"description": "id for salesCreditMemo",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesCreditMemos({salesCreditMemo_id})/salesCreditMemoLines('{salesCreditMemoLine_id}')": {
			"get": {
				"tags": [
					"salesCreditMemoLines"
				],
				"summary": "Obtain information about the salesCreditMemoLine from its unique salesCreditMemoLine_id",
				"operationId": "getSalesCreditMemoLineForSalesCreditMemoById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested salesCreditMemoLine",
						"schema": {
							"$ref": "#/definitions/salesCreditMemoLine"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"salesCreditMemoLines"
				],
				"summary": "Allows the user to delete the specified salesCreditMemoLine",
				"operationId": "deleteSalesCreditMemoLineForSalesCreditMemoByIdById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the salesCreditMemoLine with the specified salesCreditMemoLine_id"
					}
				}
			},
			"patch": {
				"tags": [
					"salesCreditMemoLines"
				],
				"summary": "Lets the user patch the specified salesCreditMemoLine",
				"operationId": "patchSalesCreditMemoLineForSalesCreditMemoByIdById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"maxLength": 50,
									"type": "string"
								},
								"documentId": {
									"format": "uuid",
									"type": "string"
								},
								"sequence": {
									"format": "int32",
									"type": "integer"
								},
								"itemId": {
									"format": "uuid",
									"type": "string"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"lineType": {
									"type": "string"
								},
								"lineDetails": {
									"$ref": "#/definitions/documentlineobjectdetailstype"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"unitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"unitPrice": {
									"format": "decimal",
									"type": "number"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"amountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"taxCode": {
									"maxLength": 50,
									"type": "string"
								},
								"taxPercent": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"amountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"invoiceDiscountAllocation": {
									"format": "decimal",
									"type": "number"
								},
								"netAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"shipmentDate": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the salesCreditMemoLine with the specified salesCreditMemoLine_id",
						"schema": {
							"$ref": "#/definitions/salesCreditMemoLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesCreditMemo_id",
					"description": "id for salesCreditMemo",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesCreditMemoLine_id",
					"description": "id for salesCreditMemoLine",
					"required": true,
					"type": "string"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"item",
							"account"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"documentId",
							"sequence",
							"itemId",
							"accountId",
							"lineType",
							"lineDetails",
							"description",
							"unitOfMeasureId",
							"unitOfMeasure",
							"unitPrice",
							"quantity",
							"discountAmount",
							"discountPercent",
							"discountAppliedBeforeTax",
							"amountExcludingTax",
							"taxCode",
							"taxPercent",
							"totalTaxAmount",
							"amountIncludingTax",
							"invoiceDiscountAllocation",
							"netAmount",
							"netTaxAmount",
							"netAmountIncludingTax",
							"shipmentDate"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/salesCreditMemos({salesCreditMemo_id})/pdfDocument": {
			"get": {
				"tags": [
					"pdfDocument"
				],
				"summary": "Returns a list of pdfDocument",
				"operationId": "getPdfDocumentForSalesCreditMemo",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"content"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of pdfDocument",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/pdfDocument"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesCreditMemo_id",
					"description": "id for salesCreditMemo",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesCreditMemos({salesCreditMemo_id})/pdfDocument({pdfDocument_id})": {
			"get": {
				"tags": [
					"pdfDocument"
				],
				"summary": "Obtain information about the pdfDocument from its unique pdfDocument_id",
				"operationId": "getPdfDocumentForSalesCreditMemoById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested pdfDocument",
						"schema": {
							"$ref": "#/definitions/pdfDocument"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesCreditMemo_id",
					"description": "id for salesCreditMemo",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "pdfDocument_id",
					"description": "id for pdfDocument",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"content"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/salesCreditMemoLines": {
			"get": {
				"tags": [
					"salesCreditMemoLines"
				],
				"summary": "Returns a list of salesCreditMemoLines",
				"operationId": "getSalesCreditMemoLines",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"item",
								"account"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"documentId",
								"sequence",
								"itemId",
								"accountId",
								"lineType",
								"lineDetails",
								"description",
								"unitOfMeasureId",
								"unitOfMeasure",
								"unitPrice",
								"quantity",
								"discountAmount",
								"discountPercent",
								"discountAppliedBeforeTax",
								"amountExcludingTax",
								"taxCode",
								"taxPercent",
								"totalTaxAmount",
								"amountIncludingTax",
								"invoiceDiscountAllocation",
								"netAmount",
								"netTaxAmount",
								"netAmountIncludingTax",
								"shipmentDate"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of salesCreditMemoLines",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/salesCreditMemoLine"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"salesCreditMemoLines"
				],
				"summary": "Lets a user post a new salesCreditMemoLine",
				"operationId": "postSalesCreditMemoLine",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"maxLength": 50,
									"type": "string"
								},
								"documentId": {
									"format": "uuid",
									"type": "string"
								},
								"sequence": {
									"format": "int32",
									"type": "integer"
								},
								"itemId": {
									"format": "uuid",
									"type": "string"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"lineType": {
									"type": "string"
								},
								"lineDetails": {
									"$ref": "#/definitions/documentlineobjectdetailstype"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"unitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"unitPrice": {
									"format": "decimal",
									"type": "number"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"amountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"taxCode": {
									"maxLength": 50,
									"type": "string"
								},
								"taxPercent": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"amountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"invoiceDiscountAllocation": {
									"format": "decimal",
									"type": "number"
								},
								"netAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"shipmentDate": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "salesCreditMemoLine succesfully created",
						"schema": {
							"$ref": "#/definitions/salesCreditMemoLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/salesCreditMemoLines('{salesCreditMemoLine_id}')": {
			"get": {
				"tags": [
					"salesCreditMemoLines"
				],
				"summary": "Obtain information about the salesCreditMemoLine from its unique salesCreditMemoLine_id",
				"operationId": "getSalesCreditMemoLineById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested salesCreditMemoLine",
						"schema": {
							"$ref": "#/definitions/salesCreditMemoLine"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"salesCreditMemoLines"
				],
				"summary": "Allows the user to delete the specified salesCreditMemoLine",
				"operationId": "deleteSalesCreditMemoLineById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the salesCreditMemoLine with the specified salesCreditMemoLine_id"
					}
				}
			},
			"patch": {
				"tags": [
					"salesCreditMemoLines"
				],
				"summary": "Lets the user patch the specified salesCreditMemoLine",
				"operationId": "patchSalesCreditMemoLineById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"maxLength": 50,
									"type": "string"
								},
								"documentId": {
									"format": "uuid",
									"type": "string"
								},
								"sequence": {
									"format": "int32",
									"type": "integer"
								},
								"itemId": {
									"format": "uuid",
									"type": "string"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"lineType": {
									"type": "string"
								},
								"lineDetails": {
									"$ref": "#/definitions/documentlineobjectdetailstype"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"unitOfMeasureId": {
									"format": "uuid",
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"unitPrice": {
									"format": "decimal",
									"type": "number"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"amountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"taxCode": {
									"maxLength": 50,
									"type": "string"
								},
								"taxPercent": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"amountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"invoiceDiscountAllocation": {
									"format": "decimal",
									"type": "number"
								},
								"netAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"shipmentDate": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the salesCreditMemoLine with the specified salesCreditMemoLine_id",
						"schema": {
							"$ref": "#/definitions/salesCreditMemoLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "salesCreditMemoLine_id",
					"description": "id for salesCreditMemoLine",
					"required": true,
					"type": "string"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"item",
							"account"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"documentId",
							"sequence",
							"itemId",
							"accountId",
							"lineType",
							"lineDetails",
							"description",
							"unitOfMeasureId",
							"unitOfMeasure",
							"unitPrice",
							"quantity",
							"discountAmount",
							"discountPercent",
							"discountAppliedBeforeTax",
							"amountExcludingTax",
							"taxCode",
							"taxPercent",
							"totalTaxAmount",
							"amountIncludingTax",
							"invoiceDiscountAllocation",
							"netAmount",
							"netTaxAmount",
							"netAmountIncludingTax",
							"shipmentDate"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/generalLedgerEntryAttachments": {
			"get": {
				"tags": [
					"generalLedgerEntryAttachments"
				],
				"summary": "Returns a list of generalLedgerEntryAttachments",
				"operationId": "getGeneralLedgerEntryAttachments",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"generalLedgerEntry"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"generalLedgerEntryNumber",
								"id",
								"fileName",
								"byteSize",
								"content",
								"createdDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of generalLedgerEntryAttachments",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/generalLedgerEntryAttachments"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"generalLedgerEntryAttachments"
				],
				"summary": "Lets a user post a new generalLedgerEntryAttachments",
				"operationId": "postGeneralLedgerEntryAttachments",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"generalLedgerEntryNumber": {
									"format": "int32",
									"type": "integer"
								},
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"fileName": {
									"maxLength": 250,
									"type": "string"
								},
								"byteSize": {
									"format": "int32",
									"type": "integer"
								},
								"content": {
									"format": "binary",
									"type": "string"
								},
								"createdDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "generalLedgerEntryAttachments succesfully created",
						"schema": {
							"$ref": "#/definitions/generalLedgerEntryAttachments"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/generalLedgerEntryAttachments({generalLedgerEntryAttachments_generalLedgerEntryNumber},{generalLedgerEntryAttachments_id})": {
			"get": {
				"tags": [
					"generalLedgerEntryAttachments"
				],
				"summary": "Obtain information about the generalLedgerEntryAttachments from its unique generalLedgerEntryAttachments_generalLedgerEntryNumber, generalLedgerEntryAttachments_id",
				"operationId": "getGeneralLedgerEntryAttachmentsByIdByGeneralLedgerEntryNumber",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested generalLedgerEntryAttachments",
						"schema": {
							"$ref": "#/definitions/generalLedgerEntryAttachments"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"generalLedgerEntryAttachments"
				],
				"summary": "Allows the user to delete the specified generalLedgerEntryAttachments",
				"operationId": "deleteGeneralLedgerEntryAttachmentsByIdByGeneralLedgerEntryNumber",
				"responses": {
					"204": {
						"description": "Succesfully deleted the generalLedgerEntryAttachments with the specified generalLedgerEntryAttachments_generalLedgerEntryNumber, generalLedgerEntryAttachments_id"
					}
				}
			},
			"patch": {
				"tags": [
					"generalLedgerEntryAttachments"
				],
				"summary": "Lets the user patch the specified generalLedgerEntryAttachments",
				"operationId": "patchGeneralLedgerEntryAttachmentsByIdByGeneralLedgerEntryNumber",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"generalLedgerEntryNumber": {
									"format": "int32",
									"type": "integer"
								},
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"fileName": {
									"maxLength": 250,
									"type": "string"
								},
								"byteSize": {
									"format": "int32",
									"type": "integer"
								},
								"content": {
									"format": "binary",
									"type": "string"
								},
								"createdDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the generalLedgerEntryAttachments with the specified generalLedgerEntryAttachments_generalLedgerEntryNumber, generalLedgerEntryAttachments_id",
						"schema": {
							"$ref": "#/definitions/generalLedgerEntryAttachments"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "generalLedgerEntryAttachments_generalLedgerEntryNumber",
					"description": "generalLedgerEntryNumber for generalLedgerEntryAttachments",
					"required": true,
					"type": "integer",
					"format": "int32"
				},
				{
					"in": "path",
					"name": "generalLedgerEntryAttachments_id",
					"description": "id for generalLedgerEntryAttachments",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"generalLedgerEntry"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"generalLedgerEntryNumber",
							"id",
							"fileName",
							"byteSize",
							"content",
							"createdDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/purchaseInvoices": {
			"get": {
				"tags": [
					"purchaseInvoices"
				],
				"summary": "Returns a list of purchaseInvoices",
				"operationId": "getPurchaseInvoices",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"purchaseInvoiceLines",
								"pdfDocument",
								"vendor",
								"currency"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"number",
								"invoiceDate",
								"dueDate",
								"vendorInvoiceNumber",
								"vendorId",
								"vendorNumber",
								"vendorName",
								"payToName",
								"payToContact",
								"payToVendorId",
								"payToVendorNumber",
								"shipToName",
								"shipToContact",
								"buyFromAddress",
								"payToAddress",
								"shipToAddress",
								"currencyId",
								"currencyCode",
								"pricesIncludeTax",
								"discountAmount",
								"discountAppliedBeforeTax",
								"totalAmountExcludingTax",
								"totalTaxAmount",
								"totalAmountIncludingTax",
								"status",
								"lastModifiedDateTime"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of purchaseInvoices",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/purchaseInvoice"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"purchaseInvoices"
				],
				"summary": "Lets a user post a new purchaseInvoice",
				"operationId": "postPurchaseInvoice",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"number": {
									"maxLength": 20,
									"type": "string"
								},
								"invoiceDate": {
									"format": "date-time",
									"type": "string"
								},
								"dueDate": {
									"format": "date-time",
									"type": "string"
								},
								"vendorInvoiceNumber": {
									"maxLength": 35,
									"type": "string"
								},
								"vendorId": {
									"format": "uuid",
									"type": "string"
								},
								"vendorNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"vendorName": {
									"maxLength": 100,
									"type": "string"
								},
								"payToName": {
									"maxLength": 100,
									"type": "string"
								},
								"payToContact": {
									"maxLength": 100,
									"type": "string"
								},
								"payToVendorId": {
									"format": "uuid",
									"type": "string"
								},
								"payToVendorNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"shipToName": {
									"maxLength": 100,
									"type": "string"
								},
								"shipToContact": {
									"maxLength": 100,
									"type": "string"
								},
								"buyFromAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"payToAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"shipToAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"currencyId": {
									"format": "uuid",
									"type": "string"
								},
								"currencyCode": {
									"type": "string"
								},
								"pricesIncludeTax": {
									"type": "boolean"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"totalAmountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"totalAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"status": {
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "purchaseInvoice succesfully created",
						"schema": {
							"$ref": "#/definitions/purchaseInvoice"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/purchaseInvoices({purchaseInvoice_id})": {
			"get": {
				"tags": [
					"purchaseInvoices"
				],
				"summary": "Obtain information about the purchaseInvoice from its unique purchaseInvoice_id",
				"operationId": "getPurchaseInvoiceById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested purchaseInvoice",
						"schema": {
							"$ref": "#/definitions/purchaseInvoice"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"purchaseInvoices"
				],
				"summary": "Allows the user to delete the specified purchaseInvoice",
				"operationId": "deletePurchaseInvoiceById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the purchaseInvoice with the specified purchaseInvoice_id"
					}
				}
			},
			"patch": {
				"tags": [
					"purchaseInvoices"
				],
				"summary": "Lets the user patch the specified purchaseInvoice",
				"operationId": "patchPurchaseInvoiceById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"format": "uuid",
									"type": "string"
								},
								"number": {
									"maxLength": 20,
									"type": "string"
								},
								"invoiceDate": {
									"format": "date-time",
									"type": "string"
								},
								"dueDate": {
									"format": "date-time",
									"type": "string"
								},
								"vendorInvoiceNumber": {
									"maxLength": 35,
									"type": "string"
								},
								"vendorId": {
									"format": "uuid",
									"type": "string"
								},
								"vendorNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"vendorName": {
									"maxLength": 100,
									"type": "string"
								},
								"payToName": {
									"maxLength": 100,
									"type": "string"
								},
								"payToContact": {
									"maxLength": 100,
									"type": "string"
								},
								"payToVendorId": {
									"format": "uuid",
									"type": "string"
								},
								"payToVendorNumber": {
									"maxLength": 20,
									"type": "string"
								},
								"shipToName": {
									"maxLength": 100,
									"type": "string"
								},
								"shipToContact": {
									"maxLength": 100,
									"type": "string"
								},
								"buyFromAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"payToAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"shipToAddress": {
									"$ref": "#/definitions/postaladdresstype"
								},
								"currencyId": {
									"format": "uuid",
									"type": "string"
								},
								"currencyCode": {
									"type": "string"
								},
								"pricesIncludeTax": {
									"type": "boolean"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"totalAmountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"totalAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"status": {
									"type": "string"
								},
								"lastModifiedDateTime": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the purchaseInvoice with the specified purchaseInvoice_id",
						"schema": {
							"$ref": "#/definitions/purchaseInvoice"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "purchaseInvoice_id",
					"description": "id for purchaseInvoice",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"purchaseInvoiceLines",
							"pdfDocument",
							"vendor",
							"currency"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"number",
							"invoiceDate",
							"dueDate",
							"vendorInvoiceNumber",
							"vendorId",
							"vendorNumber",
							"vendorName",
							"payToName",
							"payToContact",
							"payToVendorId",
							"payToVendorNumber",
							"shipToName",
							"shipToContact",
							"buyFromAddress",
							"payToAddress",
							"shipToAddress",
							"currencyId",
							"currencyCode",
							"pricesIncludeTax",
							"discountAmount",
							"discountAppliedBeforeTax",
							"totalAmountExcludingTax",
							"totalTaxAmount",
							"totalAmountIncludingTax",
							"status",
							"lastModifiedDateTime"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/purchaseInvoices({purchaseInvoice_id})/Microsoft.NAV.post": {
			"post": {
				"tags": [
					"purchaseInvoices"
				],
				"summary": "Performs the post action for purchaseInvoices entity",
				"operationId": "PostAction_PurchaseInvoices",
				"responses": {
					"204": {
						"description": "Succesfully perfpormed a post action on the purchaseInvoices entity"
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "purchaseInvoice_id",
					"description": "id for purchaseInvoice",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/purchaseInvoices({purchaseInvoice_id})/purchaseInvoiceLines": {
			"get": {
				"tags": [
					"purchaseInvoiceLines"
				],
				"summary": "Returns a list of purchaseInvoiceLines",
				"operationId": "getPurchaseInvoiceLinesForPurchaseInvoice",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"item",
								"account"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"documentId",
								"sequence",
								"itemId",
								"accountId",
								"lineType",
								"lineDetails",
								"description",
								"unitOfMeasure",
								"unitCost",
								"quantity",
								"discountAmount",
								"discountPercent",
								"discountAppliedBeforeTax",
								"amountExcludingTax",
								"taxCode",
								"taxPercent",
								"totalTaxAmount",
								"amountIncludingTax",
								"invoiceDiscountAllocation",
								"netAmount",
								"netTaxAmount",
								"netAmountIncludingTax",
								"expectedReceiptDate"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of purchaseInvoiceLines",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/purchaseInvoiceLine"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"purchaseInvoiceLines"
				],
				"summary": "Lets a user post a new purchaseInvoiceLine",
				"operationId": "postPurchaseInvoiceLineForPurchaseInvoice",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"maxLength": 50,
									"type": "string"
								},
								"documentId": {
									"format": "uuid",
									"type": "string"
								},
								"sequence": {
									"format": "int32",
									"type": "integer"
								},
								"itemId": {
									"format": "uuid",
									"type": "string"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"lineType": {
									"type": "string"
								},
								"lineDetails": {
									"$ref": "#/definitions/documentlineobjectdetailstype"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"unitCost": {
									"format": "decimal",
									"type": "number"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"amountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"taxCode": {
									"maxLength": 50,
									"type": "string"
								},
								"taxPercent": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"amountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"invoiceDiscountAllocation": {
									"format": "decimal",
									"type": "number"
								},
								"netAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"expectedReceiptDate": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "purchaseInvoiceLine succesfully created",
						"schema": {
							"$ref": "#/definitions/purchaseInvoiceLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "purchaseInvoice_id",
					"description": "id for purchaseInvoice",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/purchaseInvoices({purchaseInvoice_id})/purchaseInvoiceLines('{purchaseInvoiceLine_id}')": {
			"get": {
				"tags": [
					"purchaseInvoiceLines"
				],
				"summary": "Obtain information about the purchaseInvoiceLine from its unique purchaseInvoiceLine_id",
				"operationId": "getPurchaseInvoiceLineForPurchaseInvoiceById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested purchaseInvoiceLine",
						"schema": {
							"$ref": "#/definitions/purchaseInvoiceLine"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"purchaseInvoiceLines"
				],
				"summary": "Allows the user to delete the specified purchaseInvoiceLine",
				"operationId": "deletePurchaseInvoiceLineForPurchaseInvoiceByIdById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the purchaseInvoiceLine with the specified purchaseInvoiceLine_id"
					}
				}
			},
			"patch": {
				"tags": [
					"purchaseInvoiceLines"
				],
				"summary": "Lets the user patch the specified purchaseInvoiceLine",
				"operationId": "patchPurchaseInvoiceLineForPurchaseInvoiceByIdById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"maxLength": 50,
									"type": "string"
								},
								"documentId": {
									"format": "uuid",
									"type": "string"
								},
								"sequence": {
									"format": "int32",
									"type": "integer"
								},
								"itemId": {
									"format": "uuid",
									"type": "string"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"lineType": {
									"type": "string"
								},
								"lineDetails": {
									"$ref": "#/definitions/documentlineobjectdetailstype"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"unitCost": {
									"format": "decimal",
									"type": "number"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"amountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"taxCode": {
									"maxLength": 50,
									"type": "string"
								},
								"taxPercent": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"amountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"invoiceDiscountAllocation": {
									"format": "decimal",
									"type": "number"
								},
								"netAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"expectedReceiptDate": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the purchaseInvoiceLine with the specified purchaseInvoiceLine_id",
						"schema": {
							"$ref": "#/definitions/purchaseInvoiceLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "purchaseInvoice_id",
					"description": "id for purchaseInvoice",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "purchaseInvoiceLine_id",
					"description": "id for purchaseInvoiceLine",
					"required": true,
					"type": "string"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"item",
							"account"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"documentId",
							"sequence",
							"itemId",
							"accountId",
							"lineType",
							"lineDetails",
							"description",
							"unitOfMeasure",
							"unitCost",
							"quantity",
							"discountAmount",
							"discountPercent",
							"discountAppliedBeforeTax",
							"amountExcludingTax",
							"taxCode",
							"taxPercent",
							"totalTaxAmount",
							"amountIncludingTax",
							"invoiceDiscountAllocation",
							"netAmount",
							"netTaxAmount",
							"netAmountIncludingTax",
							"expectedReceiptDate"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/purchaseInvoices({purchaseInvoice_id})/pdfDocument": {
			"get": {
				"tags": [
					"pdfDocument"
				],
				"summary": "Returns a list of pdfDocument",
				"operationId": "getPdfDocumentForPurchaseInvoice",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"content"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of pdfDocument",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/pdfDocument"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "purchaseInvoice_id",
					"description": "id for purchaseInvoice",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/purchaseInvoices({purchaseInvoice_id})/pdfDocument({pdfDocument_id})": {
			"get": {
				"tags": [
					"pdfDocument"
				],
				"summary": "Obtain information about the pdfDocument from its unique pdfDocument_id",
				"operationId": "getPdfDocumentForPurchaseInvoiceById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested pdfDocument",
						"schema": {
							"$ref": "#/definitions/pdfDocument"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "purchaseInvoice_id",
					"description": "id for purchaseInvoice",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "pdfDocument_id",
					"description": "id for pdfDocument",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"content"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/purchaseInvoiceLines": {
			"get": {
				"tags": [
					"purchaseInvoiceLines"
				],
				"summary": "Returns a list of purchaseInvoiceLines",
				"operationId": "getPurchaseInvoiceLines",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$expand",
						"type": "array",
						"items": {
							"enum": [
								"item",
								"account"
							],
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"id",
								"documentId",
								"sequence",
								"itemId",
								"accountId",
								"lineType",
								"lineDetails",
								"description",
								"unitOfMeasure",
								"unitCost",
								"quantity",
								"discountAmount",
								"discountPercent",
								"discountAppliedBeforeTax",
								"amountExcludingTax",
								"taxCode",
								"taxPercent",
								"totalTaxAmount",
								"amountIncludingTax",
								"invoiceDiscountAllocation",
								"netAmount",
								"netTaxAmount",
								"netAmountIncludingTax",
								"expectedReceiptDate"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of purchaseInvoiceLines",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/purchaseInvoiceLine"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"purchaseInvoiceLines"
				],
				"summary": "Lets a user post a new purchaseInvoiceLine",
				"operationId": "postPurchaseInvoiceLine",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"maxLength": 50,
									"type": "string"
								},
								"documentId": {
									"format": "uuid",
									"type": "string"
								},
								"sequence": {
									"format": "int32",
									"type": "integer"
								},
								"itemId": {
									"format": "uuid",
									"type": "string"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"lineType": {
									"type": "string"
								},
								"lineDetails": {
									"$ref": "#/definitions/documentlineobjectdetailstype"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"unitCost": {
									"format": "decimal",
									"type": "number"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"amountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"taxCode": {
									"maxLength": 50,
									"type": "string"
								},
								"taxPercent": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"amountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"invoiceDiscountAllocation": {
									"format": "decimal",
									"type": "number"
								},
								"netAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"expectedReceiptDate": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"201": {
						"description": "purchaseInvoiceLine succesfully created",
						"schema": {
							"$ref": "#/definitions/purchaseInvoiceLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/purchaseInvoiceLines('{purchaseInvoiceLine_id}')": {
			"get": {
				"tags": [
					"purchaseInvoiceLines"
				],
				"summary": "Obtain information about the purchaseInvoiceLine from its unique purchaseInvoiceLine_id",
				"operationId": "getPurchaseInvoiceLineById",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested purchaseInvoiceLine",
						"schema": {
							"$ref": "#/definitions/purchaseInvoiceLine"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"purchaseInvoiceLines"
				],
				"summary": "Allows the user to delete the specified purchaseInvoiceLine",
				"operationId": "deletePurchaseInvoiceLineById",
				"responses": {
					"204": {
						"description": "Succesfully deleted the purchaseInvoiceLine with the specified purchaseInvoiceLine_id"
					}
				}
			},
			"patch": {
				"tags": [
					"purchaseInvoiceLines"
				],
				"summary": "Lets the user patch the specified purchaseInvoiceLine",
				"operationId": "patchPurchaseInvoiceLineById",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/IfMatchParam"
					},
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"properties": {
								"id": {
									"maxLength": 50,
									"type": "string"
								},
								"documentId": {
									"format": "uuid",
									"type": "string"
								},
								"sequence": {
									"format": "int32",
									"type": "integer"
								},
								"itemId": {
									"format": "uuid",
									"type": "string"
								},
								"accountId": {
									"format": "uuid",
									"type": "string"
								},
								"lineType": {
									"type": "string"
								},
								"lineDetails": {
									"$ref": "#/definitions/documentlineobjectdetailstype"
								},
								"description": {
									"maxLength": 100,
									"type": "string"
								},
								"unitOfMeasure": {
									"$ref": "#/definitions/unitofmeasuretype"
								},
								"unitCost": {
									"format": "decimal",
									"type": "number"
								},
								"quantity": {
									"format": "decimal",
									"type": "number"
								},
								"discountAmount": {
									"format": "decimal",
									"type": "number"
								},
								"discountPercent": {
									"format": "decimal",
									"type": "number"
								},
								"discountAppliedBeforeTax": {
									"type": "boolean"
								},
								"amountExcludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"taxCode": {
									"maxLength": 50,
									"type": "string"
								},
								"taxPercent": {
									"format": "decimal",
									"type": "number"
								},
								"totalTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"amountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"invoiceDiscountAllocation": {
									"format": "decimal",
									"type": "number"
								},
								"netAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netTaxAmount": {
									"format": "decimal",
									"type": "number"
								},
								"netAmountIncludingTax": {
									"format": "decimal",
									"type": "number"
								},
								"expectedReceiptDate": {
									"format": "date-time",
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully updated the purchaseInvoiceLine with the specified purchaseInvoiceLine_id",
						"schema": {
							"$ref": "#/definitions/purchaseInvoiceLine"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "purchaseInvoiceLine_id",
					"description": "id for purchaseInvoiceLine",
					"required": true,
					"type": "string"
				},
				{
					"in": "query",
					"name": "$expand",
					"type": "array",
					"items": {
						"enum": [
							"item",
							"account"
						],
						"type": "string"
					}
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"id",
							"documentId",
							"sequence",
							"itemId",
							"accountId",
							"lineType",
							"lineDetails",
							"description",
							"unitOfMeasure",
							"unitCost",
							"quantity",
							"discountAmount",
							"discountPercent",
							"discountAppliedBeforeTax",
							"amountExcludingTax",
							"taxCode",
							"taxPercent",
							"totalTaxAmount",
							"amountIncludingTax",
							"invoiceDiscountAllocation",
							"netAmount",
							"netTaxAmount",
							"netAmountIncludingTax",
							"expectedReceiptDate"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/customerSales": {
			"get": {
				"tags": [
					"customerSales"
				],
				"summary": "Returns a list of customerSales",
				"operationId": "getCustomerSales",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"customerId",
								"customerNumber",
								"name",
								"totalSalesAmount",
								"dateFilter_FilterOnly"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of customerSales",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/customerSale"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/customerSales({customerSale_customerId},'{customerSale_customerNumber}','{customerSale_name}')": {
			"get": {
				"tags": [
					"customerSales"
				],
				"summary": "Obtain information about the customerSale from its unique customerSale_customerId, customerSale_customerNumber, customerSale_name",
				"operationId": "getCustomerSaleByNameByCustomerNumberByCustomerId",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested customerSale",
						"schema": {
							"$ref": "#/definitions/customerSale"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "customerSale_customerId",
					"description": "customerId for customerSale",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "customerSale_customerNumber",
					"description": "customerNumber for customerSale",
					"required": true,
					"type": "string"
				},
				{
					"in": "path",
					"name": "customerSale_name",
					"description": "name for customerSale",
					"required": true,
					"type": "string"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"customerId",
							"customerNumber",
							"name",
							"totalSalesAmount",
							"dateFilter_FilterOnly"
						],
						"type": "string"
					}
				}
			]
		},
		"/companies({company_id})/vendorPurchases": {
			"get": {
				"tags": [
					"vendorPurchases"
				],
				"summary": "Returns a list of vendorPurchases",
				"operationId": "getVendorPurchases",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"$ref": "#/parameters/topParam"
					},
					{
						"$ref": "#/parameters/skipParam"
					},
					{
						"$ref": "#/parameters/limitParam"
					},
					{
						"$ref": "#/parameters/filterParam"
					},
					{
						"in": "query",
						"name": "$select",
						"type": "array",
						"items": {
							"enum": [
								"vendorId",
								"vendorNumber",
								"name",
								"totalPurchaseAmount",
								"dateFilter_FilterOnly"
							],
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Succesfully returned a list of vendorPurchases",
						"schema": {
							"type": "object",
							"properties": {
								"value": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/vendorPurchase"
									}
								}
							}
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				}
			]
		},
		"/companies({company_id})/vendorPurchases({vendorPurchase_vendorId},'{vendorPurchase_vendorNumber}','{vendorPurchase_name}')": {
			"get": {
				"tags": [
					"vendorPurchases"
				],
				"summary": "Obtain information about the vendorPurchase from its unique vendorPurchase_vendorId, vendorPurchase_vendorNumber, vendorPurchase_name",
				"operationId": "getVendorPurchaseByNameByVendorNumberByVendorId",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Succesfully returned the requested vendorPurchase",
						"schema": {
							"$ref": "#/definitions/vendorPurchase"
						}
					}
				}
			},
			"parameters": [
				{
					"in": "path",
					"name": "company_id",
					"description": "id for company",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "vendorPurchase_vendorId",
					"description": "vendorId for vendorPurchase",
					"required": true,
					"type": "string",
					"format": "uuid"
				},
				{
					"in": "path",
					"name": "vendorPurchase_vendorNumber",
					"description": "vendorNumber for vendorPurchase",
					"required": true,
					"type": "string"
				},
				{
					"in": "path",
					"name": "vendorPurchase_name",
					"description": "name for vendorPurchase",
					"required": true,
					"type": "string"
				},
				{
					"in": "query",
					"name": "$select",
					"type": "array",
					"items": {
						"enum": [
							"vendorId",
							"vendorNumber",
							"name",
							"totalPurchaseAmount",
							"dateFilter_FilterOnly"
						],
						"type": "string"
					}
				}
			]
		}
	},
	"definitions": {
		"taxArea": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"code": {
					"maxLength": 20,
					"type": "string"
				},
				"displayName": {
					"maxLength": 100,
					"type": "string"
				},
				"taxType": {
					"type": "string"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"paymentMethod": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"code": {
					"maxLength": 10,
					"type": "string"
				},
				"displayName": {
					"maxLength": 100,
					"type": "string"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"salesQuote": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"number": {
					"maxLength": 20,
					"type": "string"
				},
				"externalDocumentNumber": {
					"maxLength": 35,
					"type": "string"
				},
				"documentDate": {
					"format": "date-time",
					"type": "string"
				},
				"dueDate": {
					"format": "date-time",
					"type": "string"
				},
				"customerId": {
					"format": "uuid",
					"type": "string"
				},
				"contactId": {
					"maxLength": 250,
					"type": "string"
				},
				"customerNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"customerName": {
					"maxLength": 100,
					"type": "string"
				},
				"billToName": {
					"maxLength": 100,
					"type": "string"
				},
				"billToCustomerId": {
					"format": "uuid",
					"type": "string"
				},
				"billToCustomerNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"shipToName": {
					"maxLength": 100,
					"type": "string"
				},
				"shipToContact": {
					"maxLength": 100,
					"type": "string"
				},
				"sellingPostalAddress": {
					"$ref": "#/definitions/postaladdresstype"
				},
				"billingPostalAddress": {
					"$ref": "#/definitions/postaladdresstype"
				},
				"shippingPostalAddress": {
					"$ref": "#/definitions/postaladdresstype"
				},
				"currencyId": {
					"format": "uuid",
					"type": "string"
				},
				"currencyCode": {
					"type": "string"
				},
				"paymentTermsId": {
					"format": "uuid",
					"type": "string"
				},
				"shipmentMethodId": {
					"format": "uuid",
					"type": "string"
				},
				"salesperson": {
					"maxLength": 20,
					"type": "string"
				},
				"discountAmount": {
					"format": "decimal",
					"type": "number"
				},
				"totalAmountExcludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"totalTaxAmount": {
					"format": "decimal",
					"type": "number"
				},
				"totalAmountIncludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"status": {
					"type": "string"
				},
				"sentDate": {
					"format": "date-time",
					"type": "string"
				},
				"validUntilDate": {
					"format": "date-time",
					"type": "string"
				},
				"acceptedDate": {
					"format": "date-time",
					"type": "string"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"phoneNumber": {
					"maxLength": 30,
					"type": "string"
				},
				"email": {
					"maxLength": 80,
					"type": "string"
				},
				"salesQuoteLines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/salesQuoteLine"
					}
				},
				"pdfDocument": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/pdfDocument"
					}
				},
				"customer": {
					"$ref": "#/definitions/customer"
				},
				"currency": {
					"$ref": "#/definitions/currency"
				},
				"paymentTerm": {
					"$ref": "#/definitions/paymentTerm"
				},
				"shipmentMethod": {
					"$ref": "#/definitions/shipmentMethod"
				}
			}
		},
		"salesQuoteLine": {
			"type": "object",
			"properties": {
				"id": {
					"maxLength": 50,
					"type": "string"
				},
				"documentId": {
					"format": "uuid",
					"type": "string"
				},
				"sequence": {
					"format": "int32",
					"type": "integer"
				},
				"itemId": {
					"format": "uuid",
					"type": "string"
				},
				"accountId": {
					"format": "uuid",
					"type": "string"
				},
				"lineType": {
					"type": "string"
				},
				"lineDetails": {
					"$ref": "#/definitions/documentlineobjectdetailstype"
				},
				"description": {
					"maxLength": 100,
					"type": "string"
				},
				"unitOfMeasureId": {
					"format": "uuid",
					"type": "string"
				},
				"unitOfMeasure": {
					"$ref": "#/definitions/unitofmeasuretype"
				},
				"unitPrice": {
					"format": "decimal",
					"type": "number"
				},
				"quantity": {
					"format": "decimal",
					"type": "number"
				},
				"discountAmount": {
					"format": "decimal",
					"type": "number"
				},
				"discountPercent": {
					"format": "decimal",
					"type": "number"
				},
				"discountAppliedBeforeTax": {
					"type": "boolean"
				},
				"amountExcludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"taxCode": {
					"maxLength": 50,
					"type": "string"
				},
				"taxPercent": {
					"format": "decimal",
					"type": "number"
				},
				"totalTaxAmount": {
					"format": "decimal",
					"type": "number"
				},
				"amountIncludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"netAmount": {
					"format": "decimal",
					"type": "number"
				},
				"netTaxAmount": {
					"format": "decimal",
					"type": "number"
				},
				"netAmountIncludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"item": {
					"$ref": "#/definitions/item"
				},
				"account": {
					"$ref": "#/definitions/account"
				}
			}
		},
		"cashFlowStatement": {
			"type": "object",
			"properties": {
				"lineNumber": {
					"format": "int32",
					"type": "integer"
				},
				"display": {
					"maxLength": 250,
					"type": "string"
				},
				"netChange": {
					"format": "decimal",
					"type": "number"
				},
				"lineType": {
					"maxLength": 30,
					"type": "string"
				},
				"indentation": {
					"format": "int32",
					"type": "integer"
				},
				"dateFilter": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"unitofmeasuretype": {
			"type": "object",
			"properties": {
				"code": {
					"maxLength": 10,
					"type": "string"
				},
				"displayName": {
					"maxLength": 50,
					"type": "string"
				},
				"symbol": {
					"maxLength": 10,
					"type": "string"
				},
				"unitConversion": {
					"$ref": "#/definitions/itemunitofmeasureconversiontype"
				},
				"picture": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/picture"
					}
				},
				"defaultDimensions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/defaultDimensions"
					}
				},
				"itemCategory": {
					"$ref": "#/definitions/itemCategory"
				}
			}
		},
		"salesOrder": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"number": {
					"maxLength": 20,
					"type": "string"
				},
				"externalDocumentNumber": {
					"maxLength": 35,
					"type": "string"
				},
				"orderDate": {
					"format": "date-time",
					"type": "string"
				},
				"customerId": {
					"format": "uuid",
					"type": "string"
				},
				"contactId": {
					"maxLength": 250,
					"type": "string"
				},
				"customerNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"customerName": {
					"maxLength": 100,
					"type": "string"
				},
				"billToName": {
					"maxLength": 100,
					"type": "string"
				},
				"billToCustomerId": {
					"format": "uuid",
					"type": "string"
				},
				"billToCustomerNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"shipToName": {
					"maxLength": 100,
					"type": "string"
				},
				"shipToContact": {
					"maxLength": 100,
					"type": "string"
				},
				"sellingPostalAddress": {
					"$ref": "#/definitions/postaladdresstype"
				},
				"billingPostalAddress": {
					"$ref": "#/definitions/postaladdresstype"
				},
				"shippingPostalAddress": {
					"$ref": "#/definitions/postaladdresstype"
				},
				"currencyId": {
					"format": "uuid",
					"type": "string"
				},
				"currencyCode": {
					"type": "string"
				},
				"pricesIncludeTax": {
					"type": "boolean"
				},
				"paymentTermsId": {
					"format": "uuid",
					"type": "string"
				},
				"salesperson": {
					"maxLength": 20,
					"type": "string"
				},
				"partialShipping": {
					"type": "boolean"
				},
				"requestedDeliveryDate": {
					"format": "date-time",
					"type": "string"
				},
				"discountAmount": {
					"format": "decimal",
					"type": "number"
				},
				"discountAppliedBeforeTax": {
					"type": "boolean"
				},
				"totalAmountExcludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"totalTaxAmount": {
					"format": "decimal",
					"type": "number"
				},
				"totalAmountIncludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"fullyShipped": {
					"type": "boolean"
				},
				"status": {
					"type": "string"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"phoneNumber": {
					"maxLength": 30,
					"type": "string"
				},
				"email": {
					"maxLength": 80,
					"type": "string"
				},
				"salesOrderLines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/salesOrderLine"
					}
				},
				"customer": {
					"$ref": "#/definitions/customer"
				},
				"currency": {
					"$ref": "#/definitions/currency"
				},
				"paymentTerm": {
					"$ref": "#/definitions/paymentTerm"
				}
			}
		},
		"attachments": {
			"type": "object",
			"properties": {
				"parentId": {
					"format": "uuid",
					"type": "string"
				},
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"fileName": {
					"maxLength": 250,
					"type": "string"
				},
				"byteSize": {
					"format": "int32",
					"type": "integer"
				},
				"content": {
					"format": "binary",
					"type": "string"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"itemCategory": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"code": {
					"maxLength": 20,
					"type": "string"
				},
				"displayName": {
					"maxLength": 100,
					"type": "string"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"dimensionLine": {
			"type": "object",
			"properties": {
				"parentId": {
					"format": "uuid",
					"type": "string"
				},
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"code": {
					"maxLength": 20,
					"type": "string"
				},
				"displayName": {
					"maxLength": 30,
					"type": "string"
				},
				"valueId": {
					"format": "uuid",
					"type": "string"
				},
				"valueCode": {
					"type": "string"
				},
				"valueDisplayName": {
					"maxLength": 50,
					"type": "string"
				},
				"dimension": {
					"$ref": "#/definitions/dimension"
				}
			}
		},
		"picture": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"width": {
					"format": "int32",
					"type": "integer"
				},
				"height": {
					"format": "int32",
					"type": "integer"
				},
				"contentType": {
					"maxLength": 100,
					"type": "string"
				},
				"content": {
					"format": "binary",
					"type": "string"
				}
			}
		},
		"salesInvoiceLine": {
			"type": "object",
			"properties": {
				"id": {
					"maxLength": 50,
					"type": "string"
				},
				"documentId": {
					"format": "uuid",
					"type": "string"
				},
				"sequence": {
					"format": "int32",
					"type": "integer"
				},
				"itemId": {
					"format": "uuid",
					"type": "string"
				},
				"accountId": {
					"format": "uuid",
					"type": "string"
				},
				"lineType": {
					"type": "string"
				},
				"lineDetails": {
					"$ref": "#/definitions/documentlineobjectdetailstype"
				},
				"description": {
					"maxLength": 100,
					"type": "string"
				},
				"unitOfMeasureId": {
					"format": "uuid",
					"type": "string"
				},
				"unitOfMeasure": {
					"$ref": "#/definitions/unitofmeasuretype"
				},
				"unitPrice": {
					"format": "decimal",
					"type": "number"
				},
				"quantity": {
					"format": "decimal",
					"type": "number"
				},
				"discountAmount": {
					"format": "decimal",
					"type": "number"
				},
				"discountPercent": {
					"format": "decimal",
					"type": "number"
				},
				"discountAppliedBeforeTax": {
					"type": "boolean"
				},
				"amountExcludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"taxCode": {
					"maxLength": 50,
					"type": "string"
				},
				"taxPercent": {
					"format": "decimal",
					"type": "number"
				},
				"totalTaxAmount": {
					"format": "decimal",
					"type": "number"
				},
				"amountIncludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"invoiceDiscountAllocation": {
					"format": "decimal",
					"type": "number"
				},
				"netAmount": {
					"format": "decimal",
					"type": "number"
				},
				"netTaxAmount": {
					"format": "decimal",
					"type": "number"
				},
				"netAmountIncludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"shipmentDate": {
					"format": "date-time",
					"type": "string"
				},
				"item": {
					"$ref": "#/definitions/item"
				},
				"account": {
					"$ref": "#/definitions/account"
				}
			}
		},
		"customerFinancialDetail": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"number": {
					"maxLength": 20,
					"type": "string"
				},
				"balance": {
					"format": "decimal",
					"type": "number"
				},
				"totalSalesExcludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"overdueAmount": {
					"format": "decimal",
					"type": "number"
				}
			}
		},
		"salesCreditMemoLine": {
			"type": "object",
			"properties": {
				"id": {
					"maxLength": 50,
					"type": "string"
				},
				"documentId": {
					"format": "uuid",
					"type": "string"
				},
				"sequence": {
					"format": "int32",
					"type": "integer"
				},
				"itemId": {
					"format": "uuid",
					"type": "string"
				},
				"accountId": {
					"format": "uuid",
					"type": "string"
				},
				"lineType": {
					"type": "string"
				},
				"lineDetails": {
					"$ref": "#/definitions/documentlineobjectdetailstype"
				},
				"description": {
					"maxLength": 100,
					"type": "string"
				},
				"unitOfMeasureId": {
					"format": "uuid",
					"type": "string"
				},
				"unitOfMeasure": {
					"$ref": "#/definitions/unitofmeasuretype"
				},
				"unitPrice": {
					"format": "decimal",
					"type": "number"
				},
				"quantity": {
					"format": "decimal",
					"type": "number"
				},
				"discountAmount": {
					"format": "decimal",
					"type": "number"
				},
				"discountPercent": {
					"format": "decimal",
					"type": "number"
				},
				"discountAppliedBeforeTax": {
					"type": "boolean"
				},
				"amountExcludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"taxCode": {
					"maxLength": 50,
					"type": "string"
				},
				"taxPercent": {
					"format": "decimal",
					"type": "number"
				},
				"totalTaxAmount": {
					"format": "decimal",
					"type": "number"
				},
				"amountIncludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"invoiceDiscountAllocation": {
					"format": "decimal",
					"type": "number"
				},
				"netAmount": {
					"format": "decimal",
					"type": "number"
				},
				"netTaxAmount": {
					"format": "decimal",
					"type": "number"
				},
				"netAmountIncludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"shipmentDate": {
					"format": "date-time",
					"type": "string"
				},
				"item": {
					"$ref": "#/definitions/item"
				},
				"account": {
					"$ref": "#/definitions/account"
				}
			}
		},
		"pdfDocument": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"content": {
					"format": "binary",
					"type": "string"
				}
			}
		},
		"salesCreditMemo": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"number": {
					"maxLength": 20,
					"type": "string"
				},
				"externalDocumentNumber": {
					"maxLength": 35,
					"type": "string"
				},
				"creditMemoDate": {
					"format": "date-time",
					"type": "string"
				},
				"dueDate": {
					"format": "date-time",
					"type": "string"
				},
				"customerId": {
					"format": "uuid",
					"type": "string"
				},
				"contactId": {
					"maxLength": 250,
					"type": "string"
				},
				"customerNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"customerName": {
					"maxLength": 100,
					"type": "string"
				},
				"billToName": {
					"maxLength": 100,
					"type": "string"
				},
				"billToCustomerId": {
					"format": "uuid",
					"type": "string"
				},
				"billToCustomerNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"sellingPostalAddress": {
					"$ref": "#/definitions/postaladdresstype"
				},
				"billingPostalAddress": {
					"$ref": "#/definitions/postaladdresstype"
				},
				"currencyId": {
					"format": "uuid",
					"type": "string"
				},
				"currencyCode": {
					"type": "string"
				},
				"paymentTermsId": {
					"format": "uuid",
					"type": "string"
				},
				"salesperson": {
					"maxLength": 20,
					"type": "string"
				},
				"pricesIncludeTax": {
					"type": "boolean"
				},
				"discountAmount": {
					"format": "decimal",
					"type": "number"
				},
				"discountAppliedBeforeTax": {
					"type": "boolean"
				},
				"totalAmountExcludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"totalTaxAmount": {
					"format": "decimal",
					"type": "number"
				},
				"totalAmountIncludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"status": {
					"type": "string"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"invoiceId": {
					"format": "uuid",
					"type": "string"
				},
				"invoiceNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"phoneNumber": {
					"maxLength": 30,
					"type": "string"
				},
				"email": {
					"maxLength": 80,
					"type": "string"
				},
				"salesCreditMemoLines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/salesCreditMemoLine"
					}
				},
				"pdfDocument": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/pdfDocument"
					}
				},
				"customer": {
					"$ref": "#/definitions/customer"
				},
				"currency": {
					"$ref": "#/definitions/currency"
				},
				"paymentTerm": {
					"$ref": "#/definitions/paymentTerm"
				}
			}
		},
		"vendorPurchase": {
			"type": "object",
			"properties": {
				"vendorId": {
					"format": "uuid",
					"type": "string"
				},
				"vendorNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"name": {
					"maxLength": 100,
					"type": "string"
				},
				"totalPurchaseAmount": {
					"format": "decimal",
					"type": "number"
				},
				"dateFilter_FilterOnly": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"incomeStatement": {
			"type": "object",
			"properties": {
				"lineNumber": {
					"format": "int32",
					"type": "integer"
				},
				"display": {
					"maxLength": 250,
					"type": "string"
				},
				"netChange": {
					"format": "decimal",
					"type": "number"
				},
				"lineType": {
					"maxLength": 30,
					"type": "string"
				},
				"indentation": {
					"format": "int32",
					"type": "integer"
				},
				"dateFilter": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"generalLedgerEntry": {
			"type": "object",
			"properties": {
				"id": {
					"format": "int32",
					"type": "integer"
				},
				"postingDate": {
					"format": "date-time",
					"type": "string"
				},
				"documentNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"documentType": {
					"type": "string"
				},
				"accountId": {
					"format": "uuid",
					"type": "string"
				},
				"accountNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"description": {
					"maxLength": 100,
					"type": "string"
				},
				"debitAmount": {
					"format": "decimal",
					"type": "number"
				},
				"creditAmount": {
					"format": "decimal",
					"type": "number"
				},
				"dimensions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/dimensiontype"
					}
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"account": {
					"$ref": "#/definitions/account"
				}
			}
		},
		"customerSale": {
			"type": "object",
			"properties": {
				"customerId": {
					"format": "uuid",
					"type": "string"
				},
				"customerNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"name": {
					"maxLength": 100,
					"type": "string"
				},
				"totalSalesAmount": {
					"format": "decimal",
					"type": "number"
				},
				"dateFilter_FilterOnly": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"countryRegion": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"code": {
					"maxLength": 10,
					"type": "string"
				},
				"displayName": {
					"maxLength": 50,
					"type": "string"
				},
				"addressFormat": {
					"type": "string"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"purchaseInvoiceLine": {
			"type": "object",
			"properties": {
				"id": {
					"maxLength": 50,
					"type": "string"
				},
				"documentId": {
					"format": "uuid",
					"type": "string"
				},
				"sequence": {
					"format": "int32",
					"type": "integer"
				},
				"itemId": {
					"format": "uuid",
					"type": "string"
				},
				"accountId": {
					"format": "uuid",
					"type": "string"
				},
				"lineType": {
					"type": "string"
				},
				"lineDetails": {
					"$ref": "#/definitions/documentlineobjectdetailstype"
				},
				"description": {
					"maxLength": 100,
					"type": "string"
				},
				"unitOfMeasure": {
					"$ref": "#/definitions/unitofmeasuretype"
				},
				"unitCost": {
					"format": "decimal",
					"type": "number"
				},
				"quantity": {
					"format": "decimal",
					"type": "number"
				},
				"discountAmount": {
					"format": "decimal",
					"type": "number"
				},
				"discountPercent": {
					"format": "decimal",
					"type": "number"
				},
				"discountAppliedBeforeTax": {
					"type": "boolean"
				},
				"amountExcludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"taxCode": {
					"maxLength": 50,
					"type": "string"
				},
				"taxPercent": {
					"format": "decimal",
					"type": "number"
				},
				"totalTaxAmount": {
					"format": "decimal",
					"type": "number"
				},
				"amountIncludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"invoiceDiscountAllocation": {
					"format": "decimal",
					"type": "number"
				},
				"netAmount": {
					"format": "decimal",
					"type": "number"
				},
				"netTaxAmount": {
					"format": "decimal",
					"type": "number"
				},
				"netAmountIncludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"expectedReceiptDate": {
					"format": "date-time",
					"type": "string"
				},
				"item": {
					"$ref": "#/definitions/item"
				},
				"account": {
					"$ref": "#/definitions/account"
				}
			}
		},
		"dimensionValue": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"code": {
					"maxLength": 20,
					"type": "string"
				},
				"displayName": {
					"maxLength": 50,
					"type": "string"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"vendor": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"number": {
					"maxLength": 20,
					"type": "string"
				},
				"displayName": {
					"maxLength": 100,
					"type": "string"
				},
				"address": {
					"$ref": "#/definitions/postaladdresstype"
				},
				"phoneNumber": {
					"maxLength": 30,
					"type": "string"
				},
				"email": {
					"maxLength": 80,
					"type": "string"
				},
				"website": {
					"maxLength": 80,
					"type": "string"
				},
				"taxRegistrationNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"currencyId": {
					"format": "uuid",
					"type": "string"
				},
				"currencyCode": {
					"type": "string"
				},
				"irs1099Code": {
					"type": "string"
				},
				"paymentTermsId": {
					"format": "uuid",
					"type": "string"
				},
				"paymentMethodId": {
					"format": "uuid",
					"type": "string"
				},
				"taxLiable": {
					"type": "boolean"
				},
				"blocked": {
					"type": "string"
				},
				"balance": {
					"format": "decimal",
					"type": "number"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"picture": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/picture"
					}
				},
				"defaultDimensions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/defaultDimensions"
					}
				},
				"currency": {
					"$ref": "#/definitions/currency"
				},
				"paymentTerm": {
					"$ref": "#/definitions/paymentTerm"
				},
				"paymentMethod": {
					"$ref": "#/definitions/paymentMethod"
				}
			}
		},
		"customer": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"number": {
					"maxLength": 20,
					"type": "string"
				},
				"displayName": {
					"maxLength": 100,
					"type": "string"
				},
				"type": {
					"type": "string"
				},
				"address": {
					"$ref": "#/definitions/postaladdresstype"
				},
				"phoneNumber": {
					"maxLength": 30,
					"type": "string"
				},
				"email": {
					"maxLength": 80,
					"type": "string"
				},
				"website": {
					"maxLength": 80,
					"type": "string"
				},
				"taxLiable": {
					"type": "boolean"
				},
				"taxAreaId": {
					"format": "uuid",
					"type": "string"
				},
				"taxAreaDisplayName": {
					"type": "string"
				},
				"taxRegistrationNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"currencyId": {
					"format": "uuid",
					"type": "string"
				},
				"currencyCode": {
					"type": "string"
				},
				"paymentTermsId": {
					"format": "uuid",
					"type": "string"
				},
				"shipmentMethodId": {
					"format": "uuid",
					"type": "string"
				},
				"paymentMethodId": {
					"format": "uuid",
					"type": "string"
				},
				"blocked": {
					"type": "string"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"customerFinancialDetails": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/customerFinancialDetail"
					}
				},
				"picture": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/picture"
					}
				},
				"defaultDimensions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/defaultDimensions"
					}
				},
				"currency": {
					"$ref": "#/definitions/currency"
				},
				"paymentTerm": {
					"$ref": "#/definitions/paymentTerm"
				},
				"shipmentMethod": {
					"$ref": "#/definitions/shipmentMethod"
				},
				"paymentMethod": {
					"$ref": "#/definitions/paymentMethod"
				}
			}
		},
		"item": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"number": {
					"maxLength": 20,
					"type": "string"
				},
				"displayName": {
					"maxLength": 100,
					"type": "string"
				},
				"type": {
					"type": "string"
				},
				"itemCategoryId": {
					"format": "uuid",
					"type": "string"
				},
				"itemCategoryCode": {
					"maxLength": 20,
					"type": "string"
				},
				"blocked": {
					"type": "boolean"
				},
				"baseUnitOfMeasureId": {
					"format": "uuid",
					"type": "string"
				},
				"baseUnitOfMeasure": {
					"$ref": "#/definitions/unitofmeasuretype"
				},
				"gtin": {
					"maxLength": 14,
					"type": "string"
				},
				"inventory": {
					"format": "decimal",
					"type": "number"
				},
				"unitPrice": {
					"format": "decimal",
					"type": "number"
				},
				"priceIncludesTax": {
					"type": "boolean"
				},
				"unitCost": {
					"format": "decimal",
					"type": "number"
				},
				"taxGroupId": {
					"format": "uuid",
					"type": "string"
				},
				"taxGroupCode": {
					"maxLength": 20,
					"type": "string"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"picture": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/picture"
					}
				},
				"defaultDimensions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/defaultDimensions"
					}
				},
				"itemCategory": {
					"$ref": "#/definitions/itemCategory"
				}
			}
		},
		"journal": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"code": {
					"maxLength": 10,
					"type": "string"
				},
				"displayName": {
					"maxLength": 100,
					"type": "string"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"balancingAccountId": {
					"format": "uuid",
					"type": "string"
				},
				"balancingAccountNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"journalLines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/journalLine"
					}
				},
				"account": {
					"$ref": "#/definitions/account"
				}
			}
		},
		"account": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"number": {
					"maxLength": 20,
					"type": "string"
				},
				"displayName": {
					"maxLength": 100,
					"type": "string"
				},
				"category": {
					"type": "string"
				},
				"subCategory": {
					"maxLength": 80,
					"type": "string"
				},
				"blocked": {
					"type": "boolean"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"retainedEarningsStatement": {
			"type": "object",
			"properties": {
				"lineNumber": {
					"format": "int32",
					"type": "integer"
				},
				"display": {
					"maxLength": 250,
					"type": "string"
				},
				"netChange": {
					"format": "decimal",
					"type": "number"
				},
				"lineType": {
					"maxLength": 30,
					"type": "string"
				},
				"indentation": {
					"format": "int32",
					"type": "integer"
				},
				"dateFilter": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"purchaseInvoice": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"number": {
					"maxLength": 20,
					"type": "string"
				},
				"invoiceDate": {
					"format": "date-time",
					"type": "string"
				},
				"dueDate": {
					"format": "date-time",
					"type": "string"
				},
				"vendorInvoiceNumber": {
					"maxLength": 35,
					"type": "string"
				},
				"vendorId": {
					"format": "uuid",
					"type": "string"
				},
				"vendorNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"vendorName": {
					"maxLength": 100,
					"type": "string"
				},
				"payToName": {
					"maxLength": 100,
					"type": "string"
				},
				"payToContact": {
					"maxLength": 100,
					"type": "string"
				},
				"payToVendorId": {
					"format": "uuid",
					"type": "string"
				},
				"payToVendorNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"shipToName": {
					"maxLength": 100,
					"type": "string"
				},
				"shipToContact": {
					"maxLength": 100,
					"type": "string"
				},
				"buyFromAddress": {
					"$ref": "#/definitions/postaladdresstype"
				},
				"payToAddress": {
					"$ref": "#/definitions/postaladdresstype"
				},
				"shipToAddress": {
					"$ref": "#/definitions/postaladdresstype"
				},
				"currencyId": {
					"format": "uuid",
					"type": "string"
				},
				"currencyCode": {
					"type": "string"
				},
				"pricesIncludeTax": {
					"type": "boolean"
				},
				"discountAmount": {
					"format": "decimal",
					"type": "number"
				},
				"discountAppliedBeforeTax": {
					"type": "boolean"
				},
				"totalAmountExcludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"totalTaxAmount": {
					"format": "decimal",
					"type": "number"
				},
				"totalAmountIncludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"status": {
					"type": "string"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"purchaseInvoiceLines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/purchaseInvoiceLine"
					}
				},
				"pdfDocument": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/pdfDocument"
					}
				},
				"vendor": {
					"$ref": "#/definitions/vendor"
				},
				"currency": {
					"$ref": "#/definitions/currency"
				}
			}
		},
		"dimension": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"code": {
					"maxLength": 20,
					"type": "string"
				},
				"displayName": {
					"maxLength": 30,
					"type": "string"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"dimensionValues": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/dimensionValue"
					}
				}
			}
		},
		"salesOrderLine": {
			"type": "object",
			"properties": {
				"id": {
					"maxLength": 50,
					"type": "string"
				},
				"documentId": {
					"format": "uuid",
					"type": "string"
				},
				"sequence": {
					"format": "int32",
					"type": "integer"
				},
				"itemId": {
					"format": "uuid",
					"type": "string"
				},
				"accountId": {
					"format": "uuid",
					"type": "string"
				},
				"lineType": {
					"type": "string"
				},
				"lineDetails": {
					"$ref": "#/definitions/documentlineobjectdetailstype"
				},
				"description": {
					"maxLength": 100,
					"type": "string"
				},
				"unitOfMeasureId": {
					"format": "uuid",
					"type": "string"
				},
				"unitOfMeasure": {
					"$ref": "#/definitions/unitofmeasuretype"
				},
				"quantity": {
					"format": "decimal",
					"type": "number"
				},
				"unitPrice": {
					"format": "decimal",
					"type": "number"
				},
				"discountAmount": {
					"format": "decimal",
					"type": "number"
				},
				"discountPercent": {
					"format": "decimal",
					"type": "number"
				},
				"discountAppliedBeforeTax": {
					"type": "boolean"
				},
				"amountExcludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"taxCode": {
					"maxLength": 50,
					"type": "string"
				},
				"taxPercent": {
					"format": "decimal",
					"type": "number"
				},
				"totalTaxAmount": {
					"format": "decimal",
					"type": "number"
				},
				"amountIncludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"invoiceDiscountAllocation": {
					"format": "decimal",
					"type": "number"
				},
				"netAmount": {
					"format": "decimal",
					"type": "number"
				},
				"netTaxAmount": {
					"format": "decimal",
					"type": "number"
				},
				"netAmountIncludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"shipmentDate": {
					"format": "date-time",
					"type": "string"
				},
				"shippedQuantity": {
					"format": "decimal",
					"type": "number"
				},
				"invoicedQuantity": {
					"format": "decimal",
					"type": "number"
				},
				"invoiceQuantity": {
					"format": "decimal",
					"type": "number"
				},
				"shipQuantity": {
					"format": "decimal",
					"type": "number"
				},
				"item": {
					"$ref": "#/definitions/item"
				},
				"account": {
					"$ref": "#/definitions/account"
				}
			}
		},
		"timeRegistrationEntry": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"employeeId": {
					"format": "uuid",
					"type": "string"
				},
				"employeeNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"lineNumber": {
					"format": "int32",
					"type": "integer"
				},
				"date": {
					"format": "date-time",
					"type": "string"
				},
				"quantity": {
					"format": "decimal",
					"type": "number"
				},
				"status": {
					"type": "string"
				},
				"unitOfMeasureId": {
					"format": "uuid",
					"type": "string"
				},
				"unitOfMeasure": {
					"$ref": "#/definitions/unitofmeasuretype"
				},
				"lastModfiedDateTime": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"paymentTerm": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"code": {
					"maxLength": 10,
					"type": "string"
				},
				"displayName": {
					"maxLength": 100,
					"type": "string"
				},
				"dueDateCalculation": {
					"type": "string"
				},
				"discountDateCalculation": {
					"type": "string"
				},
				"discountPercent": {
					"format": "decimal",
					"type": "number"
				},
				"calculateDiscountOnCreditMemos": {
					"type": "boolean"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"customerPayment": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"journalDisplayName": {
					"type": "string"
				},
				"lineNumber": {
					"format": "int32",
					"type": "integer"
				},
				"customerId": {
					"format": "uuid",
					"type": "string"
				},
				"customerNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"contactId": {
					"maxLength": 250,
					"type": "string"
				},
				"postingDate": {
					"format": "date-time",
					"type": "string"
				},
				"documentNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"externalDocumentNumber": {
					"maxLength": 35,
					"type": "string"
				},
				"amount": {
					"format": "decimal",
					"type": "number"
				},
				"appliesToInvoiceId": {
					"format": "uuid",
					"type": "string"
				},
				"appliesToInvoiceNumber": {
					"type": "string"
				},
				"description": {
					"maxLength": 100,
					"type": "string"
				},
				"comment": {
					"maxLength": 250,
					"type": "string"
				},
				"dimensions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/dimensiontype"
					}
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"customer": {
					"$ref": "#/definitions/customer"
				}
			}
		},
		"trialBalance": {
			"type": "object",
			"properties": {
				"number": {
					"maxLength": 20,
					"type": "string"
				},
				"accountId": {
					"format": "uuid",
					"type": "string"
				},
				"accountType": {
					"type": "string"
				},
				"display": {
					"maxLength": 100,
					"type": "string"
				},
				"totalDebit": {
					"maxLength": 30,
					"type": "string"
				},
				"totalCredit": {
					"maxLength": 30,
					"type": "string"
				},
				"balanceAtDateDebit": {
					"maxLength": 30,
					"type": "string"
				},
				"balanceAtDateCredit": {
					"maxLength": 30,
					"type": "string"
				},
				"dateFilter": {
					"format": "date-time",
					"type": "string"
				},
				"account": {
					"$ref": "#/definitions/account"
				}
			}
		},
		"agedAccountsPayable": {
			"type": "object",
			"properties": {
				"vendorId": {
					"format": "uuid",
					"type": "string"
				},
				"vendorNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"name": {
					"maxLength": 100,
					"type": "string"
				},
				"currencyCode": {
					"maxLength": 10,
					"type": "string"
				},
				"balanceDue": {
					"format": "decimal",
					"type": "number"
				},
				"currentAmount": {
					"format": "decimal",
					"type": "number"
				},
				"period1Amount": {
					"format": "decimal",
					"type": "number"
				},
				"period2Amount": {
					"format": "decimal",
					"type": "number"
				},
				"period3Amount": {
					"format": "decimal",
					"type": "number"
				},
				"agedAsOfDate": {
					"format": "date-time",
					"type": "string"
				},
				"periodLengthFilter": {
					"maxLength": 10,
					"type": "string"
				}
			}
		},
		"customerPaymentJournal": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"code": {
					"maxLength": 10,
					"type": "string"
				},
				"displayName": {
					"maxLength": 100,
					"type": "string"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"balancingAccountId": {
					"format": "uuid",
					"type": "string"
				},
				"balancingAccountNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"customerPayments": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/customerPayment"
					}
				},
				"account": {
					"$ref": "#/definitions/account"
				}
			}
		},
		"journalLine": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"journalDisplayName": {
					"type": "string"
				},
				"lineNumber": {
					"format": "int32",
					"type": "integer"
				},
				"accountId": {
					"format": "uuid",
					"type": "string"
				},
				"accountNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"postingDate": {
					"format": "date-time",
					"type": "string"
				},
				"documentNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"externalDocumentNumber": {
					"maxLength": 35,
					"type": "string"
				},
				"amount": {
					"format": "decimal",
					"type": "number"
				},
				"description": {
					"maxLength": 100,
					"type": "string"
				},
				"comment": {
					"maxLength": 250,
					"type": "string"
				},
				"dimensions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/dimensiontype"
					}
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"attachments": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/attachments"
					}
				},
				"account": {
					"$ref": "#/definitions/account"
				}
			}
		},
		"documentlineobjectdetailstype": {
			"type": "object",
			"properties": {
				"number": {
					"maxLength": 20,
					"type": "string"
				},
				"displayName": {
					"maxLength": 100,
					"type": "string"
				},
				"item": {
					"$ref": "#/definitions/item"
				},
				"account": {
					"$ref": "#/definitions/account"
				}
			}
		},
		"itemunitofmeasureconversiontype": {
			"type": "object",
			"properties": {
				"toUnitOfMeasure": {
					"maxLength": 10,
					"type": "string"
				},
				"fromToConversionRate": {
					"format": "decimal",
					"type": "number"
				},
				"picture": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/picture"
					}
				},
				"defaultDimensions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/defaultDimensions"
					}
				},
				"itemCategory": {
					"$ref": "#/definitions/itemCategory"
				}
			}
		},
		"postaladdresstype": {
			"type": "object",
			"properties": {
				"street": {
					"maxLength": 152,
					"type": "string"
				},
				"city": {
					"maxLength": 30,
					"type": "string"
				},
				"state": {
					"maxLength": 30,
					"type": "string"
				},
				"countryLetterCode": {
					"maxLength": 10,
					"type": "string"
				},
				"postalCode": {
					"maxLength": 20,
					"type": "string"
				},
				"customerFinancialDetails": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/customerFinancialDetail"
					}
				},
				"picture": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/picture"
					}
				},
				"defaultDimensions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/defaultDimensions"
					}
				},
				"currency": {
					"$ref": "#/definitions/currency"
				},
				"paymentTerm": {
					"$ref": "#/definitions/paymentTerm"
				},
				"shipmentMethod": {
					"$ref": "#/definitions/shipmentMethod"
				},
				"paymentMethod": {
					"$ref": "#/definitions/paymentMethod"
				}
			}
		},
		"salesInvoice": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"number": {
					"maxLength": 20,
					"type": "string"
				},
				"externalDocumentNumber": {
					"maxLength": 35,
					"type": "string"
				},
				"invoiceDate": {
					"format": "date-time",
					"type": "string"
				},
				"dueDate": {
					"format": "date-time",
					"type": "string"
				},
				"customerPurchaseOrderReference": {
					"maxLength": 35,
					"type": "string"
				},
				"customerId": {
					"format": "uuid",
					"type": "string"
				},
				"contactId": {
					"maxLength": 250,
					"type": "string"
				},
				"customerNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"customerName": {
					"maxLength": 100,
					"type": "string"
				},
				"billToName": {
					"maxLength": 100,
					"type": "string"
				},
				"billToCustomerId": {
					"format": "uuid",
					"type": "string"
				},
				"billToCustomerNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"shipToName": {
					"maxLength": 100,
					"type": "string"
				},
				"shipToContact": {
					"maxLength": 100,
					"type": "string"
				},
				"sellingPostalAddress": {
					"$ref": "#/definitions/postaladdresstype"
				},
				"billingPostalAddress": {
					"$ref": "#/definitions/postaladdresstype"
				},
				"shippingPostalAddress": {
					"$ref": "#/definitions/postaladdresstype"
				},
				"currencyId": {
					"format": "uuid",
					"type": "string"
				},
				"currencyCode": {
					"type": "string"
				},
				"orderId": {
					"format": "uuid",
					"type": "string"
				},
				"orderNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"paymentTermsId": {
					"format": "uuid",
					"type": "string"
				},
				"shipmentMethodId": {
					"format": "uuid",
					"type": "string"
				},
				"salesperson": {
					"maxLength": 20,
					"type": "string"
				},
				"pricesIncludeTax": {
					"type": "boolean"
				},
				"discountAmount": {
					"format": "decimal",
					"type": "number"
				},
				"discountAppliedBeforeTax": {
					"type": "boolean"
				},
				"totalAmountExcludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"totalTaxAmount": {
					"format": "decimal",
					"type": "number"
				},
				"totalAmountIncludingTax": {
					"format": "decimal",
					"type": "number"
				},
				"status": {
					"type": "string"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"phoneNumber": {
					"maxLength": 30,
					"type": "string"
				},
				"email": {
					"maxLength": 80,
					"type": "string"
				},
				"salesInvoiceLines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/salesInvoiceLine"
					}
				},
				"pdfDocument": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/pdfDocument"
					}
				},
				"customer": {
					"$ref": "#/definitions/customer"
				},
				"currency": {
					"$ref": "#/definitions/currency"
				},
				"paymentTerm": {
					"$ref": "#/definitions/paymentTerm"
				},
				"shipmentMethod": {
					"$ref": "#/definitions/shipmentMethod"
				}
			}
		},
		"generalLedgerEntryAttachments": {
			"type": "object",
			"properties": {
				"generalLedgerEntryNumber": {
					"format": "int32",
					"type": "integer"
				},
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"fileName": {
					"maxLength": 250,
					"type": "string"
				},
				"byteSize": {
					"format": "int32",
					"type": "integer"
				},
				"content": {
					"format": "binary",
					"type": "string"
				},
				"createdDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"generalLedgerEntry": {
					"$ref": "#/definitions/generalLedgerEntry"
				}
			}
		},
		"unitOfMeasure": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"code": {
					"maxLength": 10,
					"type": "string"
				},
				"displayName": {
					"maxLength": 50,
					"type": "string"
				},
				"internationalStandardCode": {
					"maxLength": 10,
					"type": "string"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"currency": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"code": {
					"maxLength": 10,
					"type": "string"
				},
				"displayName": {
					"maxLength": 30,
					"type": "string"
				},
				"symbol": {
					"maxLength": 10,
					"type": "string"
				},
				"amountDecimalPlaces": {
					"maxLength": 5,
					"type": "string"
				},
				"amountRoundingPrecision": {
					"format": "decimal",
					"type": "number"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"defaultDimensions": {
			"type": "object",
			"properties": {
				"parentId": {
					"format": "uuid",
					"type": "string"
				},
				"dimensionId": {
					"format": "uuid",
					"type": "string"
				},
				"dimensionCode": {
					"maxLength": 20,
					"type": "string"
				},
				"dimensionValueId": {
					"format": "uuid",
					"type": "string"
				},
				"dimensionValueCode": {
					"maxLength": 20,
					"type": "string"
				},
				"postingValidation": {
					"type": "string"
				},
				"account": {
					"$ref": "#/definitions/account"
				},
				"dimension": {
					"$ref": "#/definitions/dimension"
				},
				"dimensionValue": {
					"$ref": "#/definitions/dimensionValue"
				}
			}
		},
		"company": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"systemVersion": {
					"type": "string"
				},
				"name": {
					"maxLength": 30,
					"type": "string"
				},
				"displayName": {
					"maxLength": 250,
					"type": "string"
				},
				"businessProfileId": {
					"maxLength": 250,
					"type": "string"
				},
				"items": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/item"
					}
				},
				"picture": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/picture"
					}
				},
				"defaultDimensions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/defaultDimensions"
					}
				},
				"customers": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/customer"
					}
				},
				"customerFinancialDetails": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/customerFinancialDetail"
					}
				},
				"vendors": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/vendor"
					}
				},
				"companyInformation": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/companyInformation"
					}
				},
				"salesInvoices": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/salesInvoice"
					}
				},
				"salesInvoiceLines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/salesInvoiceLine"
					}
				},
				"pdfDocument": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/pdfDocument"
					}
				},
				"customerPaymentJournals": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/customerPaymentJournal"
					}
				},
				"customerPayments": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/customerPayment"
					}
				},
				"accounts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/account"
					}
				},
				"taxGroups": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/taxGroup"
					}
				},
				"journals": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/journal"
					}
				},
				"journalLines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/journalLine"
					}
				},
				"attachments": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/attachments"
					}
				},
				"employees": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/employee"
					}
				},
				"timeRegistrationEntries": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/timeRegistrationEntry"
					}
				},
				"generalLedgerEntries": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/generalLedgerEntry"
					}
				},
				"currencies": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/currency"
					}
				},
				"paymentMethods": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/paymentMethod"
					}
				},
				"dimensions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/dimension"
					}
				},
				"dimensionValues": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/dimensionValue"
					}
				},
				"dimensionLines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/dimensionLine"
					}
				},
				"paymentTerms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/paymentTerm"
					}
				},
				"shipmentMethods": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/shipmentMethod"
					}
				},
				"itemCategories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/itemCategory"
					}
				},
				"cashFlowStatement": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/cashFlowStatement"
					}
				},
				"countriesRegions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/countryRegion"
					}
				},
				"salesOrders": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/salesOrder"
					}
				},
				"salesOrderLines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/salesOrderLine"
					}
				},
				"retainedEarningsStatement": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/retainedEarningsStatement"
					}
				},
				"unitsOfMeasure": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/unitOfMeasure"
					}
				},
				"agedAccountsReceivable": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/agedAccountsReceivable"
					}
				},
				"agedAccountsPayable": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/agedAccountsPayable"
					}
				},
				"balanceSheet": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/balanceSheet"
					}
				},
				"trialBalance": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/trialBalance"
					}
				},
				"incomeStatement": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/incomeStatement"
					}
				},
				"taxAreas": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/taxArea"
					}
				},
				"salesQuotes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/salesQuote"
					}
				},
				"salesQuoteLines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/salesQuoteLine"
					}
				},
				"salesCreditMemos": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/salesCreditMemo"
					}
				},
				"salesCreditMemoLines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/salesCreditMemoLine"
					}
				},
				"generalLedgerEntryAttachments": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/generalLedgerEntryAttachments"
					}
				},
				"purchaseInvoices": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/purchaseInvoice"
					}
				},
				"purchaseInvoiceLines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/purchaseInvoiceLine"
					}
				},
				"customerSales": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/customerSale"
					}
				},
				"vendorPurchases": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/vendorPurchase"
					}
				}
			}
		},
		"shipmentMethod": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"code": {
					"maxLength": 10,
					"type": "string"
				},
				"displayName": {
					"maxLength": 100,
					"type": "string"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"balanceSheet": {
			"type": "object",
			"properties": {
				"lineNumber": {
					"format": "int32",
					"type": "integer"
				},
				"display": {
					"maxLength": 250,
					"type": "string"
				},
				"balance": {
					"format": "decimal",
					"type": "number"
				},
				"lineType": {
					"maxLength": 30,
					"type": "string"
				},
				"indentation": {
					"format": "int32",
					"type": "integer"
				},
				"dateFilter": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"dimensiontype": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"displayName": {
					"type": "string"
				},
				"valueCode": {
					"type": "string"
				},
				"valueDisplayName": {
					"type": "string"
				},
				"customer": {
					"$ref": "#/definitions/customer"
				}
			}
		},
		"taxGroup": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"code": {
					"maxLength": 20,
					"type": "string"
				},
				"displayName": {
					"maxLength": 100,
					"type": "string"
				},
				"taxType": {
					"type": "string"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				}
			}
		},
		"employee": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"number": {
					"maxLength": 20,
					"type": "string"
				},
				"displayName": {
					"type": "string"
				},
				"givenName": {
					"maxLength": 30,
					"type": "string"
				},
				"middleName": {
					"maxLength": 30,
					"type": "string"
				},
				"surname": {
					"maxLength": 30,
					"type": "string"
				},
				"jobTitle": {
					"maxLength": 30,
					"type": "string"
				},
				"address": {
					"$ref": "#/definitions/postaladdresstype"
				},
				"phoneNumber": {
					"maxLength": 30,
					"type": "string"
				},
				"mobilePhone": {
					"maxLength": 30,
					"type": "string"
				},
				"email": {
					"maxLength": 80,
					"type": "string"
				},
				"personalEmail": {
					"maxLength": 80,
					"type": "string"
				},
				"employmentDate": {
					"format": "date-time",
					"type": "string"
				},
				"terminationDate": {
					"format": "date-time",
					"type": "string"
				},
				"status": {
					"type": "string"
				},
				"birthDate": {
					"format": "date-time",
					"type": "string"
				},
				"statisticsGroupCode": {
					"maxLength": 10,
					"type": "string"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				},
				"picture": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/picture"
					}
				},
				"defaultDimensions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/defaultDimensions"
					}
				},
				"timeRegistrationEntries": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/timeRegistrationEntry"
					}
				}
			}
		},
		"agedAccountsReceivable": {
			"type": "object",
			"properties": {
				"customerId": {
					"format": "uuid",
					"type": "string"
				},
				"customerNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"name": {
					"maxLength": 100,
					"type": "string"
				},
				"currencyCode": {
					"maxLength": 10,
					"type": "string"
				},
				"balanceDue": {
					"format": "decimal",
					"type": "number"
				},
				"currentAmount": {
					"format": "decimal",
					"type": "number"
				},
				"period1Amount": {
					"format": "decimal",
					"type": "number"
				},
				"period2Amount": {
					"format": "decimal",
					"type": "number"
				},
				"period3Amount": {
					"format": "decimal",
					"type": "number"
				},
				"agedAsOfDate": {
					"format": "date-time",
					"type": "string"
				},
				"periodLengthFilter": {
					"maxLength": 10,
					"type": "string"
				}
			}
		},
		"companyInformation": {
			"type": "object",
			"properties": {
				"id": {
					"format": "uuid",
					"type": "string"
				},
				"displayName": {
					"maxLength": 100,
					"type": "string"
				},
				"address": {
					"$ref": "#/definitions/postaladdresstype"
				},
				"phoneNumber": {
					"maxLength": 30,
					"type": "string"
				},
				"faxNumber": {
					"maxLength": 30,
					"type": "string"
				},
				"email": {
					"maxLength": 80,
					"type": "string"
				},
				"website": {
					"maxLength": 80,
					"type": "string"
				},
				"taxRegistrationNumber": {
					"maxLength": 20,
					"type": "string"
				},
				"currencyCode": {
					"type": "string"
				},
				"currentFiscalYearStartDate": {
					"format": "date-time",
					"type": "string"
				},
				"industry": {
					"maxLength": 30,
					"type": "string"
				},
				"picture": {
					"format": "binary",
					"type": "string"
				},
				"lastModifiedDateTime": {
					"format": "date-time",
					"type": "string"
				}
			}
		}
	},
	"parameters": {
		"filterParam": {
			"in": "query",
			"name": "$filter",
			"description": "Filtering expression",
			"type": "string"
		},
		"topParam": {
			"in": "query",
			"name": "$top",
			"description": "Number of items to return from the top of the list",
			"type": "integer"
		},
		"skipParam": {
			"in": "query",
			"name": "$skip",
			"description": "Number of items to skip from the list",
			"type": "integer"
		},
		"limitParam": {
			"in": "query",
			"name": "$limit",
			"description": "Number of items to return from the list",
			"type": "integer"
		},
		"IfMatchParam": {
			"in": "header",
			"name": "If-Match",
			"description": "Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.",
			"required": true,
			"type": "string"
		}
	},
	"securityDefinitions": {
		"oAuth": {
			"type": "oauth2",
			"flow": "implicit",
			"authorizationUrl": "https://login.windows.net/common/oauth2/authorize?resource=https://api.businesscentral.dynamics.com",
			"scopes": {
				"Financials.ReadWrite.All": "financials.read.write.all"
			}
		}
	},
	"security": [
		{
			"oAuth": [
				"Financials.ReadWrite.All"
			]
		}
	],
	"tags": [
		{
			"name": "companies",
			"description": "BC Entity"
		},
		{
			"name": "items",
			"description": "BC Entity"
		},
		{
			"name": "picture",
			"description": "BC Entity"
		},
		{
			"name": "defaultDimensions",
			"description": "BC Entity"
		},
		{
			"name": "customers",
			"description": "BC Entity"
		},
		{
			"name": "customerFinancialDetails",
			"description": "BC Entity"
		},
		{
			"name": "vendors",
			"description": "BC Entity"
		},
		{
			"name": "companyInformation",
			"description": "BC Entity"
		},
		{
			"name": "salesInvoices",
			"description": "BC Entity"
		},
		{
			"name": "salesInvoiceLines",
			"description": "BC Entity"
		},
		{
			"name": "pdfDocument",
			"description": "BC Entity"
		},
		{
			"name": "customerPaymentJournals",
			"description": "BC Entity"
		},
		{
			"name": "customerPayments",
			"description": "BC Entity"
		},
		{
			"name": "accounts",
			"description": "BC Entity"
		},
		{
			"name": "taxGroups",
			"description": "BC Entity"
		},
		{
			"name": "journals",
			"description": "BC Entity"
		},
		{
			"name": "journalLines",
			"description": "BC Entity"
		},
		{
			"name": "attachments",
			"description": "BC Entity"
		},
		{
			"name": "employees",
			"description": "BC Entity"
		},
		{
			"name": "timeRegistrationEntries",
			"description": "BC Entity"
		},
		{
			"name": "generalLedgerEntries",
			"description": "BC Entity"
		},
		{
			"name": "currencies",
			"description": "BC Entity"
		},
		{
			"name": "paymentMethods",
			"description": "BC Entity"
		},
		{
			"name": "dimensions",
			"description": "BC Entity"
		},
		{
			"name": "dimensionValues",
			"description": "BC Entity"
		},
		{
			"name": "dimensionLines",
			"description": "BC Entity"
		},
		{
			"name": "paymentTerms",
			"description": "BC Entity"
		},
		{
			"name": "shipmentMethods",
			"description": "BC Entity"
		},
		{
			"name": "itemCategories",
			"description": "BC Entity"
		},
		{
			"name": "cashFlowStatement",
			"description": "BC Entity"
		},
		{
			"name": "countriesRegions",
			"description": "BC Entity"
		},
		{
			"name": "salesOrders",
			"description": "BC Entity"
		},
		{
			"name": "salesOrderLines",
			"description": "BC Entity"
		},
		{
			"name": "retainedEarningsStatement",
			"description": "BC Entity"
		},
		{
			"name": "unitsOfMeasure",
			"description": "BC Entity"
		},
		{
			"name": "agedAccountsReceivable",
			"description": "BC Entity"
		},
		{
			"name": "agedAccountsPayable",
			"description": "BC Entity"
		},
		{
			"name": "balanceSheet",
			"description": "BC Entity"
		},
		{
			"name": "trialBalance",
			"description": "BC Entity"
		},
		{
			"name": "incomeStatement",
			"description": "BC Entity"
		},
		{
			"name": "taxAreas",
			"description": "BC Entity"
		},
		{
			"name": "salesQuotes",
			"description": "BC Entity"
		},
		{
			"name": "salesQuoteLines",
			"description": "BC Entity"
		},
		{
			"name": "salesCreditMemos",
			"description": "BC Entity"
		},
		{
			"name": "salesCreditMemoLines",
			"description": "BC Entity"
		},
		{
			"name": "generalLedgerEntryAttachments",
			"description": "BC Entity"
		},
		{
			"name": "purchaseInvoices",
			"description": "BC Entity"
		},
		{
			"name": "purchaseInvoiceLines",
			"description": "BC Entity"
		},
		{
			"name": "customerSales",
			"description": "BC Entity"
		},
		{
			"name": "vendorPurchases",
			"description": "BC Entity"
		}
	]
}
